
we10fsm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006c0c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004c0  08006db0  08006db0  00007db0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007270  08007270  000091d4  2**0
                  CONTENTS
  4 .ARM          00000008  08007270  08007270  00008270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007278  08007278  000091d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007278  08007278  00008278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800727c  0800727c  0000827c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08007280  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000224  200001d4  08007454  000091d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003f8  08007454  000093f8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000091d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000076e8  00000000  00000000  00009204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000151d  00000000  00000000  000108ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000708  00000000  00000000  00011e10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000551  00000000  00000000  00012518  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001629e  00000000  00000000  00012a69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000803f  00000000  00000000  00028d07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008763b  00000000  00000000  00030d46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b8381  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000314c  00000000  00000000  000b83c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000bb510  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d4 	.word	0x200001d4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006d94 	.word	0x08006d94

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d8 	.word	0x200001d8
 80001dc:	08006d94 	.word	0x08006d94

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_uldivmod>:
 8000c98:	b953      	cbnz	r3, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9a:	b94a      	cbnz	r2, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9c:	2900      	cmp	r1, #0
 8000c9e:	bf08      	it	eq
 8000ca0:	2800      	cmpeq	r0, #0
 8000ca2:	bf1c      	itt	ne
 8000ca4:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8000ca8:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000cac:	f000 b9a0 	b.w	8000ff0 <__aeabi_idiv0>
 8000cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cb8:	f000 f83c 	bl	8000d34 <__udivmoddi4>
 8000cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc4:	b004      	add	sp, #16
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2lz>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2200      	movs	r2, #0
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	460d      	mov	r5, r1
 8000cd2:	f7ff ff0b 	bl	8000aec <__aeabi_dcmplt>
 8000cd6:	b928      	cbnz	r0, 8000ce4 <__aeabi_d2lz+0x1c>
 8000cd8:	4620      	mov	r0, r4
 8000cda:	4629      	mov	r1, r5
 8000cdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce0:	f000 b80a 	b.w	8000cf8 <__aeabi_d2ulz>
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000cea:	f000 f805 	bl	8000cf8 <__aeabi_d2ulz>
 8000cee:	4240      	negs	r0, r0
 8000cf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cf4:	bd38      	pop	{r3, r4, r5, pc}
 8000cf6:	bf00      	nop

08000cf8 <__aeabi_d2ulz>:
 8000cf8:	b5d0      	push	{r4, r6, r7, lr}
 8000cfa:	4b0c      	ldr	r3, [pc, #48]	@ (8000d2c <__aeabi_d2ulz+0x34>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	4606      	mov	r6, r0
 8000d00:	460f      	mov	r7, r1
 8000d02:	f7ff fc81 	bl	8000608 <__aeabi_dmul>
 8000d06:	f7ff ff57 	bl	8000bb8 <__aeabi_d2uiz>
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	f7ff fc02 	bl	8000514 <__aeabi_ui2d>
 8000d10:	4b07      	ldr	r3, [pc, #28]	@ (8000d30 <__aeabi_d2ulz+0x38>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	f7ff fc78 	bl	8000608 <__aeabi_dmul>
 8000d18:	4602      	mov	r2, r0
 8000d1a:	460b      	mov	r3, r1
 8000d1c:	4630      	mov	r0, r6
 8000d1e:	4639      	mov	r1, r7
 8000d20:	f7ff faba 	bl	8000298 <__aeabi_dsub>
 8000d24:	f7ff ff48 	bl	8000bb8 <__aeabi_d2uiz>
 8000d28:	4621      	mov	r1, r4
 8000d2a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d2c:	3df00000 	.word	0x3df00000
 8000d30:	41f00000 	.word	0x41f00000

08000d34 <__udivmoddi4>:
 8000d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d38:	9d08      	ldr	r5, [sp, #32]
 8000d3a:	460c      	mov	r4, r1
 8000d3c:	2b00      	cmp	r3, #0
 8000d3e:	d14e      	bne.n	8000dde <__udivmoddi4+0xaa>
 8000d40:	4694      	mov	ip, r2
 8000d42:	458c      	cmp	ip, r1
 8000d44:	4686      	mov	lr, r0
 8000d46:	fab2 f282 	clz	r2, r2
 8000d4a:	d962      	bls.n	8000e12 <__udivmoddi4+0xde>
 8000d4c:	b14a      	cbz	r2, 8000d62 <__udivmoddi4+0x2e>
 8000d4e:	f1c2 0320 	rsb	r3, r2, #32
 8000d52:	4091      	lsls	r1, r2
 8000d54:	fa20 f303 	lsr.w	r3, r0, r3
 8000d58:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d5c:	4319      	orrs	r1, r3
 8000d5e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000d62:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d66:	fa1f f68c 	uxth.w	r6, ip
 8000d6a:	fbb1 f4f7 	udiv	r4, r1, r7
 8000d6e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d72:	fb07 1114 	mls	r1, r7, r4, r1
 8000d76:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d7a:	fb04 f106 	mul.w	r1, r4, r6
 8000d7e:	4299      	cmp	r1, r3
 8000d80:	d90a      	bls.n	8000d98 <__udivmoddi4+0x64>
 8000d82:	eb1c 0303 	adds.w	r3, ip, r3
 8000d86:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8000d8a:	f080 8112 	bcs.w	8000fb2 <__udivmoddi4+0x27e>
 8000d8e:	4299      	cmp	r1, r3
 8000d90:	f240 810f 	bls.w	8000fb2 <__udivmoddi4+0x27e>
 8000d94:	3c02      	subs	r4, #2
 8000d96:	4463      	add	r3, ip
 8000d98:	1a59      	subs	r1, r3, r1
 8000d9a:	fa1f f38e 	uxth.w	r3, lr
 8000d9e:	fbb1 f0f7 	udiv	r0, r1, r7
 8000da2:	fb07 1110 	mls	r1, r7, r0, r1
 8000da6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000daa:	fb00 f606 	mul.w	r6, r0, r6
 8000dae:	429e      	cmp	r6, r3
 8000db0:	d90a      	bls.n	8000dc8 <__udivmoddi4+0x94>
 8000db2:	eb1c 0303 	adds.w	r3, ip, r3
 8000db6:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8000dba:	f080 80fc 	bcs.w	8000fb6 <__udivmoddi4+0x282>
 8000dbe:	429e      	cmp	r6, r3
 8000dc0:	f240 80f9 	bls.w	8000fb6 <__udivmoddi4+0x282>
 8000dc4:	4463      	add	r3, ip
 8000dc6:	3802      	subs	r0, #2
 8000dc8:	1b9b      	subs	r3, r3, r6
 8000dca:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000dce:	2100      	movs	r1, #0
 8000dd0:	b11d      	cbz	r5, 8000dda <__udivmoddi4+0xa6>
 8000dd2:	40d3      	lsrs	r3, r2
 8000dd4:	2200      	movs	r2, #0
 8000dd6:	e9c5 3200 	strd	r3, r2, [r5]
 8000dda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dde:	428b      	cmp	r3, r1
 8000de0:	d905      	bls.n	8000dee <__udivmoddi4+0xba>
 8000de2:	b10d      	cbz	r5, 8000de8 <__udivmoddi4+0xb4>
 8000de4:	e9c5 0100 	strd	r0, r1, [r5]
 8000de8:	2100      	movs	r1, #0
 8000dea:	4608      	mov	r0, r1
 8000dec:	e7f5      	b.n	8000dda <__udivmoddi4+0xa6>
 8000dee:	fab3 f183 	clz	r1, r3
 8000df2:	2900      	cmp	r1, #0
 8000df4:	d146      	bne.n	8000e84 <__udivmoddi4+0x150>
 8000df6:	42a3      	cmp	r3, r4
 8000df8:	d302      	bcc.n	8000e00 <__udivmoddi4+0xcc>
 8000dfa:	4290      	cmp	r0, r2
 8000dfc:	f0c0 80f0 	bcc.w	8000fe0 <__udivmoddi4+0x2ac>
 8000e00:	1a86      	subs	r6, r0, r2
 8000e02:	eb64 0303 	sbc.w	r3, r4, r3
 8000e06:	2001      	movs	r0, #1
 8000e08:	2d00      	cmp	r5, #0
 8000e0a:	d0e6      	beq.n	8000dda <__udivmoddi4+0xa6>
 8000e0c:	e9c5 6300 	strd	r6, r3, [r5]
 8000e10:	e7e3      	b.n	8000dda <__udivmoddi4+0xa6>
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	f040 8090 	bne.w	8000f38 <__udivmoddi4+0x204>
 8000e18:	eba1 040c 	sub.w	r4, r1, ip
 8000e1c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e20:	fa1f f78c 	uxth.w	r7, ip
 8000e24:	2101      	movs	r1, #1
 8000e26:	fbb4 f6f8 	udiv	r6, r4, r8
 8000e2a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000e2e:	fb08 4416 	mls	r4, r8, r6, r4
 8000e32:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e36:	fb07 f006 	mul.w	r0, r7, r6
 8000e3a:	4298      	cmp	r0, r3
 8000e3c:	d908      	bls.n	8000e50 <__udivmoddi4+0x11c>
 8000e3e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e42:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 8000e46:	d202      	bcs.n	8000e4e <__udivmoddi4+0x11a>
 8000e48:	4298      	cmp	r0, r3
 8000e4a:	f200 80cd 	bhi.w	8000fe8 <__udivmoddi4+0x2b4>
 8000e4e:	4626      	mov	r6, r4
 8000e50:	1a1c      	subs	r4, r3, r0
 8000e52:	fa1f f38e 	uxth.w	r3, lr
 8000e56:	fbb4 f0f8 	udiv	r0, r4, r8
 8000e5a:	fb08 4410 	mls	r4, r8, r0, r4
 8000e5e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e62:	fb00 f707 	mul.w	r7, r0, r7
 8000e66:	429f      	cmp	r7, r3
 8000e68:	d908      	bls.n	8000e7c <__udivmoddi4+0x148>
 8000e6a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6e:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 8000e72:	d202      	bcs.n	8000e7a <__udivmoddi4+0x146>
 8000e74:	429f      	cmp	r7, r3
 8000e76:	f200 80b0 	bhi.w	8000fda <__udivmoddi4+0x2a6>
 8000e7a:	4620      	mov	r0, r4
 8000e7c:	1bdb      	subs	r3, r3, r7
 8000e7e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e82:	e7a5      	b.n	8000dd0 <__udivmoddi4+0x9c>
 8000e84:	f1c1 0620 	rsb	r6, r1, #32
 8000e88:	408b      	lsls	r3, r1
 8000e8a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e8e:	431f      	orrs	r7, r3
 8000e90:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e94:	fa04 f301 	lsl.w	r3, r4, r1
 8000e98:	ea43 030c 	orr.w	r3, r3, ip
 8000e9c:	40f4      	lsrs	r4, r6
 8000e9e:	fa00 f801 	lsl.w	r8, r0, r1
 8000ea2:	0c38      	lsrs	r0, r7, #16
 8000ea4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000ea8:	fbb4 fef0 	udiv	lr, r4, r0
 8000eac:	fa1f fc87 	uxth.w	ip, r7
 8000eb0:	fb00 441e 	mls	r4, r0, lr, r4
 8000eb4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000eb8:	fb0e f90c 	mul.w	r9, lr, ip
 8000ebc:	45a1      	cmp	r9, r4
 8000ebe:	fa02 f201 	lsl.w	r2, r2, r1
 8000ec2:	d90a      	bls.n	8000eda <__udivmoddi4+0x1a6>
 8000ec4:	193c      	adds	r4, r7, r4
 8000ec6:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 8000eca:	f080 8084 	bcs.w	8000fd6 <__udivmoddi4+0x2a2>
 8000ece:	45a1      	cmp	r9, r4
 8000ed0:	f240 8081 	bls.w	8000fd6 <__udivmoddi4+0x2a2>
 8000ed4:	f1ae 0e02 	sub.w	lr, lr, #2
 8000ed8:	443c      	add	r4, r7
 8000eda:	eba4 0409 	sub.w	r4, r4, r9
 8000ede:	fa1f f983 	uxth.w	r9, r3
 8000ee2:	fbb4 f3f0 	udiv	r3, r4, r0
 8000ee6:	fb00 4413 	mls	r4, r0, r3, r4
 8000eea:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000eee:	fb03 fc0c 	mul.w	ip, r3, ip
 8000ef2:	45a4      	cmp	ip, r4
 8000ef4:	d907      	bls.n	8000f06 <__udivmoddi4+0x1d2>
 8000ef6:	193c      	adds	r4, r7, r4
 8000ef8:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 8000efc:	d267      	bcs.n	8000fce <__udivmoddi4+0x29a>
 8000efe:	45a4      	cmp	ip, r4
 8000f00:	d965      	bls.n	8000fce <__udivmoddi4+0x29a>
 8000f02:	3b02      	subs	r3, #2
 8000f04:	443c      	add	r4, r7
 8000f06:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000f0a:	fba0 9302 	umull	r9, r3, r0, r2
 8000f0e:	eba4 040c 	sub.w	r4, r4, ip
 8000f12:	429c      	cmp	r4, r3
 8000f14:	46ce      	mov	lr, r9
 8000f16:	469c      	mov	ip, r3
 8000f18:	d351      	bcc.n	8000fbe <__udivmoddi4+0x28a>
 8000f1a:	d04e      	beq.n	8000fba <__udivmoddi4+0x286>
 8000f1c:	b155      	cbz	r5, 8000f34 <__udivmoddi4+0x200>
 8000f1e:	ebb8 030e 	subs.w	r3, r8, lr
 8000f22:	eb64 040c 	sbc.w	r4, r4, ip
 8000f26:	fa04 f606 	lsl.w	r6, r4, r6
 8000f2a:	40cb      	lsrs	r3, r1
 8000f2c:	431e      	orrs	r6, r3
 8000f2e:	40cc      	lsrs	r4, r1
 8000f30:	e9c5 6400 	strd	r6, r4, [r5]
 8000f34:	2100      	movs	r1, #0
 8000f36:	e750      	b.n	8000dda <__udivmoddi4+0xa6>
 8000f38:	f1c2 0320 	rsb	r3, r2, #32
 8000f3c:	fa20 f103 	lsr.w	r1, r0, r3
 8000f40:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f44:	fa24 f303 	lsr.w	r3, r4, r3
 8000f48:	4094      	lsls	r4, r2
 8000f4a:	430c      	orrs	r4, r1
 8000f4c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f50:	fa00 fe02 	lsl.w	lr, r0, r2
 8000f54:	fa1f f78c 	uxth.w	r7, ip
 8000f58:	fbb3 f0f8 	udiv	r0, r3, r8
 8000f5c:	fb08 3110 	mls	r1, r8, r0, r3
 8000f60:	0c23      	lsrs	r3, r4, #16
 8000f62:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f66:	fb00 f107 	mul.w	r1, r0, r7
 8000f6a:	4299      	cmp	r1, r3
 8000f6c:	d908      	bls.n	8000f80 <__udivmoddi4+0x24c>
 8000f6e:	eb1c 0303 	adds.w	r3, ip, r3
 8000f72:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000f76:	d22c      	bcs.n	8000fd2 <__udivmoddi4+0x29e>
 8000f78:	4299      	cmp	r1, r3
 8000f7a:	d92a      	bls.n	8000fd2 <__udivmoddi4+0x29e>
 8000f7c:	3802      	subs	r0, #2
 8000f7e:	4463      	add	r3, ip
 8000f80:	1a5b      	subs	r3, r3, r1
 8000f82:	b2a4      	uxth	r4, r4
 8000f84:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f88:	fb08 3311 	mls	r3, r8, r1, r3
 8000f8c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f90:	fb01 f307 	mul.w	r3, r1, r7
 8000f94:	42a3      	cmp	r3, r4
 8000f96:	d908      	bls.n	8000faa <__udivmoddi4+0x276>
 8000f98:	eb1c 0404 	adds.w	r4, ip, r4
 8000f9c:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 8000fa0:	d213      	bcs.n	8000fca <__udivmoddi4+0x296>
 8000fa2:	42a3      	cmp	r3, r4
 8000fa4:	d911      	bls.n	8000fca <__udivmoddi4+0x296>
 8000fa6:	3902      	subs	r1, #2
 8000fa8:	4464      	add	r4, ip
 8000faa:	1ae4      	subs	r4, r4, r3
 8000fac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000fb0:	e739      	b.n	8000e26 <__udivmoddi4+0xf2>
 8000fb2:	4604      	mov	r4, r0
 8000fb4:	e6f0      	b.n	8000d98 <__udivmoddi4+0x64>
 8000fb6:	4608      	mov	r0, r1
 8000fb8:	e706      	b.n	8000dc8 <__udivmoddi4+0x94>
 8000fba:	45c8      	cmp	r8, r9
 8000fbc:	d2ae      	bcs.n	8000f1c <__udivmoddi4+0x1e8>
 8000fbe:	ebb9 0e02 	subs.w	lr, r9, r2
 8000fc2:	eb63 0c07 	sbc.w	ip, r3, r7
 8000fc6:	3801      	subs	r0, #1
 8000fc8:	e7a8      	b.n	8000f1c <__udivmoddi4+0x1e8>
 8000fca:	4631      	mov	r1, r6
 8000fcc:	e7ed      	b.n	8000faa <__udivmoddi4+0x276>
 8000fce:	4603      	mov	r3, r0
 8000fd0:	e799      	b.n	8000f06 <__udivmoddi4+0x1d2>
 8000fd2:	4630      	mov	r0, r6
 8000fd4:	e7d4      	b.n	8000f80 <__udivmoddi4+0x24c>
 8000fd6:	46d6      	mov	lr, sl
 8000fd8:	e77f      	b.n	8000eda <__udivmoddi4+0x1a6>
 8000fda:	4463      	add	r3, ip
 8000fdc:	3802      	subs	r0, #2
 8000fde:	e74d      	b.n	8000e7c <__udivmoddi4+0x148>
 8000fe0:	4606      	mov	r6, r0
 8000fe2:	4623      	mov	r3, r4
 8000fe4:	4608      	mov	r0, r1
 8000fe6:	e70f      	b.n	8000e08 <__udivmoddi4+0xd4>
 8000fe8:	3e02      	subs	r6, #2
 8000fea:	4463      	add	r3, ip
 8000fec:	e730      	b.n	8000e50 <__udivmoddi4+0x11c>
 8000fee:	bf00      	nop

08000ff0 <__aeabi_idiv0>:
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop

08000ff4 <main>:
void WiFi_Update(void);
void WiFi_HandleEvent(char* event);
void UART_RxCallback(void);
void Error_Handler(void);

int main(void) {
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	af00      	add	r7, sp, #0
    HAL_Init();
 8000ff8:	f000 fb02 	bl	8001600 <HAL_Init>
    WiFi_Init();
 8000ffc:	f000 f810 	bl	8001020 <WiFi_Init>

    // Initialize with your SSID and Password
    WE10_Init("VIVO", "12345678");
 8001000:	4905      	ldr	r1, [pc, #20]	@ (8001018 <main+0x24>)
 8001002:	4806      	ldr	r0, [pc, #24]	@ (800101c <main+0x28>)
 8001004:	f000 f856 	bl	80010b4 <WE10_Init>

    while (1) {
        WiFi_Update();
 8001008:	f000 f8de 	bl	80011c8 <WiFi_Update>
        HAL_Delay(100);
 800100c:	2064      	movs	r0, #100	@ 0x64
 800100e:	f000 fb69 	bl	80016e4 <HAL_Delay>
        WiFi_Update();
 8001012:	bf00      	nop
 8001014:	e7f8      	b.n	8001008 <main+0x14>
 8001016:	bf00      	nop
 8001018:	08006db0 	.word	0x08006db0
 800101c:	08006dbc 	.word	0x08006dbc

08001020 <WiFi_Init>:
    }
}

void WiFi_Init(void) {
 8001020:	b580      	push	{r7, lr}
 8001022:	b082      	sub	sp, #8
 8001024:	af00      	add	r7, sp, #0
    __HAL_RCC_USART1_CLK_ENABLE();
 8001026:	2300      	movs	r3, #0
 8001028:	607b      	str	r3, [r7, #4]
 800102a:	4b1d      	ldr	r3, [pc, #116]	@ (80010a0 <WiFi_Init+0x80>)
 800102c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800102e:	4a1c      	ldr	r2, [pc, #112]	@ (80010a0 <WiFi_Init+0x80>)
 8001030:	f043 0310 	orr.w	r3, r3, #16
 8001034:	6453      	str	r3, [r2, #68]	@ 0x44
 8001036:	4b1a      	ldr	r3, [pc, #104]	@ (80010a0 <WiFi_Init+0x80>)
 8001038:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800103a:	f003 0310 	and.w	r3, r3, #16
 800103e:	607b      	str	r3, [r7, #4]
 8001040:	687b      	ldr	r3, [r7, #4]
    huart1.Instance = USART1;
 8001042:	4b18      	ldr	r3, [pc, #96]	@ (80010a4 <WiFi_Init+0x84>)
 8001044:	4a18      	ldr	r2, [pc, #96]	@ (80010a8 <WiFi_Init+0x88>)
 8001046:	601a      	str	r2, [r3, #0]
    huart1.Init.BaudRate = 115200;
 8001048:	4b16      	ldr	r3, [pc, #88]	@ (80010a4 <WiFi_Init+0x84>)
 800104a:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800104e:	605a      	str	r2, [r3, #4]
    huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001050:	4b14      	ldr	r3, [pc, #80]	@ (80010a4 <WiFi_Init+0x84>)
 8001052:	2200      	movs	r2, #0
 8001054:	609a      	str	r2, [r3, #8]
    huart1.Init.StopBits = UART_STOPBITS_1;
 8001056:	4b13      	ldr	r3, [pc, #76]	@ (80010a4 <WiFi_Init+0x84>)
 8001058:	2200      	movs	r2, #0
 800105a:	60da      	str	r2, [r3, #12]
    huart1.Init.Parity = UART_PARITY_NONE;
 800105c:	4b11      	ldr	r3, [pc, #68]	@ (80010a4 <WiFi_Init+0x84>)
 800105e:	2200      	movs	r2, #0
 8001060:	611a      	str	r2, [r3, #16]
    huart1.Init.Mode = UART_MODE_TX_RX;
 8001062:	4b10      	ldr	r3, [pc, #64]	@ (80010a4 <WiFi_Init+0x84>)
 8001064:	220c      	movs	r2, #12
 8001066:	615a      	str	r2, [r3, #20]
    huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001068:	4b0e      	ldr	r3, [pc, #56]	@ (80010a4 <WiFi_Init+0x84>)
 800106a:	2200      	movs	r2, #0
 800106c:	619a      	str	r2, [r3, #24]
    huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800106e:	4b0d      	ldr	r3, [pc, #52]	@ (80010a4 <WiFi_Init+0x84>)
 8001070:	2200      	movs	r2, #0
 8001072:	61da      	str	r2, [r3, #28]

    if (HAL_UART_Init(&huart1) != HAL_OK) {
 8001074:	480b      	ldr	r0, [pc, #44]	@ (80010a4 <WiFi_Init+0x84>)
 8001076:	f000 fdf7 	bl	8001c68 <HAL_UART_Init>
 800107a:	4603      	mov	r3, r0
 800107c:	2b00      	cmp	r3, #0
 800107e:	d001      	beq.n	8001084 <WiFi_Init+0x64>
        Error_Handler();
 8001080:	f000 f8f0 	bl	8001264 <Error_Handler>
    }

    HAL_UART_Receive_IT(&huart1, (uint8_t *)&rxBuffer[rxIndex], 1);
 8001084:	4b09      	ldr	r3, [pc, #36]	@ (80010ac <WiFi_Init+0x8c>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4a09      	ldr	r2, [pc, #36]	@ (80010b0 <WiFi_Init+0x90>)
 800108a:	4413      	add	r3, r2
 800108c:	2201      	movs	r2, #1
 800108e:	4619      	mov	r1, r3
 8001090:	4804      	ldr	r0, [pc, #16]	@ (80010a4 <WiFi_Init+0x84>)
 8001092:	f000 ff5b 	bl	8001f4c <HAL_UART_Receive_IT>
}
 8001096:	bf00      	nop
 8001098:	3708      	adds	r7, #8
 800109a:	46bd      	mov	sp, r7
 800109c:	bd80      	pop	{r7, pc}
 800109e:	bf00      	nop
 80010a0:	40023800 	.word	0x40023800
 80010a4:	200001f4 	.word	0x200001f4
 80010a8:	40011000 	.word	0x40011000
 80010ac:	200002a0 	.word	0x200002a0
 80010b0:	2000023c 	.word	0x2000023c

080010b4 <WE10_Init>:

void WE10_Init(char *SSID, char *PASSWD) {
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b0a2      	sub	sp, #136	@ 0x88
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	6078      	str	r0, [r7, #4]
 80010bc:	6039      	str	r1, [r7, #0]
    char buffer[128];

    /********* CMD+RESET **********/
    sprintf(buffer, "CMD+RESET\r\n");
 80010be:	f107 0308 	add.w	r3, r7, #8
 80010c2:	493c      	ldr	r1, [pc, #240]	@ (80011b4 <WE10_Init+0x100>)
 80010c4:	4618      	mov	r0, r3
 80010c6:	f002 fa11 	bl	80034ec <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
 80010ca:	f107 0308 	add.w	r3, r7, #8
 80010ce:	4618      	mov	r0, r3
 80010d0:	f7ff f8d6 	bl	8000280 <strlen>
 80010d4:	4603      	mov	r3, r0
 80010d6:	b29a      	uxth	r2, r3
 80010d8:	f107 0108 	add.w	r1, r7, #8
 80010dc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80010e0:	4835      	ldr	r0, [pc, #212]	@ (80011b8 <WE10_Init+0x104>)
 80010e2:	f000 fe11 	bl	8001d08 <HAL_UART_Transmit>
    HAL_Delay(500); // Give time for the command to process
 80010e6:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80010ea:	f000 fafb 	bl	80016e4 <HAL_Delay>

    /********* CMD+WIFIMODE=1 **********/
    sprintf(buffer, "CMD+WIFIMODE=1\r\n");
 80010ee:	f107 0308 	add.w	r3, r7, #8
 80010f2:	4932      	ldr	r1, [pc, #200]	@ (80011bc <WE10_Init+0x108>)
 80010f4:	4618      	mov	r0, r3
 80010f6:	f002 f9f9 	bl	80034ec <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
 80010fa:	f107 0308 	add.w	r3, r7, #8
 80010fe:	4618      	mov	r0, r3
 8001100:	f7ff f8be 	bl	8000280 <strlen>
 8001104:	4603      	mov	r3, r0
 8001106:	b29a      	uxth	r2, r3
 8001108:	f107 0108 	add.w	r1, r7, #8
 800110c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001110:	4829      	ldr	r0, [pc, #164]	@ (80011b8 <WE10_Init+0x104>)
 8001112:	f000 fdf9 	bl	8001d08 <HAL_UART_Transmit>
    HAL_Delay(2000); // Wait for the command to process
 8001116:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 800111a:	f000 fae3 	bl	80016e4 <HAL_Delay>

    /********* CMD+CONTOAP=SSID,PASSWD **********/
    sprintf(buffer, "CMD+CONTOAP=%s,%s\r\n", SSID, PASSWD);
 800111e:	f107 0008 	add.w	r0, r7, #8
 8001122:	683b      	ldr	r3, [r7, #0]
 8001124:	687a      	ldr	r2, [r7, #4]
 8001126:	4926      	ldr	r1, [pc, #152]	@ (80011c0 <WE10_Init+0x10c>)
 8001128:	f002 f9e0 	bl	80034ec <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
 800112c:	f107 0308 	add.w	r3, r7, #8
 8001130:	4618      	mov	r0, r3
 8001132:	f7ff f8a5 	bl	8000280 <strlen>
 8001136:	4603      	mov	r3, r0
 8001138:	b29a      	uxth	r2, r3
 800113a:	f107 0108 	add.w	r1, r7, #8
 800113e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001142:	481d      	ldr	r0, [pc, #116]	@ (80011b8 <WE10_Init+0x104>)
 8001144:	f000 fde0 	bl	8001d08 <HAL_UART_Transmit>
    HAL_Delay(2000); // Allow time for connection attempt
 8001148:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 800114c:	f000 faca 	bl	80016e4 <HAL_Delay>

    /********* CMD?WIFI **********/
    sprintf(buffer, "CMD?WIFI\r\n");
 8001150:	f107 0308 	add.w	r3, r7, #8
 8001154:	491b      	ldr	r1, [pc, #108]	@ (80011c4 <WE10_Init+0x110>)
 8001156:	4618      	mov	r0, r3
 8001158:	f002 f9c8 	bl	80034ec <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
 800115c:	f107 0308 	add.w	r3, r7, #8
 8001160:	4618      	mov	r0, r3
 8001162:	f7ff f88d 	bl	8000280 <strlen>
 8001166:	4603      	mov	r3, r0
 8001168:	b29a      	uxth	r2, r3
 800116a:	f107 0108 	add.w	r1, r7, #8
 800116e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001172:	4811      	ldr	r0, [pc, #68]	@ (80011b8 <WE10_Init+0x104>)
 8001174:	f000 fdc8 	bl	8001d08 <HAL_UART_Transmit>
    HAL_Delay(500); // Wait before receiving the response
 8001178:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800117c:	f000 fab2 	bl	80016e4 <HAL_Delay>

    HAL_UART_Receive(&huart1, (uint8_t*)buffer, sizeof(buffer), 1000);
 8001180:	f107 0108 	add.w	r1, r7, #8
 8001184:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001188:	2280      	movs	r2, #128	@ 0x80
 800118a:	480b      	ldr	r0, [pc, #44]	@ (80011b8 <WE10_Init+0x104>)
 800118c:	f000 fe47 	bl	8001e1e <HAL_UART_Receive>
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000); // Debugging output
 8001190:	f107 0308 	add.w	r3, r7, #8
 8001194:	4618      	mov	r0, r3
 8001196:	f7ff f873 	bl	8000280 <strlen>
 800119a:	4603      	mov	r3, r0
 800119c:	b29a      	uxth	r2, r3
 800119e:	f107 0108 	add.w	r1, r7, #8
 80011a2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80011a6:	4804      	ldr	r0, [pc, #16]	@ (80011b8 <WE10_Init+0x104>)
 80011a8:	f000 fdae 	bl	8001d08 <HAL_UART_Transmit>
}
 80011ac:	bf00      	nop
 80011ae:	3788      	adds	r7, #136	@ 0x88
 80011b0:	46bd      	mov	sp, r7
 80011b2:	bd80      	pop	{r7, pc}
 80011b4:	08006dc4 	.word	0x08006dc4
 80011b8:	200001f4 	.word	0x200001f4
 80011bc:	08006dd0 	.word	0x08006dd0
 80011c0:	08006de4 	.word	0x08006de4
 80011c4:	08006df8 	.word	0x08006df8

080011c8 <WiFi_Update>:

void WiFi_Update(void) {
 80011c8:	b580      	push	{r7, lr}
 80011ca:	af00      	add	r7, sp, #0
    if (rxIndex > 0) {
 80011cc:	4b0a      	ldr	r3, [pc, #40]	@ (80011f8 <WiFi_Update+0x30>)
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	dd0e      	ble.n	80011f2 <WiFi_Update+0x2a>
        rxBuffer[rxIndex] = '\0'; // Null-terminate the string
 80011d4:	4b08      	ldr	r3, [pc, #32]	@ (80011f8 <WiFi_Update+0x30>)
 80011d6:	681b      	ldr	r3, [r3, #0]
 80011d8:	4a08      	ldr	r2, [pc, #32]	@ (80011fc <WiFi_Update+0x34>)
 80011da:	2100      	movs	r1, #0
 80011dc:	54d1      	strb	r1, [r2, r3]
        printf("Received: %s\n", rxBuffer); // Debug output
 80011de:	4907      	ldr	r1, [pc, #28]	@ (80011fc <WiFi_Update+0x34>)
 80011e0:	4807      	ldr	r0, [pc, #28]	@ (8001200 <WiFi_Update+0x38>)
 80011e2:	f002 f971 	bl	80034c8 <iprintf>
        WiFi_HandleEvent(rxBuffer);
 80011e6:	4805      	ldr	r0, [pc, #20]	@ (80011fc <WiFi_Update+0x34>)
 80011e8:	f000 f80c 	bl	8001204 <WiFi_HandleEvent>
        rxIndex = 0; // Reset index for next message
 80011ec:	4b02      	ldr	r3, [pc, #8]	@ (80011f8 <WiFi_Update+0x30>)
 80011ee:	2200      	movs	r2, #0
 80011f0:	601a      	str	r2, [r3, #0]
    }
}
 80011f2:	bf00      	nop
 80011f4:	bd80      	pop	{r7, pc}
 80011f6:	bf00      	nop
 80011f8:	200002a0 	.word	0x200002a0
 80011fc:	2000023c 	.word	0x2000023c
 8001200:	08006e04 	.word	0x08006e04

08001204 <WiFi_HandleEvent>:

void WiFi_HandleEvent(char* event) {
 8001204:	b580      	push	{r7, lr}
 8001206:	b082      	sub	sp, #8
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
    if (strstr(event, "CONNECTED") != NULL) {
 800120c:	4911      	ldr	r1, [pc, #68]	@ (8001254 <WiFi_HandleEvent+0x50>)
 800120e:	6878      	ldr	r0, [r7, #4]
 8001210:	f002 f9d7 	bl	80035c2 <strstr>
 8001214:	4603      	mov	r3, r0
 8001216:	2b00      	cmp	r3, #0
 8001218:	d003      	beq.n	8001222 <WiFi_HandleEvent+0x1e>
        currentState = CONNECTED;
 800121a:	4b0f      	ldr	r3, [pc, #60]	@ (8001258 <WiFi_HandleEvent+0x54>)
 800121c:	2202      	movs	r2, #2
 800121e:	701a      	strb	r2, [r3, #0]
        currentState = DISCONNECTED;
    } else if (strstr(event, "ERROR") != NULL) {
        currentState = DISCONNECTED;
        // Optionally handle reconnection logic
    }
}
 8001220:	e014      	b.n	800124c <WiFi_HandleEvent+0x48>
    } else if (strstr(event, "DISCONNECTED") != NULL) {
 8001222:	490e      	ldr	r1, [pc, #56]	@ (800125c <WiFi_HandleEvent+0x58>)
 8001224:	6878      	ldr	r0, [r7, #4]
 8001226:	f002 f9cc 	bl	80035c2 <strstr>
 800122a:	4603      	mov	r3, r0
 800122c:	2b00      	cmp	r3, #0
 800122e:	d003      	beq.n	8001238 <WiFi_HandleEvent+0x34>
        currentState = DISCONNECTED;
 8001230:	4b09      	ldr	r3, [pc, #36]	@ (8001258 <WiFi_HandleEvent+0x54>)
 8001232:	2203      	movs	r2, #3
 8001234:	701a      	strb	r2, [r3, #0]
}
 8001236:	e009      	b.n	800124c <WiFi_HandleEvent+0x48>
    } else if (strstr(event, "ERROR") != NULL) {
 8001238:	4909      	ldr	r1, [pc, #36]	@ (8001260 <WiFi_HandleEvent+0x5c>)
 800123a:	6878      	ldr	r0, [r7, #4]
 800123c:	f002 f9c1 	bl	80035c2 <strstr>
 8001240:	4603      	mov	r3, r0
 8001242:	2b00      	cmp	r3, #0
 8001244:	d002      	beq.n	800124c <WiFi_HandleEvent+0x48>
        currentState = DISCONNECTED;
 8001246:	4b04      	ldr	r3, [pc, #16]	@ (8001258 <WiFi_HandleEvent+0x54>)
 8001248:	2203      	movs	r2, #3
 800124a:	701a      	strb	r2, [r3, #0]
}
 800124c:	bf00      	nop
 800124e:	3708      	adds	r7, #8
 8001250:	46bd      	mov	sp, r7
 8001252:	bd80      	pop	{r7, pc}
 8001254:	08006e14 	.word	0x08006e14
 8001258:	200001f0 	.word	0x200001f0
 800125c:	08006e20 	.word	0x08006e20
 8001260:	08006e30 	.word	0x08006e30

08001264 <Error_Handler>:
        }
        HAL_UART_Receive_IT(&huart1, (uint8_t *)&rxBuffer[rxIndex], 1);
    }
}

void Error_Handler(void) {
 8001264:	b480      	push	{r7}
 8001266:	af00      	add	r7, sp, #0
    // Add LED indication or UART message
    while (1) {
 8001268:	bf00      	nop
 800126a:	e7fd      	b.n	8001268 <Error_Handler+0x4>

0800126c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800126c:	b580      	push	{r7, lr}
 800126e:	b082      	sub	sp, #8
 8001270:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001272:	2300      	movs	r3, #0
 8001274:	607b      	str	r3, [r7, #4]
 8001276:	4b10      	ldr	r3, [pc, #64]	@ (80012b8 <HAL_MspInit+0x4c>)
 8001278:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800127a:	4a0f      	ldr	r2, [pc, #60]	@ (80012b8 <HAL_MspInit+0x4c>)
 800127c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001280:	6453      	str	r3, [r2, #68]	@ 0x44
 8001282:	4b0d      	ldr	r3, [pc, #52]	@ (80012b8 <HAL_MspInit+0x4c>)
 8001284:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001286:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800128a:	607b      	str	r3, [r7, #4]
 800128c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800128e:	2300      	movs	r3, #0
 8001290:	603b      	str	r3, [r7, #0]
 8001292:	4b09      	ldr	r3, [pc, #36]	@ (80012b8 <HAL_MspInit+0x4c>)
 8001294:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001296:	4a08      	ldr	r2, [pc, #32]	@ (80012b8 <HAL_MspInit+0x4c>)
 8001298:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800129c:	6413      	str	r3, [r2, #64]	@ 0x40
 800129e:	4b06      	ldr	r3, [pc, #24]	@ (80012b8 <HAL_MspInit+0x4c>)
 80012a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012a2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80012a6:	603b      	str	r3, [r7, #0]
 80012a8:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 80012aa:	2007      	movs	r0, #7
 80012ac:	f000 faf0 	bl	8001890 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80012b0:	bf00      	nop
 80012b2:	3708      	adds	r7, #8
 80012b4:	46bd      	mov	sp, r7
 80012b6:	bd80      	pop	{r7, pc}
 80012b8:	40023800 	.word	0x40023800

080012bc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80012bc:	b580      	push	{r7, lr}
 80012be:	b08a      	sub	sp, #40	@ 0x28
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012c4:	f107 0314 	add.w	r3, r7, #20
 80012c8:	2200      	movs	r2, #0
 80012ca:	601a      	str	r2, [r3, #0]
 80012cc:	605a      	str	r2, [r3, #4]
 80012ce:	609a      	str	r2, [r3, #8]
 80012d0:	60da      	str	r2, [r3, #12]
 80012d2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	681b      	ldr	r3, [r3, #0]
 80012d8:	4a19      	ldr	r2, [pc, #100]	@ (8001340 <HAL_UART_MspInit+0x84>)
 80012da:	4293      	cmp	r3, r2
 80012dc:	d12c      	bne.n	8001338 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80012de:	2300      	movs	r3, #0
 80012e0:	613b      	str	r3, [r7, #16]
 80012e2:	4b18      	ldr	r3, [pc, #96]	@ (8001344 <HAL_UART_MspInit+0x88>)
 80012e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012e6:	4a17      	ldr	r2, [pc, #92]	@ (8001344 <HAL_UART_MspInit+0x88>)
 80012e8:	f043 0310 	orr.w	r3, r3, #16
 80012ec:	6453      	str	r3, [r2, #68]	@ 0x44
 80012ee:	4b15      	ldr	r3, [pc, #84]	@ (8001344 <HAL_UART_MspInit+0x88>)
 80012f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012f2:	f003 0310 	and.w	r3, r3, #16
 80012f6:	613b      	str	r3, [r7, #16]
 80012f8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80012fa:	2300      	movs	r3, #0
 80012fc:	60fb      	str	r3, [r7, #12]
 80012fe:	4b11      	ldr	r3, [pc, #68]	@ (8001344 <HAL_UART_MspInit+0x88>)
 8001300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001302:	4a10      	ldr	r2, [pc, #64]	@ (8001344 <HAL_UART_MspInit+0x88>)
 8001304:	f043 0301 	orr.w	r3, r3, #1
 8001308:	6313      	str	r3, [r2, #48]	@ 0x30
 800130a:	4b0e      	ldr	r3, [pc, #56]	@ (8001344 <HAL_UART_MspInit+0x88>)
 800130c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800130e:	f003 0301 	and.w	r3, r3, #1
 8001312:	60fb      	str	r3, [r7, #12]
 8001314:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001316:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 800131a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800131c:	2302      	movs	r3, #2
 800131e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001320:	2300      	movs	r3, #0
 8001322:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001324:	2303      	movs	r3, #3
 8001326:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001328:	2307      	movs	r3, #7
 800132a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800132c:	f107 0314 	add.w	r3, r7, #20
 8001330:	4619      	mov	r1, r3
 8001332:	4805      	ldr	r0, [pc, #20]	@ (8001348 <HAL_UART_MspInit+0x8c>)
 8001334:	f000 fae0 	bl	80018f8 <HAL_GPIO_Init>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 8001338:	bf00      	nop
 800133a:	3728      	adds	r7, #40	@ 0x28
 800133c:	46bd      	mov	sp, r7
 800133e:	bd80      	pop	{r7, pc}
 8001340:	40011000 	.word	0x40011000
 8001344:	40023800 	.word	0x40023800
 8001348:	40020000 	.word	0x40020000

0800134c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800134c:	b480      	push	{r7}
 800134e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001350:	bf00      	nop
 8001352:	e7fd      	b.n	8001350 <NMI_Handler+0x4>

08001354 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001354:	b480      	push	{r7}
 8001356:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001358:	bf00      	nop
 800135a:	e7fd      	b.n	8001358 <HardFault_Handler+0x4>

0800135c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800135c:	b480      	push	{r7}
 800135e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001360:	bf00      	nop
 8001362:	e7fd      	b.n	8001360 <MemManage_Handler+0x4>

08001364 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001364:	b480      	push	{r7}
 8001366:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001368:	bf00      	nop
 800136a:	e7fd      	b.n	8001368 <BusFault_Handler+0x4>

0800136c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800136c:	b480      	push	{r7}
 800136e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001370:	bf00      	nop
 8001372:	e7fd      	b.n	8001370 <UsageFault_Handler+0x4>

08001374 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001374:	b480      	push	{r7}
 8001376:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001378:	bf00      	nop
 800137a:	46bd      	mov	sp, r7
 800137c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001380:	4770      	bx	lr

08001382 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001382:	b480      	push	{r7}
 8001384:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001386:	bf00      	nop
 8001388:	46bd      	mov	sp, r7
 800138a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800138e:	4770      	bx	lr

08001390 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001390:	b480      	push	{r7}
 8001392:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001394:	bf00      	nop
 8001396:	46bd      	mov	sp, r7
 8001398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800139c:	4770      	bx	lr

0800139e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800139e:	b580      	push	{r7, lr}
 80013a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80013a2:	f000 f97f 	bl	80016a4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80013a6:	bf00      	nop
 80013a8:	bd80      	pop	{r7, pc}
	...

080013ac <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80013ac:	b480      	push	{r7}
 80013ae:	b083      	sub	sp, #12
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	4603      	mov	r3, r0
 80013b4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80013b6:	4b0f      	ldr	r3, [pc, #60]	@ (80013f4 <ITM_SendChar+0x48>)
 80013b8:	681b      	ldr	r3, [r3, #0]
 80013ba:	4a0e      	ldr	r2, [pc, #56]	@ (80013f4 <ITM_SendChar+0x48>)
 80013bc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80013c0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80013c2:	4b0d      	ldr	r3, [pc, #52]	@ (80013f8 <ITM_SendChar+0x4c>)
 80013c4:	681b      	ldr	r3, [r3, #0]
 80013c6:	4a0c      	ldr	r2, [pc, #48]	@ (80013f8 <ITM_SendChar+0x4c>)
 80013c8:	f043 0301 	orr.w	r3, r3, #1
 80013cc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80013ce:	bf00      	nop
 80013d0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	f003 0301 	and.w	r3, r3, #1
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d0f8      	beq.n	80013d0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80013de:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80013e2:	79fb      	ldrb	r3, [r7, #7]
 80013e4:	6013      	str	r3, [r2, #0]
}
 80013e6:	bf00      	nop
 80013e8:	370c      	adds	r7, #12
 80013ea:	46bd      	mov	sp, r7
 80013ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f0:	4770      	bx	lr
 80013f2:	bf00      	nop
 80013f4:	e000edfc 	.word	0xe000edfc
 80013f8:	e0000e00 	.word	0xe0000e00

080013fc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80013fc:	b480      	push	{r7}
 80013fe:	af00      	add	r7, sp, #0
  return 1;
 8001400:	2301      	movs	r3, #1
}
 8001402:	4618      	mov	r0, r3
 8001404:	46bd      	mov	sp, r7
 8001406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800140a:	4770      	bx	lr

0800140c <_kill>:

int _kill(int pid, int sig)
{
 800140c:	b580      	push	{r7, lr}
 800140e:	b082      	sub	sp, #8
 8001410:	af00      	add	r7, sp, #0
 8001412:	6078      	str	r0, [r7, #4]
 8001414:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001416:	f002 f935 	bl	8003684 <__errno>
 800141a:	4603      	mov	r3, r0
 800141c:	2216      	movs	r2, #22
 800141e:	601a      	str	r2, [r3, #0]
  return -1;
 8001420:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001424:	4618      	mov	r0, r3
 8001426:	3708      	adds	r7, #8
 8001428:	46bd      	mov	sp, r7
 800142a:	bd80      	pop	{r7, pc}

0800142c <_exit>:

void _exit (int status)
{
 800142c:	b580      	push	{r7, lr}
 800142e:	b082      	sub	sp, #8
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001434:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001438:	6878      	ldr	r0, [r7, #4]
 800143a:	f7ff ffe7 	bl	800140c <_kill>
  while (1) {}    /* Make sure we hang here */
 800143e:	bf00      	nop
 8001440:	e7fd      	b.n	800143e <_exit+0x12>

08001442 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001442:	b580      	push	{r7, lr}
 8001444:	b086      	sub	sp, #24
 8001446:	af00      	add	r7, sp, #0
 8001448:	60f8      	str	r0, [r7, #12]
 800144a:	60b9      	str	r1, [r7, #8]
 800144c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800144e:	2300      	movs	r3, #0
 8001450:	617b      	str	r3, [r7, #20]
 8001452:	e00a      	b.n	800146a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001454:	f3af 8000 	nop.w
 8001458:	4601      	mov	r1, r0
 800145a:	68bb      	ldr	r3, [r7, #8]
 800145c:	1c5a      	adds	r2, r3, #1
 800145e:	60ba      	str	r2, [r7, #8]
 8001460:	b2ca      	uxtb	r2, r1
 8001462:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001464:	697b      	ldr	r3, [r7, #20]
 8001466:	3301      	adds	r3, #1
 8001468:	617b      	str	r3, [r7, #20]
 800146a:	697a      	ldr	r2, [r7, #20]
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	429a      	cmp	r2, r3
 8001470:	dbf0      	blt.n	8001454 <_read+0x12>
  }

  return len;
 8001472:	687b      	ldr	r3, [r7, #4]
}
 8001474:	4618      	mov	r0, r3
 8001476:	3718      	adds	r7, #24
 8001478:	46bd      	mov	sp, r7
 800147a:	bd80      	pop	{r7, pc}

0800147c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800147c:	b580      	push	{r7, lr}
 800147e:	b086      	sub	sp, #24
 8001480:	af00      	add	r7, sp, #0
 8001482:	60f8      	str	r0, [r7, #12]
 8001484:	60b9      	str	r1, [r7, #8]
 8001486:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001488:	2300      	movs	r3, #0
 800148a:	617b      	str	r3, [r7, #20]
 800148c:	e009      	b.n	80014a2 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 800148e:	68bb      	ldr	r3, [r7, #8]
 8001490:	1c5a      	adds	r2, r3, #1
 8001492:	60ba      	str	r2, [r7, #8]
 8001494:	781b      	ldrb	r3, [r3, #0]
 8001496:	4618      	mov	r0, r3
 8001498:	f7ff ff88 	bl	80013ac <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800149c:	697b      	ldr	r3, [r7, #20]
 800149e:	3301      	adds	r3, #1
 80014a0:	617b      	str	r3, [r7, #20]
 80014a2:	697a      	ldr	r2, [r7, #20]
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	429a      	cmp	r2, r3
 80014a8:	dbf1      	blt.n	800148e <_write+0x12>
  }
  return len;
 80014aa:	687b      	ldr	r3, [r7, #4]
}
 80014ac:	4618      	mov	r0, r3
 80014ae:	3718      	adds	r7, #24
 80014b0:	46bd      	mov	sp, r7
 80014b2:	bd80      	pop	{r7, pc}

080014b4 <_close>:

int _close(int file)
{
 80014b4:	b480      	push	{r7}
 80014b6:	b083      	sub	sp, #12
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80014bc:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80014c0:	4618      	mov	r0, r3
 80014c2:	370c      	adds	r7, #12
 80014c4:	46bd      	mov	sp, r7
 80014c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014ca:	4770      	bx	lr

080014cc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80014cc:	b480      	push	{r7}
 80014ce:	b083      	sub	sp, #12
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]
 80014d4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80014d6:	683b      	ldr	r3, [r7, #0]
 80014d8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80014dc:	605a      	str	r2, [r3, #4]
  return 0;
 80014de:	2300      	movs	r3, #0
}
 80014e0:	4618      	mov	r0, r3
 80014e2:	370c      	adds	r7, #12
 80014e4:	46bd      	mov	sp, r7
 80014e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014ea:	4770      	bx	lr

080014ec <_isatty>:

int _isatty(int file)
{
 80014ec:	b480      	push	{r7}
 80014ee:	b083      	sub	sp, #12
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80014f4:	2301      	movs	r3, #1
}
 80014f6:	4618      	mov	r0, r3
 80014f8:	370c      	adds	r7, #12
 80014fa:	46bd      	mov	sp, r7
 80014fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001500:	4770      	bx	lr

08001502 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001502:	b480      	push	{r7}
 8001504:	b085      	sub	sp, #20
 8001506:	af00      	add	r7, sp, #0
 8001508:	60f8      	str	r0, [r7, #12]
 800150a:	60b9      	str	r1, [r7, #8]
 800150c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800150e:	2300      	movs	r3, #0
}
 8001510:	4618      	mov	r0, r3
 8001512:	3714      	adds	r7, #20
 8001514:	46bd      	mov	sp, r7
 8001516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800151a:	4770      	bx	lr

0800151c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800151c:	b580      	push	{r7, lr}
 800151e:	b086      	sub	sp, #24
 8001520:	af00      	add	r7, sp, #0
 8001522:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001524:	4a14      	ldr	r2, [pc, #80]	@ (8001578 <_sbrk+0x5c>)
 8001526:	4b15      	ldr	r3, [pc, #84]	@ (800157c <_sbrk+0x60>)
 8001528:	1ad3      	subs	r3, r2, r3
 800152a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800152c:	697b      	ldr	r3, [r7, #20]
 800152e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001530:	4b13      	ldr	r3, [pc, #76]	@ (8001580 <_sbrk+0x64>)
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	2b00      	cmp	r3, #0
 8001536:	d102      	bne.n	800153e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001538:	4b11      	ldr	r3, [pc, #68]	@ (8001580 <_sbrk+0x64>)
 800153a:	4a12      	ldr	r2, [pc, #72]	@ (8001584 <_sbrk+0x68>)
 800153c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800153e:	4b10      	ldr	r3, [pc, #64]	@ (8001580 <_sbrk+0x64>)
 8001540:	681a      	ldr	r2, [r3, #0]
 8001542:	687b      	ldr	r3, [r7, #4]
 8001544:	4413      	add	r3, r2
 8001546:	693a      	ldr	r2, [r7, #16]
 8001548:	429a      	cmp	r2, r3
 800154a:	d207      	bcs.n	800155c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800154c:	f002 f89a 	bl	8003684 <__errno>
 8001550:	4603      	mov	r3, r0
 8001552:	220c      	movs	r2, #12
 8001554:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001556:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800155a:	e009      	b.n	8001570 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800155c:	4b08      	ldr	r3, [pc, #32]	@ (8001580 <_sbrk+0x64>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001562:	4b07      	ldr	r3, [pc, #28]	@ (8001580 <_sbrk+0x64>)
 8001564:	681a      	ldr	r2, [r3, #0]
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	4413      	add	r3, r2
 800156a:	4a05      	ldr	r2, [pc, #20]	@ (8001580 <_sbrk+0x64>)
 800156c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800156e:	68fb      	ldr	r3, [r7, #12]
}
 8001570:	4618      	mov	r0, r3
 8001572:	3718      	adds	r7, #24
 8001574:	46bd      	mov	sp, r7
 8001576:	bd80      	pop	{r7, pc}
 8001578:	20020000 	.word	0x20020000
 800157c:	00000400 	.word	0x00000400
 8001580:	200002a4 	.word	0x200002a4
 8001584:	200003f8 	.word	0x200003f8

08001588 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001588:	b480      	push	{r7}
 800158a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800158c:	4b06      	ldr	r3, [pc, #24]	@ (80015a8 <SystemInit+0x20>)
 800158e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001592:	4a05      	ldr	r2, [pc, #20]	@ (80015a8 <SystemInit+0x20>)
 8001594:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001598:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800159c:	bf00      	nop
 800159e:	46bd      	mov	sp, r7
 80015a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a4:	4770      	bx	lr
 80015a6:	bf00      	nop
 80015a8:	e000ed00 	.word	0xe000ed00

080015ac <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80015ac:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80015e4 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80015b0:	f7ff ffea 	bl	8001588 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80015b4:	480c      	ldr	r0, [pc, #48]	@ (80015e8 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80015b6:	490d      	ldr	r1, [pc, #52]	@ (80015ec <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80015b8:	4a0d      	ldr	r2, [pc, #52]	@ (80015f0 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80015ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80015bc:	e002      	b.n	80015c4 <LoopCopyDataInit>

080015be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80015be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80015c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80015c2:	3304      	adds	r3, #4

080015c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80015c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80015c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80015c8:	d3f9      	bcc.n	80015be <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80015ca:	4a0a      	ldr	r2, [pc, #40]	@ (80015f4 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80015cc:	4c0a      	ldr	r4, [pc, #40]	@ (80015f8 <LoopFillZerobss+0x22>)
  movs r3, #0
 80015ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80015d0:	e001      	b.n	80015d6 <LoopFillZerobss>

080015d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80015d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80015d4:	3204      	adds	r2, #4

080015d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80015d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80015d8:	d3fb      	bcc.n	80015d2 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80015da:	f002 f859 	bl	8003690 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80015de:	f7ff fd09 	bl	8000ff4 <main>
  bx  lr    
 80015e2:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80015e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80015e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80015ec:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 80015f0:	08007280 	.word	0x08007280
  ldr r2, =_sbss
 80015f4:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 80015f8:	200003f8 	.word	0x200003f8

080015fc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80015fc:	e7fe      	b.n	80015fc <ADC_IRQHandler>
	...

08001600 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001600:	b580      	push	{r7, lr}
 8001602:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001604:	4b0e      	ldr	r3, [pc, #56]	@ (8001640 <HAL_Init+0x40>)
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	4a0d      	ldr	r2, [pc, #52]	@ (8001640 <HAL_Init+0x40>)
 800160a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800160e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001610:	4b0b      	ldr	r3, [pc, #44]	@ (8001640 <HAL_Init+0x40>)
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	4a0a      	ldr	r2, [pc, #40]	@ (8001640 <HAL_Init+0x40>)
 8001616:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800161a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800161c:	4b08      	ldr	r3, [pc, #32]	@ (8001640 <HAL_Init+0x40>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	4a07      	ldr	r2, [pc, #28]	@ (8001640 <HAL_Init+0x40>)
 8001622:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001626:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001628:	2003      	movs	r0, #3
 800162a:	f000 f931 	bl	8001890 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800162e:	2000      	movs	r0, #0
 8001630:	f000 f808 	bl	8001644 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001634:	f7ff fe1a 	bl	800126c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001638:	2300      	movs	r3, #0
}
 800163a:	4618      	mov	r0, r3
 800163c:	bd80      	pop	{r7, pc}
 800163e:	bf00      	nop
 8001640:	40023c00 	.word	0x40023c00

08001644 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001644:	b580      	push	{r7, lr}
 8001646:	b082      	sub	sp, #8
 8001648:	af00      	add	r7, sp, #0
 800164a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800164c:	4b12      	ldr	r3, [pc, #72]	@ (8001698 <HAL_InitTick+0x54>)
 800164e:	681a      	ldr	r2, [r3, #0]
 8001650:	4b12      	ldr	r3, [pc, #72]	@ (800169c <HAL_InitTick+0x58>)
 8001652:	781b      	ldrb	r3, [r3, #0]
 8001654:	4619      	mov	r1, r3
 8001656:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800165a:	fbb3 f3f1 	udiv	r3, r3, r1
 800165e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001662:	4618      	mov	r0, r3
 8001664:	f000 f93b 	bl	80018de <HAL_SYSTICK_Config>
 8001668:	4603      	mov	r3, r0
 800166a:	2b00      	cmp	r3, #0
 800166c:	d001      	beq.n	8001672 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800166e:	2301      	movs	r3, #1
 8001670:	e00e      	b.n	8001690 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	2b0f      	cmp	r3, #15
 8001676:	d80a      	bhi.n	800168e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001678:	2200      	movs	r2, #0
 800167a:	6879      	ldr	r1, [r7, #4]
 800167c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001680:	f000 f911 	bl	80018a6 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001684:	4a06      	ldr	r2, [pc, #24]	@ (80016a0 <HAL_InitTick+0x5c>)
 8001686:	687b      	ldr	r3, [r7, #4]
 8001688:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800168a:	2300      	movs	r3, #0
 800168c:	e000      	b.n	8001690 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800168e:	2301      	movs	r3, #1
}
 8001690:	4618      	mov	r0, r3
 8001692:	3708      	adds	r7, #8
 8001694:	46bd      	mov	sp, r7
 8001696:	bd80      	pop	{r7, pc}
 8001698:	20000000 	.word	0x20000000
 800169c:	20000008 	.word	0x20000008
 80016a0:	20000004 	.word	0x20000004

080016a4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80016a4:	b480      	push	{r7}
 80016a6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80016a8:	4b06      	ldr	r3, [pc, #24]	@ (80016c4 <HAL_IncTick+0x20>)
 80016aa:	781b      	ldrb	r3, [r3, #0]
 80016ac:	461a      	mov	r2, r3
 80016ae:	4b06      	ldr	r3, [pc, #24]	@ (80016c8 <HAL_IncTick+0x24>)
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	4413      	add	r3, r2
 80016b4:	4a04      	ldr	r2, [pc, #16]	@ (80016c8 <HAL_IncTick+0x24>)
 80016b6:	6013      	str	r3, [r2, #0]
}
 80016b8:	bf00      	nop
 80016ba:	46bd      	mov	sp, r7
 80016bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c0:	4770      	bx	lr
 80016c2:	bf00      	nop
 80016c4:	20000008 	.word	0x20000008
 80016c8:	200002a8 	.word	0x200002a8

080016cc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80016cc:	b480      	push	{r7}
 80016ce:	af00      	add	r7, sp, #0
  return uwTick;
 80016d0:	4b03      	ldr	r3, [pc, #12]	@ (80016e0 <HAL_GetTick+0x14>)
 80016d2:	681b      	ldr	r3, [r3, #0]
}
 80016d4:	4618      	mov	r0, r3
 80016d6:	46bd      	mov	sp, r7
 80016d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016dc:	4770      	bx	lr
 80016de:	bf00      	nop
 80016e0:	200002a8 	.word	0x200002a8

080016e4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b084      	sub	sp, #16
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80016ec:	f7ff ffee 	bl	80016cc <HAL_GetTick>
 80016f0:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80016f6:	68fb      	ldr	r3, [r7, #12]
 80016f8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80016fc:	d005      	beq.n	800170a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80016fe:	4b0a      	ldr	r3, [pc, #40]	@ (8001728 <HAL_Delay+0x44>)
 8001700:	781b      	ldrb	r3, [r3, #0]
 8001702:	461a      	mov	r2, r3
 8001704:	68fb      	ldr	r3, [r7, #12]
 8001706:	4413      	add	r3, r2
 8001708:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 800170a:	bf00      	nop
 800170c:	f7ff ffde 	bl	80016cc <HAL_GetTick>
 8001710:	4602      	mov	r2, r0
 8001712:	68bb      	ldr	r3, [r7, #8]
 8001714:	1ad3      	subs	r3, r2, r3
 8001716:	68fa      	ldr	r2, [r7, #12]
 8001718:	429a      	cmp	r2, r3
 800171a:	d8f7      	bhi.n	800170c <HAL_Delay+0x28>
  {
  }
}
 800171c:	bf00      	nop
 800171e:	bf00      	nop
 8001720:	3710      	adds	r7, #16
 8001722:	46bd      	mov	sp, r7
 8001724:	bd80      	pop	{r7, pc}
 8001726:	bf00      	nop
 8001728:	20000008 	.word	0x20000008

0800172c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800172c:	b480      	push	{r7}
 800172e:	b085      	sub	sp, #20
 8001730:	af00      	add	r7, sp, #0
 8001732:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	f003 0307 	and.w	r3, r3, #7
 800173a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800173c:	4b0c      	ldr	r3, [pc, #48]	@ (8001770 <__NVIC_SetPriorityGrouping+0x44>)
 800173e:	68db      	ldr	r3, [r3, #12]
 8001740:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001742:	68ba      	ldr	r2, [r7, #8]
 8001744:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001748:	4013      	ands	r3, r2
 800174a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800174c:	68fb      	ldr	r3, [r7, #12]
 800174e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001750:	68bb      	ldr	r3, [r7, #8]
 8001752:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001754:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001758:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800175c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800175e:	4a04      	ldr	r2, [pc, #16]	@ (8001770 <__NVIC_SetPriorityGrouping+0x44>)
 8001760:	68bb      	ldr	r3, [r7, #8]
 8001762:	60d3      	str	r3, [r2, #12]
}
 8001764:	bf00      	nop
 8001766:	3714      	adds	r7, #20
 8001768:	46bd      	mov	sp, r7
 800176a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800176e:	4770      	bx	lr
 8001770:	e000ed00 	.word	0xe000ed00

08001774 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001774:	b480      	push	{r7}
 8001776:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001778:	4b04      	ldr	r3, [pc, #16]	@ (800178c <__NVIC_GetPriorityGrouping+0x18>)
 800177a:	68db      	ldr	r3, [r3, #12]
 800177c:	0a1b      	lsrs	r3, r3, #8
 800177e:	f003 0307 	and.w	r3, r3, #7
}
 8001782:	4618      	mov	r0, r3
 8001784:	46bd      	mov	sp, r7
 8001786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178a:	4770      	bx	lr
 800178c:	e000ed00 	.word	0xe000ed00

08001790 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001790:	b480      	push	{r7}
 8001792:	b083      	sub	sp, #12
 8001794:	af00      	add	r7, sp, #0
 8001796:	4603      	mov	r3, r0
 8001798:	6039      	str	r1, [r7, #0]
 800179a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800179c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	db0a      	blt.n	80017ba <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80017a4:	683b      	ldr	r3, [r7, #0]
 80017a6:	b2da      	uxtb	r2, r3
 80017a8:	490c      	ldr	r1, [pc, #48]	@ (80017dc <__NVIC_SetPriority+0x4c>)
 80017aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017ae:	0112      	lsls	r2, r2, #4
 80017b0:	b2d2      	uxtb	r2, r2
 80017b2:	440b      	add	r3, r1
 80017b4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80017b8:	e00a      	b.n	80017d0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80017ba:	683b      	ldr	r3, [r7, #0]
 80017bc:	b2da      	uxtb	r2, r3
 80017be:	4908      	ldr	r1, [pc, #32]	@ (80017e0 <__NVIC_SetPriority+0x50>)
 80017c0:	79fb      	ldrb	r3, [r7, #7]
 80017c2:	f003 030f 	and.w	r3, r3, #15
 80017c6:	3b04      	subs	r3, #4
 80017c8:	0112      	lsls	r2, r2, #4
 80017ca:	b2d2      	uxtb	r2, r2
 80017cc:	440b      	add	r3, r1
 80017ce:	761a      	strb	r2, [r3, #24]
}
 80017d0:	bf00      	nop
 80017d2:	370c      	adds	r7, #12
 80017d4:	46bd      	mov	sp, r7
 80017d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017da:	4770      	bx	lr
 80017dc:	e000e100 	.word	0xe000e100
 80017e0:	e000ed00 	.word	0xe000ed00

080017e4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80017e4:	b480      	push	{r7}
 80017e6:	b089      	sub	sp, #36	@ 0x24
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	60f8      	str	r0, [r7, #12]
 80017ec:	60b9      	str	r1, [r7, #8]
 80017ee:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80017f0:	68fb      	ldr	r3, [r7, #12]
 80017f2:	f003 0307 	and.w	r3, r3, #7
 80017f6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80017f8:	69fb      	ldr	r3, [r7, #28]
 80017fa:	f1c3 0307 	rsb	r3, r3, #7
 80017fe:	2b04      	cmp	r3, #4
 8001800:	bf28      	it	cs
 8001802:	2304      	movcs	r3, #4
 8001804:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001806:	69fb      	ldr	r3, [r7, #28]
 8001808:	3304      	adds	r3, #4
 800180a:	2b06      	cmp	r3, #6
 800180c:	d902      	bls.n	8001814 <NVIC_EncodePriority+0x30>
 800180e:	69fb      	ldr	r3, [r7, #28]
 8001810:	3b03      	subs	r3, #3
 8001812:	e000      	b.n	8001816 <NVIC_EncodePriority+0x32>
 8001814:	2300      	movs	r3, #0
 8001816:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001818:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800181c:	69bb      	ldr	r3, [r7, #24]
 800181e:	fa02 f303 	lsl.w	r3, r2, r3
 8001822:	43da      	mvns	r2, r3
 8001824:	68bb      	ldr	r3, [r7, #8]
 8001826:	401a      	ands	r2, r3
 8001828:	697b      	ldr	r3, [r7, #20]
 800182a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800182c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001830:	697b      	ldr	r3, [r7, #20]
 8001832:	fa01 f303 	lsl.w	r3, r1, r3
 8001836:	43d9      	mvns	r1, r3
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800183c:	4313      	orrs	r3, r2
         );
}
 800183e:	4618      	mov	r0, r3
 8001840:	3724      	adds	r7, #36	@ 0x24
 8001842:	46bd      	mov	sp, r7
 8001844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001848:	4770      	bx	lr
	...

0800184c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800184c:	b580      	push	{r7, lr}
 800184e:	b082      	sub	sp, #8
 8001850:	af00      	add	r7, sp, #0
 8001852:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	3b01      	subs	r3, #1
 8001858:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800185c:	d301      	bcc.n	8001862 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800185e:	2301      	movs	r3, #1
 8001860:	e00f      	b.n	8001882 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001862:	4a0a      	ldr	r2, [pc, #40]	@ (800188c <SysTick_Config+0x40>)
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	3b01      	subs	r3, #1
 8001868:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800186a:	210f      	movs	r1, #15
 800186c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001870:	f7ff ff8e 	bl	8001790 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001874:	4b05      	ldr	r3, [pc, #20]	@ (800188c <SysTick_Config+0x40>)
 8001876:	2200      	movs	r2, #0
 8001878:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800187a:	4b04      	ldr	r3, [pc, #16]	@ (800188c <SysTick_Config+0x40>)
 800187c:	2207      	movs	r2, #7
 800187e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001880:	2300      	movs	r3, #0
}
 8001882:	4618      	mov	r0, r3
 8001884:	3708      	adds	r7, #8
 8001886:	46bd      	mov	sp, r7
 8001888:	bd80      	pop	{r7, pc}
 800188a:	bf00      	nop
 800188c:	e000e010 	.word	0xe000e010

08001890 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001890:	b580      	push	{r7, lr}
 8001892:	b082      	sub	sp, #8
 8001894:	af00      	add	r7, sp, #0
 8001896:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001898:	6878      	ldr	r0, [r7, #4]
 800189a:	f7ff ff47 	bl	800172c <__NVIC_SetPriorityGrouping>
}
 800189e:	bf00      	nop
 80018a0:	3708      	adds	r7, #8
 80018a2:	46bd      	mov	sp, r7
 80018a4:	bd80      	pop	{r7, pc}

080018a6 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80018a6:	b580      	push	{r7, lr}
 80018a8:	b086      	sub	sp, #24
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	4603      	mov	r3, r0
 80018ae:	60b9      	str	r1, [r7, #8]
 80018b0:	607a      	str	r2, [r7, #4]
 80018b2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80018b4:	2300      	movs	r3, #0
 80018b6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80018b8:	f7ff ff5c 	bl	8001774 <__NVIC_GetPriorityGrouping>
 80018bc:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80018be:	687a      	ldr	r2, [r7, #4]
 80018c0:	68b9      	ldr	r1, [r7, #8]
 80018c2:	6978      	ldr	r0, [r7, #20]
 80018c4:	f7ff ff8e 	bl	80017e4 <NVIC_EncodePriority>
 80018c8:	4602      	mov	r2, r0
 80018ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018ce:	4611      	mov	r1, r2
 80018d0:	4618      	mov	r0, r3
 80018d2:	f7ff ff5d 	bl	8001790 <__NVIC_SetPriority>
}
 80018d6:	bf00      	nop
 80018d8:	3718      	adds	r7, #24
 80018da:	46bd      	mov	sp, r7
 80018dc:	bd80      	pop	{r7, pc}

080018de <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80018de:	b580      	push	{r7, lr}
 80018e0:	b082      	sub	sp, #8
 80018e2:	af00      	add	r7, sp, #0
 80018e4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80018e6:	6878      	ldr	r0, [r7, #4]
 80018e8:	f7ff ffb0 	bl	800184c <SysTick_Config>
 80018ec:	4603      	mov	r3, r0
}
 80018ee:	4618      	mov	r0, r3
 80018f0:	3708      	adds	r7, #8
 80018f2:	46bd      	mov	sp, r7
 80018f4:	bd80      	pop	{r7, pc}
	...

080018f8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80018f8:	b480      	push	{r7}
 80018fa:	b089      	sub	sp, #36	@ 0x24
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	6078      	str	r0, [r7, #4]
 8001900:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8001902:	2300      	movs	r3, #0
 8001904:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001906:	2300      	movs	r3, #0
 8001908:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800190a:	2300      	movs	r3, #0
 800190c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800190e:	2300      	movs	r3, #0
 8001910:	61fb      	str	r3, [r7, #28]
 8001912:	e159      	b.n	8001bc8 <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001914:	2201      	movs	r2, #1
 8001916:	69fb      	ldr	r3, [r7, #28]
 8001918:	fa02 f303 	lsl.w	r3, r2, r3
 800191c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800191e:	683b      	ldr	r3, [r7, #0]
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	697a      	ldr	r2, [r7, #20]
 8001924:	4013      	ands	r3, r2
 8001926:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001928:	693a      	ldr	r2, [r7, #16]
 800192a:	697b      	ldr	r3, [r7, #20]
 800192c:	429a      	cmp	r2, r3
 800192e:	f040 8148 	bne.w	8001bc2 <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001932:	683b      	ldr	r3, [r7, #0]
 8001934:	685b      	ldr	r3, [r3, #4]
 8001936:	f003 0303 	and.w	r3, r3, #3
 800193a:	2b01      	cmp	r3, #1
 800193c:	d005      	beq.n	800194a <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800193e:	683b      	ldr	r3, [r7, #0]
 8001940:	685b      	ldr	r3, [r3, #4]
 8001942:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001946:	2b02      	cmp	r3, #2
 8001948:	d130      	bne.n	80019ac <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	689b      	ldr	r3, [r3, #8]
 800194e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001950:	69fb      	ldr	r3, [r7, #28]
 8001952:	005b      	lsls	r3, r3, #1
 8001954:	2203      	movs	r2, #3
 8001956:	fa02 f303 	lsl.w	r3, r2, r3
 800195a:	43db      	mvns	r3, r3
 800195c:	69ba      	ldr	r2, [r7, #24]
 800195e:	4013      	ands	r3, r2
 8001960:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001962:	683b      	ldr	r3, [r7, #0]
 8001964:	68da      	ldr	r2, [r3, #12]
 8001966:	69fb      	ldr	r3, [r7, #28]
 8001968:	005b      	lsls	r3, r3, #1
 800196a:	fa02 f303 	lsl.w	r3, r2, r3
 800196e:	69ba      	ldr	r2, [r7, #24]
 8001970:	4313      	orrs	r3, r2
 8001972:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	69ba      	ldr	r2, [r7, #24]
 8001978:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	685b      	ldr	r3, [r3, #4]
 800197e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001980:	2201      	movs	r2, #1
 8001982:	69fb      	ldr	r3, [r7, #28]
 8001984:	fa02 f303 	lsl.w	r3, r2, r3
 8001988:	43db      	mvns	r3, r3
 800198a:	69ba      	ldr	r2, [r7, #24]
 800198c:	4013      	ands	r3, r2
 800198e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001990:	683b      	ldr	r3, [r7, #0]
 8001992:	685b      	ldr	r3, [r3, #4]
 8001994:	091b      	lsrs	r3, r3, #4
 8001996:	f003 0201 	and.w	r2, r3, #1
 800199a:	69fb      	ldr	r3, [r7, #28]
 800199c:	fa02 f303 	lsl.w	r3, r2, r3
 80019a0:	69ba      	ldr	r2, [r7, #24]
 80019a2:	4313      	orrs	r3, r2
 80019a4:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80019a6:	687b      	ldr	r3, [r7, #4]
 80019a8:	69ba      	ldr	r2, [r7, #24]
 80019aa:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80019ac:	683b      	ldr	r3, [r7, #0]
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	f003 0303 	and.w	r3, r3, #3
 80019b4:	2b03      	cmp	r3, #3
 80019b6:	d017      	beq.n	80019e8 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	68db      	ldr	r3, [r3, #12]
 80019bc:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80019be:	69fb      	ldr	r3, [r7, #28]
 80019c0:	005b      	lsls	r3, r3, #1
 80019c2:	2203      	movs	r2, #3
 80019c4:	fa02 f303 	lsl.w	r3, r2, r3
 80019c8:	43db      	mvns	r3, r3
 80019ca:	69ba      	ldr	r2, [r7, #24]
 80019cc:	4013      	ands	r3, r2
 80019ce:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80019d0:	683b      	ldr	r3, [r7, #0]
 80019d2:	689a      	ldr	r2, [r3, #8]
 80019d4:	69fb      	ldr	r3, [r7, #28]
 80019d6:	005b      	lsls	r3, r3, #1
 80019d8:	fa02 f303 	lsl.w	r3, r2, r3
 80019dc:	69ba      	ldr	r2, [r7, #24]
 80019de:	4313      	orrs	r3, r2
 80019e0:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	69ba      	ldr	r2, [r7, #24]
 80019e6:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80019e8:	683b      	ldr	r3, [r7, #0]
 80019ea:	685b      	ldr	r3, [r3, #4]
 80019ec:	f003 0303 	and.w	r3, r3, #3
 80019f0:	2b02      	cmp	r3, #2
 80019f2:	d123      	bne.n	8001a3c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80019f4:	69fb      	ldr	r3, [r7, #28]
 80019f6:	08da      	lsrs	r2, r3, #3
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	3208      	adds	r2, #8
 80019fc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a00:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001a02:	69fb      	ldr	r3, [r7, #28]
 8001a04:	f003 0307 	and.w	r3, r3, #7
 8001a08:	009b      	lsls	r3, r3, #2
 8001a0a:	220f      	movs	r2, #15
 8001a0c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a10:	43db      	mvns	r3, r3
 8001a12:	69ba      	ldr	r2, [r7, #24]
 8001a14:	4013      	ands	r3, r2
 8001a16:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001a18:	683b      	ldr	r3, [r7, #0]
 8001a1a:	691a      	ldr	r2, [r3, #16]
 8001a1c:	69fb      	ldr	r3, [r7, #28]
 8001a1e:	f003 0307 	and.w	r3, r3, #7
 8001a22:	009b      	lsls	r3, r3, #2
 8001a24:	fa02 f303 	lsl.w	r3, r2, r3
 8001a28:	69ba      	ldr	r2, [r7, #24]
 8001a2a:	4313      	orrs	r3, r2
 8001a2c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8001a2e:	69fb      	ldr	r3, [r7, #28]
 8001a30:	08da      	lsrs	r2, r3, #3
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	3208      	adds	r2, #8
 8001a36:	69b9      	ldr	r1, [r7, #24]
 8001a38:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001a42:	69fb      	ldr	r3, [r7, #28]
 8001a44:	005b      	lsls	r3, r3, #1
 8001a46:	2203      	movs	r2, #3
 8001a48:	fa02 f303 	lsl.w	r3, r2, r3
 8001a4c:	43db      	mvns	r3, r3
 8001a4e:	69ba      	ldr	r2, [r7, #24]
 8001a50:	4013      	ands	r3, r2
 8001a52:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001a54:	683b      	ldr	r3, [r7, #0]
 8001a56:	685b      	ldr	r3, [r3, #4]
 8001a58:	f003 0203 	and.w	r2, r3, #3
 8001a5c:	69fb      	ldr	r3, [r7, #28]
 8001a5e:	005b      	lsls	r3, r3, #1
 8001a60:	fa02 f303 	lsl.w	r3, r2, r3
 8001a64:	69ba      	ldr	r2, [r7, #24]
 8001a66:	4313      	orrs	r3, r2
 8001a68:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	69ba      	ldr	r2, [r7, #24]
 8001a6e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001a70:	683b      	ldr	r3, [r7, #0]
 8001a72:	685b      	ldr	r3, [r3, #4]
 8001a74:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	f000 80a2 	beq.w	8001bc2 <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a7e:	2300      	movs	r3, #0
 8001a80:	60fb      	str	r3, [r7, #12]
 8001a82:	4b57      	ldr	r3, [pc, #348]	@ (8001be0 <HAL_GPIO_Init+0x2e8>)
 8001a84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a86:	4a56      	ldr	r2, [pc, #344]	@ (8001be0 <HAL_GPIO_Init+0x2e8>)
 8001a88:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001a8c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001a8e:	4b54      	ldr	r3, [pc, #336]	@ (8001be0 <HAL_GPIO_Init+0x2e8>)
 8001a90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a92:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8001a9a:	4a52      	ldr	r2, [pc, #328]	@ (8001be4 <HAL_GPIO_Init+0x2ec>)
 8001a9c:	69fb      	ldr	r3, [r7, #28]
 8001a9e:	089b      	lsrs	r3, r3, #2
 8001aa0:	3302      	adds	r3, #2
 8001aa2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001aa6:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001aa8:	69fb      	ldr	r3, [r7, #28]
 8001aaa:	f003 0303 	and.w	r3, r3, #3
 8001aae:	009b      	lsls	r3, r3, #2
 8001ab0:	220f      	movs	r2, #15
 8001ab2:	fa02 f303 	lsl.w	r3, r2, r3
 8001ab6:	43db      	mvns	r3, r3
 8001ab8:	69ba      	ldr	r2, [r7, #24]
 8001aba:	4013      	ands	r3, r2
 8001abc:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	4a49      	ldr	r2, [pc, #292]	@ (8001be8 <HAL_GPIO_Init+0x2f0>)
 8001ac2:	4293      	cmp	r3, r2
 8001ac4:	d019      	beq.n	8001afa <HAL_GPIO_Init+0x202>
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	4a48      	ldr	r2, [pc, #288]	@ (8001bec <HAL_GPIO_Init+0x2f4>)
 8001aca:	4293      	cmp	r3, r2
 8001acc:	d013      	beq.n	8001af6 <HAL_GPIO_Init+0x1fe>
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	4a47      	ldr	r2, [pc, #284]	@ (8001bf0 <HAL_GPIO_Init+0x2f8>)
 8001ad2:	4293      	cmp	r3, r2
 8001ad4:	d00d      	beq.n	8001af2 <HAL_GPIO_Init+0x1fa>
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	4a46      	ldr	r2, [pc, #280]	@ (8001bf4 <HAL_GPIO_Init+0x2fc>)
 8001ada:	4293      	cmp	r3, r2
 8001adc:	d007      	beq.n	8001aee <HAL_GPIO_Init+0x1f6>
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	4a45      	ldr	r2, [pc, #276]	@ (8001bf8 <HAL_GPIO_Init+0x300>)
 8001ae2:	4293      	cmp	r3, r2
 8001ae4:	d101      	bne.n	8001aea <HAL_GPIO_Init+0x1f2>
 8001ae6:	2304      	movs	r3, #4
 8001ae8:	e008      	b.n	8001afc <HAL_GPIO_Init+0x204>
 8001aea:	2307      	movs	r3, #7
 8001aec:	e006      	b.n	8001afc <HAL_GPIO_Init+0x204>
 8001aee:	2303      	movs	r3, #3
 8001af0:	e004      	b.n	8001afc <HAL_GPIO_Init+0x204>
 8001af2:	2302      	movs	r3, #2
 8001af4:	e002      	b.n	8001afc <HAL_GPIO_Init+0x204>
 8001af6:	2301      	movs	r3, #1
 8001af8:	e000      	b.n	8001afc <HAL_GPIO_Init+0x204>
 8001afa:	2300      	movs	r3, #0
 8001afc:	69fa      	ldr	r2, [r7, #28]
 8001afe:	f002 0203 	and.w	r2, r2, #3
 8001b02:	0092      	lsls	r2, r2, #2
 8001b04:	4093      	lsls	r3, r2
 8001b06:	69ba      	ldr	r2, [r7, #24]
 8001b08:	4313      	orrs	r3, r2
 8001b0a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001b0c:	4935      	ldr	r1, [pc, #212]	@ (8001be4 <HAL_GPIO_Init+0x2ec>)
 8001b0e:	69fb      	ldr	r3, [r7, #28]
 8001b10:	089b      	lsrs	r3, r3, #2
 8001b12:	3302      	adds	r3, #2
 8001b14:	69ba      	ldr	r2, [r7, #24]
 8001b16:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001b1a:	4b38      	ldr	r3, [pc, #224]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b1c:	689b      	ldr	r3, [r3, #8]
 8001b1e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001b20:	693b      	ldr	r3, [r7, #16]
 8001b22:	43db      	mvns	r3, r3
 8001b24:	69ba      	ldr	r2, [r7, #24]
 8001b26:	4013      	ands	r3, r2
 8001b28:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8001b2a:	683b      	ldr	r3, [r7, #0]
 8001b2c:	685b      	ldr	r3, [r3, #4]
 8001b2e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001b32:	2b00      	cmp	r3, #0
 8001b34:	d003      	beq.n	8001b3e <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 8001b36:	69ba      	ldr	r2, [r7, #24]
 8001b38:	693b      	ldr	r3, [r7, #16]
 8001b3a:	4313      	orrs	r3, r2
 8001b3c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001b3e:	4a2f      	ldr	r2, [pc, #188]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b40:	69bb      	ldr	r3, [r7, #24]
 8001b42:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001b44:	4b2d      	ldr	r3, [pc, #180]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b46:	68db      	ldr	r3, [r3, #12]
 8001b48:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001b4a:	693b      	ldr	r3, [r7, #16]
 8001b4c:	43db      	mvns	r3, r3
 8001b4e:	69ba      	ldr	r2, [r7, #24]
 8001b50:	4013      	ands	r3, r2
 8001b52:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001b54:	683b      	ldr	r3, [r7, #0]
 8001b56:	685b      	ldr	r3, [r3, #4]
 8001b58:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d003      	beq.n	8001b68 <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 8001b60:	69ba      	ldr	r2, [r7, #24]
 8001b62:	693b      	ldr	r3, [r7, #16]
 8001b64:	4313      	orrs	r3, r2
 8001b66:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001b68:	4a24      	ldr	r2, [pc, #144]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b6a:	69bb      	ldr	r3, [r7, #24]
 8001b6c:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8001b6e:	4b23      	ldr	r3, [pc, #140]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b70:	685b      	ldr	r3, [r3, #4]
 8001b72:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001b74:	693b      	ldr	r3, [r7, #16]
 8001b76:	43db      	mvns	r3, r3
 8001b78:	69ba      	ldr	r2, [r7, #24]
 8001b7a:	4013      	ands	r3, r2
 8001b7c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8001b7e:	683b      	ldr	r3, [r7, #0]
 8001b80:	685b      	ldr	r3, [r3, #4]
 8001b82:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b86:	2b00      	cmp	r3, #0
 8001b88:	d003      	beq.n	8001b92 <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 8001b8a:	69ba      	ldr	r2, [r7, #24]
 8001b8c:	693b      	ldr	r3, [r7, #16]
 8001b8e:	4313      	orrs	r3, r2
 8001b90:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001b92:	4a1a      	ldr	r2, [pc, #104]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b94:	69bb      	ldr	r3, [r7, #24]
 8001b96:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001b98:	4b18      	ldr	r3, [pc, #96]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001b9e:	693b      	ldr	r3, [r7, #16]
 8001ba0:	43db      	mvns	r3, r3
 8001ba2:	69ba      	ldr	r2, [r7, #24]
 8001ba4:	4013      	ands	r3, r2
 8001ba6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8001ba8:	683b      	ldr	r3, [r7, #0]
 8001baa:	685b      	ldr	r3, [r3, #4]
 8001bac:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d003      	beq.n	8001bbc <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 8001bb4:	69ba      	ldr	r2, [r7, #24]
 8001bb6:	693b      	ldr	r3, [r7, #16]
 8001bb8:	4313      	orrs	r3, r2
 8001bba:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8001bbc:	4a0f      	ldr	r2, [pc, #60]	@ (8001bfc <HAL_GPIO_Init+0x304>)
 8001bbe:	69bb      	ldr	r3, [r7, #24]
 8001bc0:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001bc2:	69fb      	ldr	r3, [r7, #28]
 8001bc4:	3301      	adds	r3, #1
 8001bc6:	61fb      	str	r3, [r7, #28]
 8001bc8:	69fb      	ldr	r3, [r7, #28]
 8001bca:	2b0f      	cmp	r3, #15
 8001bcc:	f67f aea2 	bls.w	8001914 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001bd0:	bf00      	nop
 8001bd2:	bf00      	nop
 8001bd4:	3724      	adds	r7, #36	@ 0x24
 8001bd6:	46bd      	mov	sp, r7
 8001bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023800 	.word	0x40023800
 8001be4:	40013800 	.word	0x40013800
 8001be8:	40020000 	.word	0x40020000
 8001bec:	40020400 	.word	0x40020400
 8001bf0:	40020800 	.word	0x40020800
 8001bf4:	40020c00 	.word	0x40020c00
 8001bf8:	40021000 	.word	0x40021000
 8001bfc:	40013c00 	.word	0x40013c00

08001c00 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8001c00:	b480      	push	{r7}
 8001c02:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8001c04:	4b03      	ldr	r3, [pc, #12]	@ (8001c14 <HAL_RCC_GetHCLKFreq+0x14>)
 8001c06:	681b      	ldr	r3, [r3, #0]
}
 8001c08:	4618      	mov	r0, r3
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c10:	4770      	bx	lr
 8001c12:	bf00      	nop
 8001c14:	20000000 	.word	0x20000000

08001c18 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8001c1c:	f7ff fff0 	bl	8001c00 <HAL_RCC_GetHCLKFreq>
 8001c20:	4602      	mov	r2, r0
 8001c22:	4b05      	ldr	r3, [pc, #20]	@ (8001c38 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001c24:	689b      	ldr	r3, [r3, #8]
 8001c26:	0a9b      	lsrs	r3, r3, #10
 8001c28:	f003 0307 	and.w	r3, r3, #7
 8001c2c:	4903      	ldr	r1, [pc, #12]	@ (8001c3c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001c2e:	5ccb      	ldrb	r3, [r1, r3]
 8001c30:	fa22 f303 	lsr.w	r3, r2, r3
}
 8001c34:	4618      	mov	r0, r3
 8001c36:	bd80      	pop	{r7, pc}
 8001c38:	40023800 	.word	0x40023800
 8001c3c:	08006e38 	.word	0x08006e38

08001c40 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8001c40:	b580      	push	{r7, lr}
 8001c42:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8001c44:	f7ff ffdc 	bl	8001c00 <HAL_RCC_GetHCLKFreq>
 8001c48:	4602      	mov	r2, r0
 8001c4a:	4b05      	ldr	r3, [pc, #20]	@ (8001c60 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001c4c:	689b      	ldr	r3, [r3, #8]
 8001c4e:	0b5b      	lsrs	r3, r3, #13
 8001c50:	f003 0307 	and.w	r3, r3, #7
 8001c54:	4903      	ldr	r1, [pc, #12]	@ (8001c64 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001c56:	5ccb      	ldrb	r3, [r1, r3]
 8001c58:	fa22 f303 	lsr.w	r3, r2, r3
}
 8001c5c:	4618      	mov	r0, r3
 8001c5e:	bd80      	pop	{r7, pc}
 8001c60:	40023800 	.word	0x40023800
 8001c64:	08006e38 	.word	0x08006e38

08001c68 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8001c68:	b580      	push	{r7, lr}
 8001c6a:	b082      	sub	sp, #8
 8001c6c:	af00      	add	r7, sp, #0
 8001c6e:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d101      	bne.n	8001c7a <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8001c76:	2301      	movs	r3, #1
 8001c78:	e042      	b.n	8001d00 <HAL_UART_Init+0x98>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8001c80:	b2db      	uxtb	r3, r3
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	d106      	bne.n	8001c94 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	2200      	movs	r2, #0
 8001c8a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8001c8e:	6878      	ldr	r0, [r7, #4]
 8001c90:	f7ff fb14 	bl	80012bc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	2224      	movs	r2, #36	@ 0x24
 8001c98:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	68da      	ldr	r2, [r3, #12]
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001caa:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8001cac:	6878      	ldr	r0, [r7, #4]
 8001cae:	f000 fa69 	bl	8002184 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	691a      	ldr	r2, [r3, #16]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8001cc0:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	695a      	ldr	r2, [r3, #20]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8001cd0:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	68da      	ldr	r2, [r3, #12]
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001ce0:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	645a      	str	r2, [r3, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	2220      	movs	r2, #32
 8001cec:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	2220      	movs	r2, #32
 8001cf4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	2200      	movs	r2, #0
 8001cfc:	635a      	str	r2, [r3, #52]	@ 0x34

  return HAL_OK;
 8001cfe:	2300      	movs	r3, #0
}
 8001d00:	4618      	mov	r0, r3
 8001d02:	3708      	adds	r7, #8
 8001d04:	46bd      	mov	sp, r7
 8001d06:	bd80      	pop	{r7, pc}

08001d08 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8001d08:	b580      	push	{r7, lr}
 8001d0a:	b08a      	sub	sp, #40	@ 0x28
 8001d0c:	af02      	add	r7, sp, #8
 8001d0e:	60f8      	str	r0, [r7, #12]
 8001d10:	60b9      	str	r1, [r7, #8]
 8001d12:	603b      	str	r3, [r7, #0]
 8001d14:	4613      	mov	r3, r2
 8001d16:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 8001d18:	2300      	movs	r3, #0
 8001d1a:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8001d1c:	68fb      	ldr	r3, [r7, #12]
 8001d1e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8001d22:	b2db      	uxtb	r3, r3
 8001d24:	2b20      	cmp	r3, #32
 8001d26:	d175      	bne.n	8001e14 <HAL_UART_Transmit+0x10c>
  {
    if ((pData == NULL) || (Size == 0U))
 8001d28:	68bb      	ldr	r3, [r7, #8]
 8001d2a:	2b00      	cmp	r3, #0
 8001d2c:	d002      	beq.n	8001d34 <HAL_UART_Transmit+0x2c>
 8001d2e:	88fb      	ldrh	r3, [r7, #6]
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	d101      	bne.n	8001d38 <HAL_UART_Transmit+0x30>
    {
      return  HAL_ERROR;
 8001d34:	2301      	movs	r3, #1
 8001d36:	e06e      	b.n	8001e16 <HAL_UART_Transmit+0x10e>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001d38:	68fb      	ldr	r3, [r7, #12]
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	645a      	str	r2, [r3, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8001d3e:	68fb      	ldr	r3, [r7, #12]
 8001d40:	2221      	movs	r2, #33	@ 0x21
 8001d42:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8001d46:	f7ff fcc1 	bl	80016cc <HAL_GetTick>
 8001d4a:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8001d4c:	68fb      	ldr	r3, [r7, #12]
 8001d4e:	88fa      	ldrh	r2, [r7, #6]
 8001d50:	849a      	strh	r2, [r3, #36]	@ 0x24
    huart->TxXferCount = Size;
 8001d52:	68fb      	ldr	r3, [r7, #12]
 8001d54:	88fa      	ldrh	r2, [r7, #6]
 8001d56:	84da      	strh	r2, [r3, #38]	@ 0x26

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8001d58:	68fb      	ldr	r3, [r7, #12]
 8001d5a:	689b      	ldr	r3, [r3, #8]
 8001d5c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001d60:	d108      	bne.n	8001d74 <HAL_UART_Transmit+0x6c>
 8001d62:	68fb      	ldr	r3, [r7, #12]
 8001d64:	691b      	ldr	r3, [r3, #16]
 8001d66:	2b00      	cmp	r3, #0
 8001d68:	d104      	bne.n	8001d74 <HAL_UART_Transmit+0x6c>
    {
      pdata8bits  = NULL;
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 8001d6e:	68bb      	ldr	r3, [r7, #8]
 8001d70:	61bb      	str	r3, [r7, #24]
 8001d72:	e003      	b.n	8001d7c <HAL_UART_Transmit+0x74>
    }
    else
    {
      pdata8bits  = pData;
 8001d74:	68bb      	ldr	r3, [r7, #8]
 8001d76:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8001d78:	2300      	movs	r3, #0
 8001d7a:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8001d7c:	e02e      	b.n	8001ddc <HAL_UART_Transmit+0xd4>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8001d7e:	683b      	ldr	r3, [r7, #0]
 8001d80:	9300      	str	r3, [sp, #0]
 8001d82:	697b      	ldr	r3, [r7, #20]
 8001d84:	2200      	movs	r2, #0
 8001d86:	2180      	movs	r1, #128	@ 0x80
 8001d88:	68f8      	ldr	r0, [r7, #12]
 8001d8a:	f000 f904 	bl	8001f96 <UART_WaitOnFlagUntilTimeout>
 8001d8e:	4603      	mov	r3, r0
 8001d90:	2b00      	cmp	r3, #0
 8001d92:	d005      	beq.n	8001da0 <HAL_UART_Transmit+0x98>
      {
        huart->gState = HAL_UART_STATE_READY;
 8001d94:	68fb      	ldr	r3, [r7, #12]
 8001d96:	2220      	movs	r2, #32
 8001d98:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

        return HAL_TIMEOUT;
 8001d9c:	2303      	movs	r3, #3
 8001d9e:	e03a      	b.n	8001e16 <HAL_UART_Transmit+0x10e>
      }
      if (pdata8bits == NULL)
 8001da0:	69fb      	ldr	r3, [r7, #28]
 8001da2:	2b00      	cmp	r3, #0
 8001da4:	d10b      	bne.n	8001dbe <HAL_UART_Transmit+0xb6>
      {
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8001da6:	69bb      	ldr	r3, [r7, #24]
 8001da8:	881b      	ldrh	r3, [r3, #0]
 8001daa:	461a      	mov	r2, r3
 8001dac:	68fb      	ldr	r3, [r7, #12]
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001db4:	605a      	str	r2, [r3, #4]
        pdata16bits++;
 8001db6:	69bb      	ldr	r3, [r7, #24]
 8001db8:	3302      	adds	r3, #2
 8001dba:	61bb      	str	r3, [r7, #24]
 8001dbc:	e007      	b.n	8001dce <HAL_UART_Transmit+0xc6>
      }
      else
      {
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8001dbe:	69fb      	ldr	r3, [r7, #28]
 8001dc0:	781a      	ldrb	r2, [r3, #0]
 8001dc2:	68fb      	ldr	r3, [r7, #12]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8001dc8:	69fb      	ldr	r3, [r7, #28]
 8001dca:	3301      	adds	r3, #1
 8001dcc:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8001dce:	68fb      	ldr	r3, [r7, #12]
 8001dd0:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8001dd2:	b29b      	uxth	r3, r3
 8001dd4:	3b01      	subs	r3, #1
 8001dd6:	b29a      	uxth	r2, r3
 8001dd8:	68fb      	ldr	r3, [r7, #12]
 8001dda:	84da      	strh	r2, [r3, #38]	@ 0x26
    while (huart->TxXferCount > 0U)
 8001ddc:	68fb      	ldr	r3, [r7, #12]
 8001dde:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8001de0:	b29b      	uxth	r3, r3
 8001de2:	2b00      	cmp	r3, #0
 8001de4:	d1cb      	bne.n	8001d7e <HAL_UART_Transmit+0x76>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8001de6:	683b      	ldr	r3, [r7, #0]
 8001de8:	9300      	str	r3, [sp, #0]
 8001dea:	697b      	ldr	r3, [r7, #20]
 8001dec:	2200      	movs	r2, #0
 8001dee:	2140      	movs	r1, #64	@ 0x40
 8001df0:	68f8      	ldr	r0, [r7, #12]
 8001df2:	f000 f8d0 	bl	8001f96 <UART_WaitOnFlagUntilTimeout>
 8001df6:	4603      	mov	r3, r0
 8001df8:	2b00      	cmp	r3, #0
 8001dfa:	d005      	beq.n	8001e08 <HAL_UART_Transmit+0x100>
    {
      huart->gState = HAL_UART_STATE_READY;
 8001dfc:	68fb      	ldr	r3, [r7, #12]
 8001dfe:	2220      	movs	r2, #32
 8001e00:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      return HAL_TIMEOUT;
 8001e04:	2303      	movs	r3, #3
 8001e06:	e006      	b.n	8001e16 <HAL_UART_Transmit+0x10e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8001e08:	68fb      	ldr	r3, [r7, #12]
 8001e0a:	2220      	movs	r2, #32
 8001e0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    return HAL_OK;
 8001e10:	2300      	movs	r3, #0
 8001e12:	e000      	b.n	8001e16 <HAL_UART_Transmit+0x10e>
  }
  else
  {
    return HAL_BUSY;
 8001e14:	2302      	movs	r3, #2
  }
}
 8001e16:	4618      	mov	r0, r3
 8001e18:	3720      	adds	r7, #32
 8001e1a:	46bd      	mov	sp, r7
 8001e1c:	bd80      	pop	{r7, pc}

08001e1e <HAL_UART_Receive>:
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8001e1e:	b580      	push	{r7, lr}
 8001e20:	b08a      	sub	sp, #40	@ 0x28
 8001e22:	af02      	add	r7, sp, #8
 8001e24:	60f8      	str	r0, [r7, #12]
 8001e26:	60b9      	str	r1, [r7, #8]
 8001e28:	603b      	str	r3, [r7, #0]
 8001e2a:	4613      	mov	r3, r2
 8001e2c:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 8001e2e:	2300      	movs	r3, #0
 8001e30:	617b      	str	r3, [r7, #20]

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8001e38:	b2db      	uxtb	r3, r3
 8001e3a:	2b20      	cmp	r3, #32
 8001e3c:	f040 8081 	bne.w	8001f42 <HAL_UART_Receive+0x124>
  {
    if ((pData == NULL) || (Size == 0U))
 8001e40:	68bb      	ldr	r3, [r7, #8]
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d002      	beq.n	8001e4c <HAL_UART_Receive+0x2e>
 8001e46:	88fb      	ldrh	r3, [r7, #6]
 8001e48:	2b00      	cmp	r3, #0
 8001e4a:	d101      	bne.n	8001e50 <HAL_UART_Receive+0x32>
    {
      return  HAL_ERROR;
 8001e4c:	2301      	movs	r3, #1
 8001e4e:	e079      	b.n	8001f44 <HAL_UART_Receive+0x126>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	2200      	movs	r2, #0
 8001e54:	645a      	str	r2, [r3, #68]	@ 0x44
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8001e56:	68fb      	ldr	r3, [r7, #12]
 8001e58:	2222      	movs	r2, #34	@ 0x22
 8001e5a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001e5e:	68fb      	ldr	r3, [r7, #12]
 8001e60:	2200      	movs	r2, #0
 8001e62:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8001e64:	f7ff fc32 	bl	80016cc <HAL_GetTick>
 8001e68:	6178      	str	r0, [r7, #20]

    huart->RxXferSize = Size;
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	88fa      	ldrh	r2, [r7, #6]
 8001e6e:	859a      	strh	r2, [r3, #44]	@ 0x2c
    huart->RxXferCount = Size;
 8001e70:	68fb      	ldr	r3, [r7, #12]
 8001e72:	88fa      	ldrh	r2, [r7, #6]
 8001e74:	85da      	strh	r2, [r3, #46]	@ 0x2e

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8001e76:	68fb      	ldr	r3, [r7, #12]
 8001e78:	689b      	ldr	r3, [r3, #8]
 8001e7a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001e7e:	d108      	bne.n	8001e92 <HAL_UART_Receive+0x74>
 8001e80:	68fb      	ldr	r3, [r7, #12]
 8001e82:	691b      	ldr	r3, [r3, #16]
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d104      	bne.n	8001e92 <HAL_UART_Receive+0x74>
    {
      pdata8bits  = NULL;
 8001e88:	2300      	movs	r3, #0
 8001e8a:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8001e8c:	68bb      	ldr	r3, [r7, #8]
 8001e8e:	61bb      	str	r3, [r7, #24]
 8001e90:	e003      	b.n	8001e9a <HAL_UART_Receive+0x7c>
    }
    else
    {
      pdata8bits  = pData;
 8001e92:	68bb      	ldr	r3, [r7, #8]
 8001e94:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8001e96:	2300      	movs	r3, #0
 8001e98:	61bb      	str	r3, [r7, #24]
    }

    /* Check the remain data to be received */
    while (huart->RxXferCount > 0U)
 8001e9a:	e047      	b.n	8001f2c <HAL_UART_Receive+0x10e>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8001e9c:	683b      	ldr	r3, [r7, #0]
 8001e9e:	9300      	str	r3, [sp, #0]
 8001ea0:	697b      	ldr	r3, [r7, #20]
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	2120      	movs	r1, #32
 8001ea6:	68f8      	ldr	r0, [r7, #12]
 8001ea8:	f000 f875 	bl	8001f96 <UART_WaitOnFlagUntilTimeout>
 8001eac:	4603      	mov	r3, r0
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	d005      	beq.n	8001ebe <HAL_UART_Receive+0xa0>
      {
        huart->RxState = HAL_UART_STATE_READY;
 8001eb2:	68fb      	ldr	r3, [r7, #12]
 8001eb4:	2220      	movs	r2, #32
 8001eb6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

        return HAL_TIMEOUT;
 8001eba:	2303      	movs	r3, #3
 8001ebc:	e042      	b.n	8001f44 <HAL_UART_Receive+0x126>
      }
      if (pdata8bits == NULL)
 8001ebe:	69fb      	ldr	r3, [r7, #28]
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	d10c      	bne.n	8001ede <HAL_UART_Receive+0xc0>
      {
        *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 8001ec4:	68fb      	ldr	r3, [r7, #12]
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	685b      	ldr	r3, [r3, #4]
 8001eca:	b29b      	uxth	r3, r3
 8001ecc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001ed0:	b29a      	uxth	r2, r3
 8001ed2:	69bb      	ldr	r3, [r7, #24]
 8001ed4:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 8001ed6:	69bb      	ldr	r3, [r7, #24]
 8001ed8:	3302      	adds	r3, #2
 8001eda:	61bb      	str	r3, [r7, #24]
 8001edc:	e01f      	b.n	8001f1e <HAL_UART_Receive+0x100>
      }
      else
      {
        if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8001ede:	68fb      	ldr	r3, [r7, #12]
 8001ee0:	689b      	ldr	r3, [r3, #8]
 8001ee2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001ee6:	d007      	beq.n	8001ef8 <HAL_UART_Receive+0xda>
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	689b      	ldr	r3, [r3, #8]
 8001eec:	2b00      	cmp	r3, #0
 8001eee:	d10a      	bne.n	8001f06 <HAL_UART_Receive+0xe8>
 8001ef0:	68fb      	ldr	r3, [r7, #12]
 8001ef2:	691b      	ldr	r3, [r3, #16]
 8001ef4:	2b00      	cmp	r3, #0
 8001ef6:	d106      	bne.n	8001f06 <HAL_UART_Receive+0xe8>
        {
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	681b      	ldr	r3, [r3, #0]
 8001efc:	685b      	ldr	r3, [r3, #4]
 8001efe:	b2da      	uxtb	r2, r3
 8001f00:	69fb      	ldr	r3, [r7, #28]
 8001f02:	701a      	strb	r2, [r3, #0]
 8001f04:	e008      	b.n	8001f18 <HAL_UART_Receive+0xfa>
        }
        else
        {
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8001f06:	68fb      	ldr	r3, [r7, #12]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	b2db      	uxtb	r3, r3
 8001f0e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001f12:	b2da      	uxtb	r2, r3
 8001f14:	69fb      	ldr	r3, [r7, #28]
 8001f16:	701a      	strb	r2, [r3, #0]
        }
        pdata8bits++;
 8001f18:	69fb      	ldr	r3, [r7, #28]
 8001f1a:	3301      	adds	r3, #1
 8001f1c:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8001f1e:	68fb      	ldr	r3, [r7, #12]
 8001f20:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8001f22:	b29b      	uxth	r3, r3
 8001f24:	3b01      	subs	r3, #1
 8001f26:	b29a      	uxth	r2, r3
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	85da      	strh	r2, [r3, #46]	@ 0x2e
    while (huart->RxXferCount > 0U)
 8001f2c:	68fb      	ldr	r3, [r7, #12]
 8001f2e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8001f30:	b29b      	uxth	r3, r3
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d1b2      	bne.n	8001e9c <HAL_UART_Receive+0x7e>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 8001f36:	68fb      	ldr	r3, [r7, #12]
 8001f38:	2220      	movs	r2, #32
 8001f3a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    return HAL_OK;
 8001f3e:	2300      	movs	r3, #0
 8001f40:	e000      	b.n	8001f44 <HAL_UART_Receive+0x126>
  }
  else
  {
    return HAL_BUSY;
 8001f42:	2302      	movs	r3, #2
  }
}
 8001f44:	4618      	mov	r0, r3
 8001f46:	3720      	adds	r7, #32
 8001f48:	46bd      	mov	sp, r7
 8001f4a:	bd80      	pop	{r7, pc}

08001f4c <HAL_UART_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	b084      	sub	sp, #16
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	60f8      	str	r0, [r7, #12]
 8001f54:	60b9      	str	r1, [r7, #8]
 8001f56:	4613      	mov	r3, r2
 8001f58:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8001f5a:	68fb      	ldr	r3, [r7, #12]
 8001f5c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8001f60:	b2db      	uxtb	r3, r3
 8001f62:	2b20      	cmp	r3, #32
 8001f64:	d112      	bne.n	8001f8c <HAL_UART_Receive_IT+0x40>
  {
    if ((pData == NULL) || (Size == 0U))
 8001f66:	68bb      	ldr	r3, [r7, #8]
 8001f68:	2b00      	cmp	r3, #0
 8001f6a:	d002      	beq.n	8001f72 <HAL_UART_Receive_IT+0x26>
 8001f6c:	88fb      	ldrh	r3, [r7, #6]
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d101      	bne.n	8001f76 <HAL_UART_Receive_IT+0x2a>
    {
      return HAL_ERROR;
 8001f72:	2301      	movs	r3, #1
 8001f74:	e00b      	b.n	8001f8e <HAL_UART_Receive_IT+0x42>
    }

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001f76:	68fb      	ldr	r3, [r7, #12]
 8001f78:	2200      	movs	r2, #0
 8001f7a:	631a      	str	r2, [r3, #48]	@ 0x30

    return (UART_Start_Receive_IT(huart, pData, Size));
 8001f7c:	88fb      	ldrh	r3, [r7, #6]
 8001f7e:	461a      	mov	r2, r3
 8001f80:	68b9      	ldr	r1, [r7, #8]
 8001f82:	68f8      	ldr	r0, [r7, #12]
 8001f84:	f000 f860 	bl	8002048 <UART_Start_Receive_IT>
 8001f88:	4603      	mov	r3, r0
 8001f8a:	e000      	b.n	8001f8e <HAL_UART_Receive_IT+0x42>
  }
  else
  {
    return HAL_BUSY;
 8001f8c:	2302      	movs	r3, #2
  }
}
 8001f8e:	4618      	mov	r0, r3
 8001f90:	3710      	adds	r7, #16
 8001f92:	46bd      	mov	sp, r7
 8001f94:	bd80      	pop	{r7, pc}

08001f96 <UART_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                                     uint32_t Tickstart, uint32_t Timeout)
{
 8001f96:	b580      	push	{r7, lr}
 8001f98:	b086      	sub	sp, #24
 8001f9a:	af00      	add	r7, sp, #0
 8001f9c:	60f8      	str	r0, [r7, #12]
 8001f9e:	60b9      	str	r1, [r7, #8]
 8001fa0:	603b      	str	r3, [r7, #0]
 8001fa2:	4613      	mov	r3, r2
 8001fa4:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8001fa6:	e03b      	b.n	8002020 <UART_WaitOnFlagUntilTimeout+0x8a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8001fa8:	6a3b      	ldr	r3, [r7, #32]
 8001faa:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8001fae:	d037      	beq.n	8002020 <UART_WaitOnFlagUntilTimeout+0x8a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001fb0:	f7ff fb8c 	bl	80016cc <HAL_GetTick>
 8001fb4:	4602      	mov	r2, r0
 8001fb6:	683b      	ldr	r3, [r7, #0]
 8001fb8:	1ad3      	subs	r3, r2, r3
 8001fba:	6a3a      	ldr	r2, [r7, #32]
 8001fbc:	429a      	cmp	r2, r3
 8001fbe:	d302      	bcc.n	8001fc6 <UART_WaitOnFlagUntilTimeout+0x30>
 8001fc0:	6a3b      	ldr	r3, [r7, #32]
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d101      	bne.n	8001fca <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 8001fc6:	2303      	movs	r3, #3
 8001fc8:	e03a      	b.n	8002040 <UART_WaitOnFlagUntilTimeout+0xaa>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8001fca:	68fb      	ldr	r3, [r7, #12]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	68db      	ldr	r3, [r3, #12]
 8001fd0:	f003 0304 	and.w	r3, r3, #4
 8001fd4:	2b00      	cmp	r3, #0
 8001fd6:	d023      	beq.n	8002020 <UART_WaitOnFlagUntilTimeout+0x8a>
 8001fd8:	68bb      	ldr	r3, [r7, #8]
 8001fda:	2b80      	cmp	r3, #128	@ 0x80
 8001fdc:	d020      	beq.n	8002020 <UART_WaitOnFlagUntilTimeout+0x8a>
 8001fde:	68bb      	ldr	r3, [r7, #8]
 8001fe0:	2b40      	cmp	r3, #64	@ 0x40
 8001fe2:	d01d      	beq.n	8002020 <UART_WaitOnFlagUntilTimeout+0x8a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	f003 0308 	and.w	r3, r3, #8
 8001fee:	2b08      	cmp	r3, #8
 8001ff0:	d116      	bne.n	8002020 <UART_WaitOnFlagUntilTimeout+0x8a>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_OREFLAG(huart);
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	617b      	str	r3, [r7, #20]
 8001ff6:	68fb      	ldr	r3, [r7, #12]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	617b      	str	r3, [r7, #20]
 8001ffe:	68fb      	ldr	r3, [r7, #12]
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	685b      	ldr	r3, [r3, #4]
 8002004:	617b      	str	r3, [r7, #20]
 8002006:	697b      	ldr	r3, [r7, #20]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 8002008:	68f8      	ldr	r0, [r7, #12]
 800200a:	f000 f857 	bl	80020bc <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800200e:	68fb      	ldr	r3, [r7, #12]
 8002010:	2208      	movs	r2, #8
 8002012:	645a      	str	r2, [r3, #68]	@ 0x44

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	2200      	movs	r2, #0
 8002018:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

          return HAL_ERROR;
 800201c:	2301      	movs	r3, #1
 800201e:	e00f      	b.n	8002040 <UART_WaitOnFlagUntilTimeout+0xaa>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	681a      	ldr	r2, [r3, #0]
 8002026:	68bb      	ldr	r3, [r7, #8]
 8002028:	4013      	ands	r3, r2
 800202a:	68ba      	ldr	r2, [r7, #8]
 800202c:	429a      	cmp	r2, r3
 800202e:	bf0c      	ite	eq
 8002030:	2301      	moveq	r3, #1
 8002032:	2300      	movne	r3, #0
 8002034:	b2db      	uxtb	r3, r3
 8002036:	461a      	mov	r2, r3
 8002038:	79fb      	ldrb	r3, [r7, #7]
 800203a:	429a      	cmp	r2, r3
 800203c:	d0b4      	beq.n	8001fa8 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800203e:	2300      	movs	r3, #0
}
 8002040:	4618      	mov	r0, r3
 8002042:	3718      	adds	r7, #24
 8002044:	46bd      	mov	sp, r7
 8002046:	bd80      	pop	{r7, pc}

08002048 <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8002048:	b480      	push	{r7}
 800204a:	b085      	sub	sp, #20
 800204c:	af00      	add	r7, sp, #0
 800204e:	60f8      	str	r0, [r7, #12]
 8002050:	60b9      	str	r1, [r7, #8]
 8002052:	4613      	mov	r3, r2
 8002054:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr = pData;
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	68ba      	ldr	r2, [r7, #8]
 800205a:	629a      	str	r2, [r3, #40]	@ 0x28
  huart->RxXferSize = Size;
 800205c:	68fb      	ldr	r3, [r7, #12]
 800205e:	88fa      	ldrh	r2, [r7, #6]
 8002060:	859a      	strh	r2, [r3, #44]	@ 0x2c
  huart->RxXferCount = Size;
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	88fa      	ldrh	r2, [r7, #6]
 8002066:	85da      	strh	r2, [r3, #46]	@ 0x2e

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002068:	68fb      	ldr	r3, [r7, #12]
 800206a:	2200      	movs	r2, #0
 800206c:	645a      	str	r2, [r3, #68]	@ 0x44
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800206e:	68fb      	ldr	r3, [r7, #12]
 8002070:	2222      	movs	r2, #34	@ 0x22
 8002072:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  if (huart->Init.Parity != UART_PARITY_NONE)
 8002076:	68fb      	ldr	r3, [r7, #12]
 8002078:	691b      	ldr	r3, [r3, #16]
 800207a:	2b00      	cmp	r3, #0
 800207c:	d007      	beq.n	800208e <UART_Start_Receive_IT+0x46>
  {
    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 800207e:	68fb      	ldr	r3, [r7, #12]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	68da      	ldr	r2, [r3, #12]
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800208c:	60da      	str	r2, [r3, #12]
  }

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 800208e:	68fb      	ldr	r3, [r7, #12]
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	695a      	ldr	r2, [r3, #20]
 8002094:	68fb      	ldr	r3, [r7, #12]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	f042 0201 	orr.w	r2, r2, #1
 800209c:	615a      	str	r2, [r3, #20]

  /* Enable the UART Data Register not empty Interrupt */
  __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	68da      	ldr	r2, [r3, #12]
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	f042 0220 	orr.w	r2, r2, #32
 80020ac:	60da      	str	r2, [r3, #12]

  return HAL_OK;
 80020ae:	2300      	movs	r3, #0
}
 80020b0:	4618      	mov	r0, r3
 80020b2:	3714      	adds	r7, #20
 80020b4:	46bd      	mov	sp, r7
 80020b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ba:	4770      	bx	lr

080020bc <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 80020bc:	b480      	push	{r7}
 80020be:	b095      	sub	sp, #84	@ 0x54
 80020c0:	af00      	add	r7, sp, #0
 80020c2:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	330c      	adds	r3, #12
 80020ca:	637b      	str	r3, [r7, #52]	@ 0x34
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80020cc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80020ce:	e853 3f00 	ldrex	r3, [r3]
 80020d2:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 80020d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80020d6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80020da:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	330c      	adds	r3, #12
 80020e2:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80020e4:	643a      	str	r2, [r7, #64]	@ 0x40
 80020e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80020e8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80020ea:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80020ec:	e841 2300 	strex	r3, r2, [r1]
 80020f0:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 80020f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80020f4:	2b00      	cmp	r3, #0
 80020f6:	d1e5      	bne.n	80020c4 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	3314      	adds	r3, #20
 80020fe:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002100:	6a3b      	ldr	r3, [r7, #32]
 8002102:	e853 3f00 	ldrex	r3, [r3]
 8002106:	61fb      	str	r3, [r7, #28]
   return(result);
 8002108:	69fb      	ldr	r3, [r7, #28]
 800210a:	f023 0301 	bic.w	r3, r3, #1
 800210e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	3314      	adds	r3, #20
 8002116:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8002118:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800211a:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800211c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800211e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8002120:	e841 2300 	strex	r3, r2, [r1]
 8002124:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 8002126:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002128:	2b00      	cmp	r3, #0
 800212a:	d1e5      	bne.n	80020f8 <UART_EndRxTransfer+0x3c>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002130:	2b01      	cmp	r3, #1
 8002132:	d119      	bne.n	8002168 <UART_EndRxTransfer+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	330c      	adds	r3, #12
 800213a:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800213c:	68fb      	ldr	r3, [r7, #12]
 800213e:	e853 3f00 	ldrex	r3, [r3]
 8002142:	60bb      	str	r3, [r7, #8]
   return(result);
 8002144:	68bb      	ldr	r3, [r7, #8]
 8002146:	f023 0310 	bic.w	r3, r3, #16
 800214a:	647b      	str	r3, [r7, #68]	@ 0x44
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	330c      	adds	r3, #12
 8002152:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8002154:	61ba      	str	r2, [r7, #24]
 8002156:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002158:	6979      	ldr	r1, [r7, #20]
 800215a:	69ba      	ldr	r2, [r7, #24]
 800215c:	e841 2300 	strex	r3, r2, [r1]
 8002160:	613b      	str	r3, [r7, #16]
   return(result);
 8002162:	693b      	ldr	r3, [r7, #16]
 8002164:	2b00      	cmp	r3, #0
 8002166:	d1e5      	bne.n	8002134 <UART_EndRxTransfer+0x78>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	2220      	movs	r2, #32
 800216c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	2200      	movs	r2, #0
 8002174:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8002176:	bf00      	nop
 8002178:	3754      	adds	r7, #84	@ 0x54
 800217a:	46bd      	mov	sp, r7
 800217c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002180:	4770      	bx	lr
	...

08002184 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8002184:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002188:	b0c0      	sub	sp, #256	@ 0x100
 800218a:	af00      	add	r7, sp, #0
 800218c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002190:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	691b      	ldr	r3, [r3, #16]
 8002198:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800219c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021a0:	68d9      	ldr	r1, [r3, #12]
 80021a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021a6:	681a      	ldr	r2, [r3, #0]
 80021a8:	ea40 0301 	orr.w	r3, r0, r1
 80021ac:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80021ae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021b2:	689a      	ldr	r2, [r3, #8]
 80021b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021b8:	691b      	ldr	r3, [r3, #16]
 80021ba:	431a      	orrs	r2, r3
 80021bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021c0:	695b      	ldr	r3, [r3, #20]
 80021c2:	431a      	orrs	r2, r3
 80021c4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021c8:	69db      	ldr	r3, [r3, #28]
 80021ca:	4313      	orrs	r3, r2
 80021cc:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
  MODIFY_REG(huart->Instance->CR1,
 80021d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	68db      	ldr	r3, [r3, #12]
 80021d8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80021dc:	f021 010c 	bic.w	r1, r1, #12
 80021e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021e4:	681a      	ldr	r2, [r3, #0]
 80021e6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80021ea:	430b      	orrs	r3, r1
 80021ec:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80021ee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	695b      	ldr	r3, [r3, #20]
 80021f6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80021fa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80021fe:	6999      	ldr	r1, [r3, #24]
 8002200:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002204:	681a      	ldr	r2, [r3, #0]
 8002206:	ea40 0301 	orr.w	r3, r0, r1
 800220a:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800220c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002210:	681a      	ldr	r2, [r3, #0]
 8002212:	4b8f      	ldr	r3, [pc, #572]	@ (8002450 <UART_SetConfig+0x2cc>)
 8002214:	429a      	cmp	r2, r3
 8002216:	d005      	beq.n	8002224 <UART_SetConfig+0xa0>
 8002218:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800221c:	681a      	ldr	r2, [r3, #0]
 800221e:	4b8d      	ldr	r3, [pc, #564]	@ (8002454 <UART_SetConfig+0x2d0>)
 8002220:	429a      	cmp	r2, r3
 8002222:	d104      	bne.n	800222e <UART_SetConfig+0xaa>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8002224:	f7ff fd0c 	bl	8001c40 <HAL_RCC_GetPCLK2Freq>
 8002228:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800222c:	e003      	b.n	8002236 <UART_SetConfig+0xb2>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 800222e:	f7ff fcf3 	bl	8001c18 <HAL_RCC_GetPCLK1Freq>
 8002232:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002236:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800223a:	69db      	ldr	r3, [r3, #28]
 800223c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8002240:	f040 810c 	bne.w	800245c <UART_SetConfig+0x2d8>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8002244:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8002248:	2200      	movs	r2, #0
 800224a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800224e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8002252:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8002256:	4622      	mov	r2, r4
 8002258:	462b      	mov	r3, r5
 800225a:	1891      	adds	r1, r2, r2
 800225c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800225e:	415b      	adcs	r3, r3
 8002260:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002262:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8002266:	4621      	mov	r1, r4
 8002268:	eb12 0801 	adds.w	r8, r2, r1
 800226c:	4629      	mov	r1, r5
 800226e:	eb43 0901 	adc.w	r9, r3, r1
 8002272:	f04f 0200 	mov.w	r2, #0
 8002276:	f04f 0300 	mov.w	r3, #0
 800227a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800227e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002282:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002286:	4690      	mov	r8, r2
 8002288:	4699      	mov	r9, r3
 800228a:	4623      	mov	r3, r4
 800228c:	eb18 0303 	adds.w	r3, r8, r3
 8002290:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8002294:	462b      	mov	r3, r5
 8002296:	eb49 0303 	adc.w	r3, r9, r3
 800229a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800229e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80022a2:	685b      	ldr	r3, [r3, #4]
 80022a4:	2200      	movs	r2, #0
 80022a6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80022aa:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80022ae:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80022b2:	460b      	mov	r3, r1
 80022b4:	18db      	adds	r3, r3, r3
 80022b6:	653b      	str	r3, [r7, #80]	@ 0x50
 80022b8:	4613      	mov	r3, r2
 80022ba:	eb42 0303 	adc.w	r3, r2, r3
 80022be:	657b      	str	r3, [r7, #84]	@ 0x54
 80022c0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80022c4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80022c8:	f7fe fce6 	bl	8000c98 <__aeabi_uldivmod>
 80022cc:	4602      	mov	r2, r0
 80022ce:	460b      	mov	r3, r1
 80022d0:	4b61      	ldr	r3, [pc, #388]	@ (8002458 <UART_SetConfig+0x2d4>)
 80022d2:	fba3 2302 	umull	r2, r3, r3, r2
 80022d6:	095b      	lsrs	r3, r3, #5
 80022d8:	011c      	lsls	r4, r3, #4
 80022da:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80022de:	2200      	movs	r2, #0
 80022e0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80022e4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80022e8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80022ec:	4642      	mov	r2, r8
 80022ee:	464b      	mov	r3, r9
 80022f0:	1891      	adds	r1, r2, r2
 80022f2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80022f4:	415b      	adcs	r3, r3
 80022f6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80022f8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80022fc:	4641      	mov	r1, r8
 80022fe:	eb12 0a01 	adds.w	sl, r2, r1
 8002302:	4649      	mov	r1, r9
 8002304:	eb43 0b01 	adc.w	fp, r3, r1
 8002308:	f04f 0200 	mov.w	r2, #0
 800230c:	f04f 0300 	mov.w	r3, #0
 8002310:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8002314:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8002318:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800231c:	4692      	mov	sl, r2
 800231e:	469b      	mov	fp, r3
 8002320:	4643      	mov	r3, r8
 8002322:	eb1a 0303 	adds.w	r3, sl, r3
 8002326:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800232a:	464b      	mov	r3, r9
 800232c:	eb4b 0303 	adc.w	r3, fp, r3
 8002330:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8002334:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002338:	685b      	ldr	r3, [r3, #4]
 800233a:	2200      	movs	r2, #0
 800233c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8002340:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8002344:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8002348:	460b      	mov	r3, r1
 800234a:	18db      	adds	r3, r3, r3
 800234c:	643b      	str	r3, [r7, #64]	@ 0x40
 800234e:	4613      	mov	r3, r2
 8002350:	eb42 0303 	adc.w	r3, r2, r3
 8002354:	647b      	str	r3, [r7, #68]	@ 0x44
 8002356:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800235a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800235e:	f7fe fc9b 	bl	8000c98 <__aeabi_uldivmod>
 8002362:	4602      	mov	r2, r0
 8002364:	460b      	mov	r3, r1
 8002366:	4611      	mov	r1, r2
 8002368:	4b3b      	ldr	r3, [pc, #236]	@ (8002458 <UART_SetConfig+0x2d4>)
 800236a:	fba3 2301 	umull	r2, r3, r3, r1
 800236e:	095b      	lsrs	r3, r3, #5
 8002370:	2264      	movs	r2, #100	@ 0x64
 8002372:	fb02 f303 	mul.w	r3, r2, r3
 8002376:	1acb      	subs	r3, r1, r3
 8002378:	00db      	lsls	r3, r3, #3
 800237a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800237e:	4b36      	ldr	r3, [pc, #216]	@ (8002458 <UART_SetConfig+0x2d4>)
 8002380:	fba3 2302 	umull	r2, r3, r3, r2
 8002384:	095b      	lsrs	r3, r3, #5
 8002386:	005b      	lsls	r3, r3, #1
 8002388:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800238c:	441c      	add	r4, r3
 800238e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8002392:	2200      	movs	r2, #0
 8002394:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002398:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 800239c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80023a0:	4642      	mov	r2, r8
 80023a2:	464b      	mov	r3, r9
 80023a4:	1891      	adds	r1, r2, r2
 80023a6:	63b9      	str	r1, [r7, #56]	@ 0x38
 80023a8:	415b      	adcs	r3, r3
 80023aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80023ac:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80023b0:	4641      	mov	r1, r8
 80023b2:	1851      	adds	r1, r2, r1
 80023b4:	6339      	str	r1, [r7, #48]	@ 0x30
 80023b6:	4649      	mov	r1, r9
 80023b8:	414b      	adcs	r3, r1
 80023ba:	637b      	str	r3, [r7, #52]	@ 0x34
 80023bc:	f04f 0200 	mov.w	r2, #0
 80023c0:	f04f 0300 	mov.w	r3, #0
 80023c4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80023c8:	4659      	mov	r1, fp
 80023ca:	00cb      	lsls	r3, r1, #3
 80023cc:	4651      	mov	r1, sl
 80023ce:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80023d2:	4651      	mov	r1, sl
 80023d4:	00ca      	lsls	r2, r1, #3
 80023d6:	4610      	mov	r0, r2
 80023d8:	4619      	mov	r1, r3
 80023da:	4603      	mov	r3, r0
 80023dc:	4642      	mov	r2, r8
 80023de:	189b      	adds	r3, r3, r2
 80023e0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80023e4:	464b      	mov	r3, r9
 80023e6:	460a      	mov	r2, r1
 80023e8:	eb42 0303 	adc.w	r3, r2, r3
 80023ec:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80023f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80023f4:	685b      	ldr	r3, [r3, #4]
 80023f6:	2200      	movs	r2, #0
 80023f8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80023fc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8002400:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8002404:	460b      	mov	r3, r1
 8002406:	18db      	adds	r3, r3, r3
 8002408:	62bb      	str	r3, [r7, #40]	@ 0x28
 800240a:	4613      	mov	r3, r2
 800240c:	eb42 0303 	adc.w	r3, r2, r3
 8002410:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002412:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8002416:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800241a:	f7fe fc3d 	bl	8000c98 <__aeabi_uldivmod>
 800241e:	4602      	mov	r2, r0
 8002420:	460b      	mov	r3, r1
 8002422:	4b0d      	ldr	r3, [pc, #52]	@ (8002458 <UART_SetConfig+0x2d4>)
 8002424:	fba3 1302 	umull	r1, r3, r3, r2
 8002428:	095b      	lsrs	r3, r3, #5
 800242a:	2164      	movs	r1, #100	@ 0x64
 800242c:	fb01 f303 	mul.w	r3, r1, r3
 8002430:	1ad3      	subs	r3, r2, r3
 8002432:	00db      	lsls	r3, r3, #3
 8002434:	3332      	adds	r3, #50	@ 0x32
 8002436:	4a08      	ldr	r2, [pc, #32]	@ (8002458 <UART_SetConfig+0x2d4>)
 8002438:	fba2 2303 	umull	r2, r3, r2, r3
 800243c:	095b      	lsrs	r3, r3, #5
 800243e:	f003 0207 	and.w	r2, r3, #7
 8002442:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	4422      	add	r2, r4
 800244a:	609a      	str	r2, [r3, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 800244c:	e106      	b.n	800265c <UART_SetConfig+0x4d8>
 800244e:	bf00      	nop
 8002450:	40011000 	.word	0x40011000
 8002454:	40011400 	.word	0x40011400
 8002458:	51eb851f 	.word	0x51eb851f
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800245c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8002460:	2200      	movs	r2, #0
 8002462:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8002466:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800246a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800246e:	4642      	mov	r2, r8
 8002470:	464b      	mov	r3, r9
 8002472:	1891      	adds	r1, r2, r2
 8002474:	6239      	str	r1, [r7, #32]
 8002476:	415b      	adcs	r3, r3
 8002478:	627b      	str	r3, [r7, #36]	@ 0x24
 800247a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800247e:	4641      	mov	r1, r8
 8002480:	1854      	adds	r4, r2, r1
 8002482:	4649      	mov	r1, r9
 8002484:	eb43 0501 	adc.w	r5, r3, r1
 8002488:	f04f 0200 	mov.w	r2, #0
 800248c:	f04f 0300 	mov.w	r3, #0
 8002490:	00eb      	lsls	r3, r5, #3
 8002492:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002496:	00e2      	lsls	r2, r4, #3
 8002498:	4614      	mov	r4, r2
 800249a:	461d      	mov	r5, r3
 800249c:	4643      	mov	r3, r8
 800249e:	18e3      	adds	r3, r4, r3
 80024a0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80024a4:	464b      	mov	r3, r9
 80024a6:	eb45 0303 	adc.w	r3, r5, r3
 80024aa:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80024ae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80024b2:	685b      	ldr	r3, [r3, #4]
 80024b4:	2200      	movs	r2, #0
 80024b6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80024ba:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80024be:	f04f 0200 	mov.w	r2, #0
 80024c2:	f04f 0300 	mov.w	r3, #0
 80024c6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80024ca:	4629      	mov	r1, r5
 80024cc:	008b      	lsls	r3, r1, #2
 80024ce:	4621      	mov	r1, r4
 80024d0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80024d4:	4621      	mov	r1, r4
 80024d6:	008a      	lsls	r2, r1, #2
 80024d8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80024dc:	f7fe fbdc 	bl	8000c98 <__aeabi_uldivmod>
 80024e0:	4602      	mov	r2, r0
 80024e2:	460b      	mov	r3, r1
 80024e4:	4b60      	ldr	r3, [pc, #384]	@ (8002668 <UART_SetConfig+0x4e4>)
 80024e6:	fba3 2302 	umull	r2, r3, r3, r2
 80024ea:	095b      	lsrs	r3, r3, #5
 80024ec:	011c      	lsls	r4, r3, #4
 80024ee:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80024f2:	2200      	movs	r2, #0
 80024f4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80024f8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80024fc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8002500:	4642      	mov	r2, r8
 8002502:	464b      	mov	r3, r9
 8002504:	1891      	adds	r1, r2, r2
 8002506:	61b9      	str	r1, [r7, #24]
 8002508:	415b      	adcs	r3, r3
 800250a:	61fb      	str	r3, [r7, #28]
 800250c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002510:	4641      	mov	r1, r8
 8002512:	1851      	adds	r1, r2, r1
 8002514:	6139      	str	r1, [r7, #16]
 8002516:	4649      	mov	r1, r9
 8002518:	414b      	adcs	r3, r1
 800251a:	617b      	str	r3, [r7, #20]
 800251c:	f04f 0200 	mov.w	r2, #0
 8002520:	f04f 0300 	mov.w	r3, #0
 8002524:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002528:	4659      	mov	r1, fp
 800252a:	00cb      	lsls	r3, r1, #3
 800252c:	4651      	mov	r1, sl
 800252e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8002532:	4651      	mov	r1, sl
 8002534:	00ca      	lsls	r2, r1, #3
 8002536:	4610      	mov	r0, r2
 8002538:	4619      	mov	r1, r3
 800253a:	4603      	mov	r3, r0
 800253c:	4642      	mov	r2, r8
 800253e:	189b      	adds	r3, r3, r2
 8002540:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8002544:	464b      	mov	r3, r9
 8002546:	460a      	mov	r2, r1
 8002548:	eb42 0303 	adc.w	r3, r2, r3
 800254c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002550:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002554:	685b      	ldr	r3, [r3, #4]
 8002556:	2200      	movs	r2, #0
 8002558:	67bb      	str	r3, [r7, #120]	@ 0x78
 800255a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800255c:	f04f 0200 	mov.w	r2, #0
 8002560:	f04f 0300 	mov.w	r3, #0
 8002564:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8002568:	4649      	mov	r1, r9
 800256a:	008b      	lsls	r3, r1, #2
 800256c:	4641      	mov	r1, r8
 800256e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8002572:	4641      	mov	r1, r8
 8002574:	008a      	lsls	r2, r1, #2
 8002576:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800257a:	f7fe fb8d 	bl	8000c98 <__aeabi_uldivmod>
 800257e:	4602      	mov	r2, r0
 8002580:	460b      	mov	r3, r1
 8002582:	4611      	mov	r1, r2
 8002584:	4b38      	ldr	r3, [pc, #224]	@ (8002668 <UART_SetConfig+0x4e4>)
 8002586:	fba3 2301 	umull	r2, r3, r3, r1
 800258a:	095b      	lsrs	r3, r3, #5
 800258c:	2264      	movs	r2, #100	@ 0x64
 800258e:	fb02 f303 	mul.w	r3, r2, r3
 8002592:	1acb      	subs	r3, r1, r3
 8002594:	011b      	lsls	r3, r3, #4
 8002596:	3332      	adds	r3, #50	@ 0x32
 8002598:	4a33      	ldr	r2, [pc, #204]	@ (8002668 <UART_SetConfig+0x4e4>)
 800259a:	fba2 2303 	umull	r2, r3, r2, r3
 800259e:	095b      	lsrs	r3, r3, #5
 80025a0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80025a4:	441c      	add	r4, r3
 80025a6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80025aa:	2200      	movs	r2, #0
 80025ac:	673b      	str	r3, [r7, #112]	@ 0x70
 80025ae:	677a      	str	r2, [r7, #116]	@ 0x74
 80025b0:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80025b4:	4642      	mov	r2, r8
 80025b6:	464b      	mov	r3, r9
 80025b8:	1891      	adds	r1, r2, r2
 80025ba:	60b9      	str	r1, [r7, #8]
 80025bc:	415b      	adcs	r3, r3
 80025be:	60fb      	str	r3, [r7, #12]
 80025c0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80025c4:	4641      	mov	r1, r8
 80025c6:	1851      	adds	r1, r2, r1
 80025c8:	6039      	str	r1, [r7, #0]
 80025ca:	4649      	mov	r1, r9
 80025cc:	414b      	adcs	r3, r1
 80025ce:	607b      	str	r3, [r7, #4]
 80025d0:	f04f 0200 	mov.w	r2, #0
 80025d4:	f04f 0300 	mov.w	r3, #0
 80025d8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80025dc:	4659      	mov	r1, fp
 80025de:	00cb      	lsls	r3, r1, #3
 80025e0:	4651      	mov	r1, sl
 80025e2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80025e6:	4651      	mov	r1, sl
 80025e8:	00ca      	lsls	r2, r1, #3
 80025ea:	4610      	mov	r0, r2
 80025ec:	4619      	mov	r1, r3
 80025ee:	4603      	mov	r3, r0
 80025f0:	4642      	mov	r2, r8
 80025f2:	189b      	adds	r3, r3, r2
 80025f4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80025f6:	464b      	mov	r3, r9
 80025f8:	460a      	mov	r2, r1
 80025fa:	eb42 0303 	adc.w	r3, r2, r3
 80025fe:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8002600:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002604:	685b      	ldr	r3, [r3, #4]
 8002606:	2200      	movs	r2, #0
 8002608:	663b      	str	r3, [r7, #96]	@ 0x60
 800260a:	667a      	str	r2, [r7, #100]	@ 0x64
 800260c:	f04f 0200 	mov.w	r2, #0
 8002610:	f04f 0300 	mov.w	r3, #0
 8002614:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8002618:	4649      	mov	r1, r9
 800261a:	008b      	lsls	r3, r1, #2
 800261c:	4641      	mov	r1, r8
 800261e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8002622:	4641      	mov	r1, r8
 8002624:	008a      	lsls	r2, r1, #2
 8002626:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800262a:	f7fe fb35 	bl	8000c98 <__aeabi_uldivmod>
 800262e:	4602      	mov	r2, r0
 8002630:	460b      	mov	r3, r1
 8002632:	4b0d      	ldr	r3, [pc, #52]	@ (8002668 <UART_SetConfig+0x4e4>)
 8002634:	fba3 1302 	umull	r1, r3, r3, r2
 8002638:	095b      	lsrs	r3, r3, #5
 800263a:	2164      	movs	r1, #100	@ 0x64
 800263c:	fb01 f303 	mul.w	r3, r1, r3
 8002640:	1ad3      	subs	r3, r2, r3
 8002642:	011b      	lsls	r3, r3, #4
 8002644:	3332      	adds	r3, #50	@ 0x32
 8002646:	4a08      	ldr	r2, [pc, #32]	@ (8002668 <UART_SetConfig+0x4e4>)
 8002648:	fba2 2303 	umull	r2, r3, r2, r3
 800264c:	095b      	lsrs	r3, r3, #5
 800264e:	f003 020f 	and.w	r2, r3, #15
 8002652:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	4422      	add	r2, r4
 800265a:	609a      	str	r2, [r3, #8]
}
 800265c:	bf00      	nop
 800265e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8002662:	46bd      	mov	sp, r7
 8002664:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002668:	51eb851f 	.word	0x51eb851f

0800266c <__cvt>:
 800266c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002670:	ec57 6b10 	vmov	r6, r7, d0
 8002674:	2f00      	cmp	r7, #0
 8002676:	460c      	mov	r4, r1
 8002678:	4619      	mov	r1, r3
 800267a:	463b      	mov	r3, r7
 800267c:	bfbb      	ittet	lt
 800267e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8002682:	461f      	movlt	r7, r3
 8002684:	2300      	movge	r3, #0
 8002686:	232d      	movlt	r3, #45	@ 0x2d
 8002688:	700b      	strb	r3, [r1, #0]
 800268a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800268c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8002690:	4691      	mov	r9, r2
 8002692:	f023 0820 	bic.w	r8, r3, #32
 8002696:	bfbc      	itt	lt
 8002698:	4632      	movlt	r2, r6
 800269a:	4616      	movlt	r6, r2
 800269c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80026a0:	d005      	beq.n	80026ae <__cvt+0x42>
 80026a2:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80026a6:	d100      	bne.n	80026aa <__cvt+0x3e>
 80026a8:	3401      	adds	r4, #1
 80026aa:	2102      	movs	r1, #2
 80026ac:	e000      	b.n	80026b0 <__cvt+0x44>
 80026ae:	2103      	movs	r1, #3
 80026b0:	ab03      	add	r3, sp, #12
 80026b2:	9301      	str	r3, [sp, #4]
 80026b4:	ab02      	add	r3, sp, #8
 80026b6:	9300      	str	r3, [sp, #0]
 80026b8:	ec47 6b10 	vmov	d0, r6, r7
 80026bc:	4653      	mov	r3, sl
 80026be:	4622      	mov	r2, r4
 80026c0:	f001 f89e 	bl	8003800 <_dtoa_r>
 80026c4:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80026c8:	4605      	mov	r5, r0
 80026ca:	d119      	bne.n	8002700 <__cvt+0x94>
 80026cc:	f019 0f01 	tst.w	r9, #1
 80026d0:	d00e      	beq.n	80026f0 <__cvt+0x84>
 80026d2:	eb00 0904 	add.w	r9, r0, r4
 80026d6:	2200      	movs	r2, #0
 80026d8:	2300      	movs	r3, #0
 80026da:	4630      	mov	r0, r6
 80026dc:	4639      	mov	r1, r7
 80026de:	f7fe f9fb 	bl	8000ad8 <__aeabi_dcmpeq>
 80026e2:	b108      	cbz	r0, 80026e8 <__cvt+0x7c>
 80026e4:	f8cd 900c 	str.w	r9, [sp, #12]
 80026e8:	2230      	movs	r2, #48	@ 0x30
 80026ea:	9b03      	ldr	r3, [sp, #12]
 80026ec:	454b      	cmp	r3, r9
 80026ee:	d31e      	bcc.n	800272e <__cvt+0xc2>
 80026f0:	9b03      	ldr	r3, [sp, #12]
 80026f2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80026f4:	1b5b      	subs	r3, r3, r5
 80026f6:	4628      	mov	r0, r5
 80026f8:	6013      	str	r3, [r2, #0]
 80026fa:	b004      	add	sp, #16
 80026fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002700:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8002704:	eb00 0904 	add.w	r9, r0, r4
 8002708:	d1e5      	bne.n	80026d6 <__cvt+0x6a>
 800270a:	7803      	ldrb	r3, [r0, #0]
 800270c:	2b30      	cmp	r3, #48	@ 0x30
 800270e:	d10a      	bne.n	8002726 <__cvt+0xba>
 8002710:	2200      	movs	r2, #0
 8002712:	2300      	movs	r3, #0
 8002714:	4630      	mov	r0, r6
 8002716:	4639      	mov	r1, r7
 8002718:	f7fe f9de 	bl	8000ad8 <__aeabi_dcmpeq>
 800271c:	b918      	cbnz	r0, 8002726 <__cvt+0xba>
 800271e:	f1c4 0401 	rsb	r4, r4, #1
 8002722:	f8ca 4000 	str.w	r4, [sl]
 8002726:	f8da 3000 	ldr.w	r3, [sl]
 800272a:	4499      	add	r9, r3
 800272c:	e7d3      	b.n	80026d6 <__cvt+0x6a>
 800272e:	1c59      	adds	r1, r3, #1
 8002730:	9103      	str	r1, [sp, #12]
 8002732:	701a      	strb	r2, [r3, #0]
 8002734:	e7d9      	b.n	80026ea <__cvt+0x7e>

08002736 <__exponent>:
 8002736:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002738:	2900      	cmp	r1, #0
 800273a:	bfba      	itte	lt
 800273c:	4249      	neglt	r1, r1
 800273e:	232d      	movlt	r3, #45	@ 0x2d
 8002740:	232b      	movge	r3, #43	@ 0x2b
 8002742:	2909      	cmp	r1, #9
 8002744:	7002      	strb	r2, [r0, #0]
 8002746:	7043      	strb	r3, [r0, #1]
 8002748:	dd29      	ble.n	800279e <__exponent+0x68>
 800274a:	f10d 0307 	add.w	r3, sp, #7
 800274e:	461d      	mov	r5, r3
 8002750:	270a      	movs	r7, #10
 8002752:	461a      	mov	r2, r3
 8002754:	fbb1 f6f7 	udiv	r6, r1, r7
 8002758:	fb07 1416 	mls	r4, r7, r6, r1
 800275c:	3430      	adds	r4, #48	@ 0x30
 800275e:	f802 4c01 	strb.w	r4, [r2, #-1]
 8002762:	460c      	mov	r4, r1
 8002764:	2c63      	cmp	r4, #99	@ 0x63
 8002766:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 800276a:	4631      	mov	r1, r6
 800276c:	dcf1      	bgt.n	8002752 <__exponent+0x1c>
 800276e:	3130      	adds	r1, #48	@ 0x30
 8002770:	1e94      	subs	r4, r2, #2
 8002772:	f803 1c01 	strb.w	r1, [r3, #-1]
 8002776:	1c41      	adds	r1, r0, #1
 8002778:	4623      	mov	r3, r4
 800277a:	42ab      	cmp	r3, r5
 800277c:	d30a      	bcc.n	8002794 <__exponent+0x5e>
 800277e:	f10d 0309 	add.w	r3, sp, #9
 8002782:	1a9b      	subs	r3, r3, r2
 8002784:	42ac      	cmp	r4, r5
 8002786:	bf88      	it	hi
 8002788:	2300      	movhi	r3, #0
 800278a:	3302      	adds	r3, #2
 800278c:	4403      	add	r3, r0
 800278e:	1a18      	subs	r0, r3, r0
 8002790:	b003      	add	sp, #12
 8002792:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002794:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002798:	f801 6f01 	strb.w	r6, [r1, #1]!
 800279c:	e7ed      	b.n	800277a <__exponent+0x44>
 800279e:	2330      	movs	r3, #48	@ 0x30
 80027a0:	3130      	adds	r1, #48	@ 0x30
 80027a2:	7083      	strb	r3, [r0, #2]
 80027a4:	70c1      	strb	r1, [r0, #3]
 80027a6:	1d03      	adds	r3, r0, #4
 80027a8:	e7f1      	b.n	800278e <__exponent+0x58>
	...

080027ac <_printf_float>:
 80027ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027b0:	b08d      	sub	sp, #52	@ 0x34
 80027b2:	460c      	mov	r4, r1
 80027b4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80027b8:	4616      	mov	r6, r2
 80027ba:	461f      	mov	r7, r3
 80027bc:	4605      	mov	r5, r0
 80027be:	f000 ff17 	bl	80035f0 <_localeconv_r>
 80027c2:	6803      	ldr	r3, [r0, #0]
 80027c4:	9304      	str	r3, [sp, #16]
 80027c6:	4618      	mov	r0, r3
 80027c8:	f7fd fd5a 	bl	8000280 <strlen>
 80027cc:	2300      	movs	r3, #0
 80027ce:	930a      	str	r3, [sp, #40]	@ 0x28
 80027d0:	f8d8 3000 	ldr.w	r3, [r8]
 80027d4:	9005      	str	r0, [sp, #20]
 80027d6:	3307      	adds	r3, #7
 80027d8:	f023 0307 	bic.w	r3, r3, #7
 80027dc:	f103 0208 	add.w	r2, r3, #8
 80027e0:	f894 a018 	ldrb.w	sl, [r4, #24]
 80027e4:	f8d4 b000 	ldr.w	fp, [r4]
 80027e8:	f8c8 2000 	str.w	r2, [r8]
 80027ec:	e9d3 8900 	ldrd	r8, r9, [r3]
 80027f0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80027f4:	9307      	str	r3, [sp, #28]
 80027f6:	f8cd 8018 	str.w	r8, [sp, #24]
 80027fa:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80027fe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002802:	4b9c      	ldr	r3, [pc, #624]	@ (8002a74 <_printf_float+0x2c8>)
 8002804:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8002808:	f7fe f998 	bl	8000b3c <__aeabi_dcmpun>
 800280c:	bb70      	cbnz	r0, 800286c <_printf_float+0xc0>
 800280e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002812:	4b98      	ldr	r3, [pc, #608]	@ (8002a74 <_printf_float+0x2c8>)
 8002814:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8002818:	f7fe f972 	bl	8000b00 <__aeabi_dcmple>
 800281c:	bb30      	cbnz	r0, 800286c <_printf_float+0xc0>
 800281e:	2200      	movs	r2, #0
 8002820:	2300      	movs	r3, #0
 8002822:	4640      	mov	r0, r8
 8002824:	4649      	mov	r1, r9
 8002826:	f7fe f961 	bl	8000aec <__aeabi_dcmplt>
 800282a:	b110      	cbz	r0, 8002832 <_printf_float+0x86>
 800282c:	232d      	movs	r3, #45	@ 0x2d
 800282e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002832:	4a91      	ldr	r2, [pc, #580]	@ (8002a78 <_printf_float+0x2cc>)
 8002834:	4b91      	ldr	r3, [pc, #580]	@ (8002a7c <_printf_float+0x2d0>)
 8002836:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800283a:	bf94      	ite	ls
 800283c:	4690      	movls	r8, r2
 800283e:	4698      	movhi	r8, r3
 8002840:	2303      	movs	r3, #3
 8002842:	6123      	str	r3, [r4, #16]
 8002844:	f02b 0304 	bic.w	r3, fp, #4
 8002848:	6023      	str	r3, [r4, #0]
 800284a:	f04f 0900 	mov.w	r9, #0
 800284e:	9700      	str	r7, [sp, #0]
 8002850:	4633      	mov	r3, r6
 8002852:	aa0b      	add	r2, sp, #44	@ 0x2c
 8002854:	4621      	mov	r1, r4
 8002856:	4628      	mov	r0, r5
 8002858:	f000 f9d2 	bl	8002c00 <_printf_common>
 800285c:	3001      	adds	r0, #1
 800285e:	f040 808d 	bne.w	800297c <_printf_float+0x1d0>
 8002862:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002866:	b00d      	add	sp, #52	@ 0x34
 8002868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800286c:	4642      	mov	r2, r8
 800286e:	464b      	mov	r3, r9
 8002870:	4640      	mov	r0, r8
 8002872:	4649      	mov	r1, r9
 8002874:	f7fe f962 	bl	8000b3c <__aeabi_dcmpun>
 8002878:	b140      	cbz	r0, 800288c <_printf_float+0xe0>
 800287a:	464b      	mov	r3, r9
 800287c:	2b00      	cmp	r3, #0
 800287e:	bfbc      	itt	lt
 8002880:	232d      	movlt	r3, #45	@ 0x2d
 8002882:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8002886:	4a7e      	ldr	r2, [pc, #504]	@ (8002a80 <_printf_float+0x2d4>)
 8002888:	4b7e      	ldr	r3, [pc, #504]	@ (8002a84 <_printf_float+0x2d8>)
 800288a:	e7d4      	b.n	8002836 <_printf_float+0x8a>
 800288c:	6863      	ldr	r3, [r4, #4]
 800288e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8002892:	9206      	str	r2, [sp, #24]
 8002894:	1c5a      	adds	r2, r3, #1
 8002896:	d13b      	bne.n	8002910 <_printf_float+0x164>
 8002898:	2306      	movs	r3, #6
 800289a:	6063      	str	r3, [r4, #4]
 800289c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80028a0:	2300      	movs	r3, #0
 80028a2:	6022      	str	r2, [r4, #0]
 80028a4:	9303      	str	r3, [sp, #12]
 80028a6:	ab0a      	add	r3, sp, #40	@ 0x28
 80028a8:	e9cd a301 	strd	sl, r3, [sp, #4]
 80028ac:	ab09      	add	r3, sp, #36	@ 0x24
 80028ae:	9300      	str	r3, [sp, #0]
 80028b0:	6861      	ldr	r1, [r4, #4]
 80028b2:	ec49 8b10 	vmov	d0, r8, r9
 80028b6:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80028ba:	4628      	mov	r0, r5
 80028bc:	f7ff fed6 	bl	800266c <__cvt>
 80028c0:	9b06      	ldr	r3, [sp, #24]
 80028c2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80028c4:	2b47      	cmp	r3, #71	@ 0x47
 80028c6:	4680      	mov	r8, r0
 80028c8:	d129      	bne.n	800291e <_printf_float+0x172>
 80028ca:	1cc8      	adds	r0, r1, #3
 80028cc:	db02      	blt.n	80028d4 <_printf_float+0x128>
 80028ce:	6863      	ldr	r3, [r4, #4]
 80028d0:	4299      	cmp	r1, r3
 80028d2:	dd41      	ble.n	8002958 <_printf_float+0x1ac>
 80028d4:	f1aa 0a02 	sub.w	sl, sl, #2
 80028d8:	fa5f fa8a 	uxtb.w	sl, sl
 80028dc:	3901      	subs	r1, #1
 80028de:	4652      	mov	r2, sl
 80028e0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80028e4:	9109      	str	r1, [sp, #36]	@ 0x24
 80028e6:	f7ff ff26 	bl	8002736 <__exponent>
 80028ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80028ec:	1813      	adds	r3, r2, r0
 80028ee:	2a01      	cmp	r2, #1
 80028f0:	4681      	mov	r9, r0
 80028f2:	6123      	str	r3, [r4, #16]
 80028f4:	dc02      	bgt.n	80028fc <_printf_float+0x150>
 80028f6:	6822      	ldr	r2, [r4, #0]
 80028f8:	07d2      	lsls	r2, r2, #31
 80028fa:	d501      	bpl.n	8002900 <_printf_float+0x154>
 80028fc:	3301      	adds	r3, #1
 80028fe:	6123      	str	r3, [r4, #16]
 8002900:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8002904:	2b00      	cmp	r3, #0
 8002906:	d0a2      	beq.n	800284e <_printf_float+0xa2>
 8002908:	232d      	movs	r3, #45	@ 0x2d
 800290a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800290e:	e79e      	b.n	800284e <_printf_float+0xa2>
 8002910:	9a06      	ldr	r2, [sp, #24]
 8002912:	2a47      	cmp	r2, #71	@ 0x47
 8002914:	d1c2      	bne.n	800289c <_printf_float+0xf0>
 8002916:	2b00      	cmp	r3, #0
 8002918:	d1c0      	bne.n	800289c <_printf_float+0xf0>
 800291a:	2301      	movs	r3, #1
 800291c:	e7bd      	b.n	800289a <_printf_float+0xee>
 800291e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002922:	d9db      	bls.n	80028dc <_printf_float+0x130>
 8002924:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002928:	d118      	bne.n	800295c <_printf_float+0x1b0>
 800292a:	2900      	cmp	r1, #0
 800292c:	6863      	ldr	r3, [r4, #4]
 800292e:	dd0b      	ble.n	8002948 <_printf_float+0x19c>
 8002930:	6121      	str	r1, [r4, #16]
 8002932:	b913      	cbnz	r3, 800293a <_printf_float+0x18e>
 8002934:	6822      	ldr	r2, [r4, #0]
 8002936:	07d0      	lsls	r0, r2, #31
 8002938:	d502      	bpl.n	8002940 <_printf_float+0x194>
 800293a:	3301      	adds	r3, #1
 800293c:	440b      	add	r3, r1
 800293e:	6123      	str	r3, [r4, #16]
 8002940:	65a1      	str	r1, [r4, #88]	@ 0x58
 8002942:	f04f 0900 	mov.w	r9, #0
 8002946:	e7db      	b.n	8002900 <_printf_float+0x154>
 8002948:	b913      	cbnz	r3, 8002950 <_printf_float+0x1a4>
 800294a:	6822      	ldr	r2, [r4, #0]
 800294c:	07d2      	lsls	r2, r2, #31
 800294e:	d501      	bpl.n	8002954 <_printf_float+0x1a8>
 8002950:	3302      	adds	r3, #2
 8002952:	e7f4      	b.n	800293e <_printf_float+0x192>
 8002954:	2301      	movs	r3, #1
 8002956:	e7f2      	b.n	800293e <_printf_float+0x192>
 8002958:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800295c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800295e:	4299      	cmp	r1, r3
 8002960:	db05      	blt.n	800296e <_printf_float+0x1c2>
 8002962:	6823      	ldr	r3, [r4, #0]
 8002964:	6121      	str	r1, [r4, #16]
 8002966:	07d8      	lsls	r0, r3, #31
 8002968:	d5ea      	bpl.n	8002940 <_printf_float+0x194>
 800296a:	1c4b      	adds	r3, r1, #1
 800296c:	e7e7      	b.n	800293e <_printf_float+0x192>
 800296e:	2900      	cmp	r1, #0
 8002970:	bfd4      	ite	le
 8002972:	f1c1 0202 	rsble	r2, r1, #2
 8002976:	2201      	movgt	r2, #1
 8002978:	4413      	add	r3, r2
 800297a:	e7e0      	b.n	800293e <_printf_float+0x192>
 800297c:	6823      	ldr	r3, [r4, #0]
 800297e:	055a      	lsls	r2, r3, #21
 8002980:	d407      	bmi.n	8002992 <_printf_float+0x1e6>
 8002982:	6923      	ldr	r3, [r4, #16]
 8002984:	4642      	mov	r2, r8
 8002986:	4631      	mov	r1, r6
 8002988:	4628      	mov	r0, r5
 800298a:	47b8      	blx	r7
 800298c:	3001      	adds	r0, #1
 800298e:	d12b      	bne.n	80029e8 <_printf_float+0x23c>
 8002990:	e767      	b.n	8002862 <_printf_float+0xb6>
 8002992:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002996:	f240 80dd 	bls.w	8002b54 <_printf_float+0x3a8>
 800299a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800299e:	2200      	movs	r2, #0
 80029a0:	2300      	movs	r3, #0
 80029a2:	f7fe f899 	bl	8000ad8 <__aeabi_dcmpeq>
 80029a6:	2800      	cmp	r0, #0
 80029a8:	d033      	beq.n	8002a12 <_printf_float+0x266>
 80029aa:	4a37      	ldr	r2, [pc, #220]	@ (8002a88 <_printf_float+0x2dc>)
 80029ac:	2301      	movs	r3, #1
 80029ae:	4631      	mov	r1, r6
 80029b0:	4628      	mov	r0, r5
 80029b2:	47b8      	blx	r7
 80029b4:	3001      	adds	r0, #1
 80029b6:	f43f af54 	beq.w	8002862 <_printf_float+0xb6>
 80029ba:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80029be:	4543      	cmp	r3, r8
 80029c0:	db02      	blt.n	80029c8 <_printf_float+0x21c>
 80029c2:	6823      	ldr	r3, [r4, #0]
 80029c4:	07d8      	lsls	r0, r3, #31
 80029c6:	d50f      	bpl.n	80029e8 <_printf_float+0x23c>
 80029c8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80029cc:	4631      	mov	r1, r6
 80029ce:	4628      	mov	r0, r5
 80029d0:	47b8      	blx	r7
 80029d2:	3001      	adds	r0, #1
 80029d4:	f43f af45 	beq.w	8002862 <_printf_float+0xb6>
 80029d8:	f04f 0900 	mov.w	r9, #0
 80029dc:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 80029e0:	f104 0a1a 	add.w	sl, r4, #26
 80029e4:	45c8      	cmp	r8, r9
 80029e6:	dc09      	bgt.n	80029fc <_printf_float+0x250>
 80029e8:	6823      	ldr	r3, [r4, #0]
 80029ea:	079b      	lsls	r3, r3, #30
 80029ec:	f100 8103 	bmi.w	8002bf6 <_printf_float+0x44a>
 80029f0:	68e0      	ldr	r0, [r4, #12]
 80029f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80029f4:	4298      	cmp	r0, r3
 80029f6:	bfb8      	it	lt
 80029f8:	4618      	movlt	r0, r3
 80029fa:	e734      	b.n	8002866 <_printf_float+0xba>
 80029fc:	2301      	movs	r3, #1
 80029fe:	4652      	mov	r2, sl
 8002a00:	4631      	mov	r1, r6
 8002a02:	4628      	mov	r0, r5
 8002a04:	47b8      	blx	r7
 8002a06:	3001      	adds	r0, #1
 8002a08:	f43f af2b 	beq.w	8002862 <_printf_float+0xb6>
 8002a0c:	f109 0901 	add.w	r9, r9, #1
 8002a10:	e7e8      	b.n	80029e4 <_printf_float+0x238>
 8002a12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	dc39      	bgt.n	8002a8c <_printf_float+0x2e0>
 8002a18:	4a1b      	ldr	r2, [pc, #108]	@ (8002a88 <_printf_float+0x2dc>)
 8002a1a:	2301      	movs	r3, #1
 8002a1c:	4631      	mov	r1, r6
 8002a1e:	4628      	mov	r0, r5
 8002a20:	47b8      	blx	r7
 8002a22:	3001      	adds	r0, #1
 8002a24:	f43f af1d 	beq.w	8002862 <_printf_float+0xb6>
 8002a28:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8002a2c:	ea59 0303 	orrs.w	r3, r9, r3
 8002a30:	d102      	bne.n	8002a38 <_printf_float+0x28c>
 8002a32:	6823      	ldr	r3, [r4, #0]
 8002a34:	07d9      	lsls	r1, r3, #31
 8002a36:	d5d7      	bpl.n	80029e8 <_printf_float+0x23c>
 8002a38:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a3c:	4631      	mov	r1, r6
 8002a3e:	4628      	mov	r0, r5
 8002a40:	47b8      	blx	r7
 8002a42:	3001      	adds	r0, #1
 8002a44:	f43f af0d 	beq.w	8002862 <_printf_float+0xb6>
 8002a48:	f04f 0a00 	mov.w	sl, #0
 8002a4c:	f104 0b1a 	add.w	fp, r4, #26
 8002a50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002a52:	425b      	negs	r3, r3
 8002a54:	4553      	cmp	r3, sl
 8002a56:	dc01      	bgt.n	8002a5c <_printf_float+0x2b0>
 8002a58:	464b      	mov	r3, r9
 8002a5a:	e793      	b.n	8002984 <_printf_float+0x1d8>
 8002a5c:	2301      	movs	r3, #1
 8002a5e:	465a      	mov	r2, fp
 8002a60:	4631      	mov	r1, r6
 8002a62:	4628      	mov	r0, r5
 8002a64:	47b8      	blx	r7
 8002a66:	3001      	adds	r0, #1
 8002a68:	f43f aefb 	beq.w	8002862 <_printf_float+0xb6>
 8002a6c:	f10a 0a01 	add.w	sl, sl, #1
 8002a70:	e7ee      	b.n	8002a50 <_printf_float+0x2a4>
 8002a72:	bf00      	nop
 8002a74:	7fefffff 	.word	0x7fefffff
 8002a78:	08006e40 	.word	0x08006e40
 8002a7c:	08006e44 	.word	0x08006e44
 8002a80:	08006e48 	.word	0x08006e48
 8002a84:	08006e4c 	.word	0x08006e4c
 8002a88:	08006e50 	.word	0x08006e50
 8002a8c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002a8e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002a92:	4553      	cmp	r3, sl
 8002a94:	bfa8      	it	ge
 8002a96:	4653      	movge	r3, sl
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	4699      	mov	r9, r3
 8002a9c:	dc36      	bgt.n	8002b0c <_printf_float+0x360>
 8002a9e:	f04f 0b00 	mov.w	fp, #0
 8002aa2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002aa6:	f104 021a 	add.w	r2, r4, #26
 8002aaa:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002aac:	9306      	str	r3, [sp, #24]
 8002aae:	eba3 0309 	sub.w	r3, r3, r9
 8002ab2:	455b      	cmp	r3, fp
 8002ab4:	dc31      	bgt.n	8002b1a <_printf_float+0x36e>
 8002ab6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ab8:	459a      	cmp	sl, r3
 8002aba:	dc3a      	bgt.n	8002b32 <_printf_float+0x386>
 8002abc:	6823      	ldr	r3, [r4, #0]
 8002abe:	07da      	lsls	r2, r3, #31
 8002ac0:	d437      	bmi.n	8002b32 <_printf_float+0x386>
 8002ac2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ac4:	ebaa 0903 	sub.w	r9, sl, r3
 8002ac8:	9b06      	ldr	r3, [sp, #24]
 8002aca:	ebaa 0303 	sub.w	r3, sl, r3
 8002ace:	4599      	cmp	r9, r3
 8002ad0:	bfa8      	it	ge
 8002ad2:	4699      	movge	r9, r3
 8002ad4:	f1b9 0f00 	cmp.w	r9, #0
 8002ad8:	dc33      	bgt.n	8002b42 <_printf_float+0x396>
 8002ada:	f04f 0800 	mov.w	r8, #0
 8002ade:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002ae2:	f104 0b1a 	add.w	fp, r4, #26
 8002ae6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ae8:	ebaa 0303 	sub.w	r3, sl, r3
 8002aec:	eba3 0309 	sub.w	r3, r3, r9
 8002af0:	4543      	cmp	r3, r8
 8002af2:	f77f af79 	ble.w	80029e8 <_printf_float+0x23c>
 8002af6:	2301      	movs	r3, #1
 8002af8:	465a      	mov	r2, fp
 8002afa:	4631      	mov	r1, r6
 8002afc:	4628      	mov	r0, r5
 8002afe:	47b8      	blx	r7
 8002b00:	3001      	adds	r0, #1
 8002b02:	f43f aeae 	beq.w	8002862 <_printf_float+0xb6>
 8002b06:	f108 0801 	add.w	r8, r8, #1
 8002b0a:	e7ec      	b.n	8002ae6 <_printf_float+0x33a>
 8002b0c:	4642      	mov	r2, r8
 8002b0e:	4631      	mov	r1, r6
 8002b10:	4628      	mov	r0, r5
 8002b12:	47b8      	blx	r7
 8002b14:	3001      	adds	r0, #1
 8002b16:	d1c2      	bne.n	8002a9e <_printf_float+0x2f2>
 8002b18:	e6a3      	b.n	8002862 <_printf_float+0xb6>
 8002b1a:	2301      	movs	r3, #1
 8002b1c:	4631      	mov	r1, r6
 8002b1e:	4628      	mov	r0, r5
 8002b20:	9206      	str	r2, [sp, #24]
 8002b22:	47b8      	blx	r7
 8002b24:	3001      	adds	r0, #1
 8002b26:	f43f ae9c 	beq.w	8002862 <_printf_float+0xb6>
 8002b2a:	9a06      	ldr	r2, [sp, #24]
 8002b2c:	f10b 0b01 	add.w	fp, fp, #1
 8002b30:	e7bb      	b.n	8002aaa <_printf_float+0x2fe>
 8002b32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002b36:	4631      	mov	r1, r6
 8002b38:	4628      	mov	r0, r5
 8002b3a:	47b8      	blx	r7
 8002b3c:	3001      	adds	r0, #1
 8002b3e:	d1c0      	bne.n	8002ac2 <_printf_float+0x316>
 8002b40:	e68f      	b.n	8002862 <_printf_float+0xb6>
 8002b42:	9a06      	ldr	r2, [sp, #24]
 8002b44:	464b      	mov	r3, r9
 8002b46:	4442      	add	r2, r8
 8002b48:	4631      	mov	r1, r6
 8002b4a:	4628      	mov	r0, r5
 8002b4c:	47b8      	blx	r7
 8002b4e:	3001      	adds	r0, #1
 8002b50:	d1c3      	bne.n	8002ada <_printf_float+0x32e>
 8002b52:	e686      	b.n	8002862 <_printf_float+0xb6>
 8002b54:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002b58:	f1ba 0f01 	cmp.w	sl, #1
 8002b5c:	dc01      	bgt.n	8002b62 <_printf_float+0x3b6>
 8002b5e:	07db      	lsls	r3, r3, #31
 8002b60:	d536      	bpl.n	8002bd0 <_printf_float+0x424>
 8002b62:	2301      	movs	r3, #1
 8002b64:	4642      	mov	r2, r8
 8002b66:	4631      	mov	r1, r6
 8002b68:	4628      	mov	r0, r5
 8002b6a:	47b8      	blx	r7
 8002b6c:	3001      	adds	r0, #1
 8002b6e:	f43f ae78 	beq.w	8002862 <_printf_float+0xb6>
 8002b72:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002b76:	4631      	mov	r1, r6
 8002b78:	4628      	mov	r0, r5
 8002b7a:	47b8      	blx	r7
 8002b7c:	3001      	adds	r0, #1
 8002b7e:	f43f ae70 	beq.w	8002862 <_printf_float+0xb6>
 8002b82:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002b86:	2200      	movs	r2, #0
 8002b88:	2300      	movs	r3, #0
 8002b8a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002b8e:	f7fd ffa3 	bl	8000ad8 <__aeabi_dcmpeq>
 8002b92:	b9c0      	cbnz	r0, 8002bc6 <_printf_float+0x41a>
 8002b94:	4653      	mov	r3, sl
 8002b96:	f108 0201 	add.w	r2, r8, #1
 8002b9a:	4631      	mov	r1, r6
 8002b9c:	4628      	mov	r0, r5
 8002b9e:	47b8      	blx	r7
 8002ba0:	3001      	adds	r0, #1
 8002ba2:	d10c      	bne.n	8002bbe <_printf_float+0x412>
 8002ba4:	e65d      	b.n	8002862 <_printf_float+0xb6>
 8002ba6:	2301      	movs	r3, #1
 8002ba8:	465a      	mov	r2, fp
 8002baa:	4631      	mov	r1, r6
 8002bac:	4628      	mov	r0, r5
 8002bae:	47b8      	blx	r7
 8002bb0:	3001      	adds	r0, #1
 8002bb2:	f43f ae56 	beq.w	8002862 <_printf_float+0xb6>
 8002bb6:	f108 0801 	add.w	r8, r8, #1
 8002bba:	45d0      	cmp	r8, sl
 8002bbc:	dbf3      	blt.n	8002ba6 <_printf_float+0x3fa>
 8002bbe:	464b      	mov	r3, r9
 8002bc0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8002bc4:	e6df      	b.n	8002986 <_printf_float+0x1da>
 8002bc6:	f04f 0800 	mov.w	r8, #0
 8002bca:	f104 0b1a 	add.w	fp, r4, #26
 8002bce:	e7f4      	b.n	8002bba <_printf_float+0x40e>
 8002bd0:	2301      	movs	r3, #1
 8002bd2:	4642      	mov	r2, r8
 8002bd4:	e7e1      	b.n	8002b9a <_printf_float+0x3ee>
 8002bd6:	2301      	movs	r3, #1
 8002bd8:	464a      	mov	r2, r9
 8002bda:	4631      	mov	r1, r6
 8002bdc:	4628      	mov	r0, r5
 8002bde:	47b8      	blx	r7
 8002be0:	3001      	adds	r0, #1
 8002be2:	f43f ae3e 	beq.w	8002862 <_printf_float+0xb6>
 8002be6:	f108 0801 	add.w	r8, r8, #1
 8002bea:	68e3      	ldr	r3, [r4, #12]
 8002bec:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002bee:	1a5b      	subs	r3, r3, r1
 8002bf0:	4543      	cmp	r3, r8
 8002bf2:	dcf0      	bgt.n	8002bd6 <_printf_float+0x42a>
 8002bf4:	e6fc      	b.n	80029f0 <_printf_float+0x244>
 8002bf6:	f04f 0800 	mov.w	r8, #0
 8002bfa:	f104 0919 	add.w	r9, r4, #25
 8002bfe:	e7f4      	b.n	8002bea <_printf_float+0x43e>

08002c00 <_printf_common>:
 8002c00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002c04:	4616      	mov	r6, r2
 8002c06:	4698      	mov	r8, r3
 8002c08:	688a      	ldr	r2, [r1, #8]
 8002c0a:	690b      	ldr	r3, [r1, #16]
 8002c0c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002c10:	4293      	cmp	r3, r2
 8002c12:	bfb8      	it	lt
 8002c14:	4613      	movlt	r3, r2
 8002c16:	6033      	str	r3, [r6, #0]
 8002c18:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002c1c:	4607      	mov	r7, r0
 8002c1e:	460c      	mov	r4, r1
 8002c20:	b10a      	cbz	r2, 8002c26 <_printf_common+0x26>
 8002c22:	3301      	adds	r3, #1
 8002c24:	6033      	str	r3, [r6, #0]
 8002c26:	6823      	ldr	r3, [r4, #0]
 8002c28:	0699      	lsls	r1, r3, #26
 8002c2a:	bf42      	ittt	mi
 8002c2c:	6833      	ldrmi	r3, [r6, #0]
 8002c2e:	3302      	addmi	r3, #2
 8002c30:	6033      	strmi	r3, [r6, #0]
 8002c32:	6825      	ldr	r5, [r4, #0]
 8002c34:	f015 0506 	ands.w	r5, r5, #6
 8002c38:	d106      	bne.n	8002c48 <_printf_common+0x48>
 8002c3a:	f104 0a19 	add.w	sl, r4, #25
 8002c3e:	68e3      	ldr	r3, [r4, #12]
 8002c40:	6832      	ldr	r2, [r6, #0]
 8002c42:	1a9b      	subs	r3, r3, r2
 8002c44:	42ab      	cmp	r3, r5
 8002c46:	dc26      	bgt.n	8002c96 <_printf_common+0x96>
 8002c48:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002c4c:	6822      	ldr	r2, [r4, #0]
 8002c4e:	3b00      	subs	r3, #0
 8002c50:	bf18      	it	ne
 8002c52:	2301      	movne	r3, #1
 8002c54:	0692      	lsls	r2, r2, #26
 8002c56:	d42b      	bmi.n	8002cb0 <_printf_common+0xb0>
 8002c58:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002c5c:	4641      	mov	r1, r8
 8002c5e:	4638      	mov	r0, r7
 8002c60:	47c8      	blx	r9
 8002c62:	3001      	adds	r0, #1
 8002c64:	d01e      	beq.n	8002ca4 <_printf_common+0xa4>
 8002c66:	6823      	ldr	r3, [r4, #0]
 8002c68:	6922      	ldr	r2, [r4, #16]
 8002c6a:	f003 0306 	and.w	r3, r3, #6
 8002c6e:	2b04      	cmp	r3, #4
 8002c70:	bf02      	ittt	eq
 8002c72:	68e5      	ldreq	r5, [r4, #12]
 8002c74:	6833      	ldreq	r3, [r6, #0]
 8002c76:	1aed      	subeq	r5, r5, r3
 8002c78:	68a3      	ldr	r3, [r4, #8]
 8002c7a:	bf0c      	ite	eq
 8002c7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002c80:	2500      	movne	r5, #0
 8002c82:	4293      	cmp	r3, r2
 8002c84:	bfc4      	itt	gt
 8002c86:	1a9b      	subgt	r3, r3, r2
 8002c88:	18ed      	addgt	r5, r5, r3
 8002c8a:	2600      	movs	r6, #0
 8002c8c:	341a      	adds	r4, #26
 8002c8e:	42b5      	cmp	r5, r6
 8002c90:	d11a      	bne.n	8002cc8 <_printf_common+0xc8>
 8002c92:	2000      	movs	r0, #0
 8002c94:	e008      	b.n	8002ca8 <_printf_common+0xa8>
 8002c96:	2301      	movs	r3, #1
 8002c98:	4652      	mov	r2, sl
 8002c9a:	4641      	mov	r1, r8
 8002c9c:	4638      	mov	r0, r7
 8002c9e:	47c8      	blx	r9
 8002ca0:	3001      	adds	r0, #1
 8002ca2:	d103      	bne.n	8002cac <_printf_common+0xac>
 8002ca4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002ca8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002cac:	3501      	adds	r5, #1
 8002cae:	e7c6      	b.n	8002c3e <_printf_common+0x3e>
 8002cb0:	18e1      	adds	r1, r4, r3
 8002cb2:	1c5a      	adds	r2, r3, #1
 8002cb4:	2030      	movs	r0, #48	@ 0x30
 8002cb6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002cba:	4422      	add	r2, r4
 8002cbc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002cc0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002cc4:	3302      	adds	r3, #2
 8002cc6:	e7c7      	b.n	8002c58 <_printf_common+0x58>
 8002cc8:	2301      	movs	r3, #1
 8002cca:	4622      	mov	r2, r4
 8002ccc:	4641      	mov	r1, r8
 8002cce:	4638      	mov	r0, r7
 8002cd0:	47c8      	blx	r9
 8002cd2:	3001      	adds	r0, #1
 8002cd4:	d0e6      	beq.n	8002ca4 <_printf_common+0xa4>
 8002cd6:	3601      	adds	r6, #1
 8002cd8:	e7d9      	b.n	8002c8e <_printf_common+0x8e>
	...

08002cdc <_printf_i>:
 8002cdc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002ce0:	7e0f      	ldrb	r7, [r1, #24]
 8002ce2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002ce4:	2f78      	cmp	r7, #120	@ 0x78
 8002ce6:	4691      	mov	r9, r2
 8002ce8:	4680      	mov	r8, r0
 8002cea:	460c      	mov	r4, r1
 8002cec:	469a      	mov	sl, r3
 8002cee:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002cf2:	d807      	bhi.n	8002d04 <_printf_i+0x28>
 8002cf4:	2f62      	cmp	r7, #98	@ 0x62
 8002cf6:	d80a      	bhi.n	8002d0e <_printf_i+0x32>
 8002cf8:	2f00      	cmp	r7, #0
 8002cfa:	f000 80d2 	beq.w	8002ea2 <_printf_i+0x1c6>
 8002cfe:	2f58      	cmp	r7, #88	@ 0x58
 8002d00:	f000 80b9 	beq.w	8002e76 <_printf_i+0x19a>
 8002d04:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002d08:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002d0c:	e03a      	b.n	8002d84 <_printf_i+0xa8>
 8002d0e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002d12:	2b15      	cmp	r3, #21
 8002d14:	d8f6      	bhi.n	8002d04 <_printf_i+0x28>
 8002d16:	a101      	add	r1, pc, #4	@ (adr r1, 8002d1c <_printf_i+0x40>)
 8002d18:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002d1c:	08002d75 	.word	0x08002d75
 8002d20:	08002d89 	.word	0x08002d89
 8002d24:	08002d05 	.word	0x08002d05
 8002d28:	08002d05 	.word	0x08002d05
 8002d2c:	08002d05 	.word	0x08002d05
 8002d30:	08002d05 	.word	0x08002d05
 8002d34:	08002d89 	.word	0x08002d89
 8002d38:	08002d05 	.word	0x08002d05
 8002d3c:	08002d05 	.word	0x08002d05
 8002d40:	08002d05 	.word	0x08002d05
 8002d44:	08002d05 	.word	0x08002d05
 8002d48:	08002e89 	.word	0x08002e89
 8002d4c:	08002db3 	.word	0x08002db3
 8002d50:	08002e43 	.word	0x08002e43
 8002d54:	08002d05 	.word	0x08002d05
 8002d58:	08002d05 	.word	0x08002d05
 8002d5c:	08002eab 	.word	0x08002eab
 8002d60:	08002d05 	.word	0x08002d05
 8002d64:	08002db3 	.word	0x08002db3
 8002d68:	08002d05 	.word	0x08002d05
 8002d6c:	08002d05 	.word	0x08002d05
 8002d70:	08002e4b 	.word	0x08002e4b
 8002d74:	6833      	ldr	r3, [r6, #0]
 8002d76:	1d1a      	adds	r2, r3, #4
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	6032      	str	r2, [r6, #0]
 8002d7c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002d80:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002d84:	2301      	movs	r3, #1
 8002d86:	e09d      	b.n	8002ec4 <_printf_i+0x1e8>
 8002d88:	6833      	ldr	r3, [r6, #0]
 8002d8a:	6820      	ldr	r0, [r4, #0]
 8002d8c:	1d19      	adds	r1, r3, #4
 8002d8e:	6031      	str	r1, [r6, #0]
 8002d90:	0606      	lsls	r6, r0, #24
 8002d92:	d501      	bpl.n	8002d98 <_printf_i+0xbc>
 8002d94:	681d      	ldr	r5, [r3, #0]
 8002d96:	e003      	b.n	8002da0 <_printf_i+0xc4>
 8002d98:	0645      	lsls	r5, r0, #25
 8002d9a:	d5fb      	bpl.n	8002d94 <_printf_i+0xb8>
 8002d9c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002da0:	2d00      	cmp	r5, #0
 8002da2:	da03      	bge.n	8002dac <_printf_i+0xd0>
 8002da4:	232d      	movs	r3, #45	@ 0x2d
 8002da6:	426d      	negs	r5, r5
 8002da8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002dac:	4859      	ldr	r0, [pc, #356]	@ (8002f14 <_printf_i+0x238>)
 8002dae:	230a      	movs	r3, #10
 8002db0:	e011      	b.n	8002dd6 <_printf_i+0xfa>
 8002db2:	6821      	ldr	r1, [r4, #0]
 8002db4:	6833      	ldr	r3, [r6, #0]
 8002db6:	0608      	lsls	r0, r1, #24
 8002db8:	f853 5b04 	ldr.w	r5, [r3], #4
 8002dbc:	d402      	bmi.n	8002dc4 <_printf_i+0xe8>
 8002dbe:	0649      	lsls	r1, r1, #25
 8002dc0:	bf48      	it	mi
 8002dc2:	b2ad      	uxthmi	r5, r5
 8002dc4:	2f6f      	cmp	r7, #111	@ 0x6f
 8002dc6:	4853      	ldr	r0, [pc, #332]	@ (8002f14 <_printf_i+0x238>)
 8002dc8:	6033      	str	r3, [r6, #0]
 8002dca:	bf14      	ite	ne
 8002dcc:	230a      	movne	r3, #10
 8002dce:	2308      	moveq	r3, #8
 8002dd0:	2100      	movs	r1, #0
 8002dd2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002dd6:	6866      	ldr	r6, [r4, #4]
 8002dd8:	60a6      	str	r6, [r4, #8]
 8002dda:	2e00      	cmp	r6, #0
 8002ddc:	bfa2      	ittt	ge
 8002dde:	6821      	ldrge	r1, [r4, #0]
 8002de0:	f021 0104 	bicge.w	r1, r1, #4
 8002de4:	6021      	strge	r1, [r4, #0]
 8002de6:	b90d      	cbnz	r5, 8002dec <_printf_i+0x110>
 8002de8:	2e00      	cmp	r6, #0
 8002dea:	d04b      	beq.n	8002e84 <_printf_i+0x1a8>
 8002dec:	4616      	mov	r6, r2
 8002dee:	fbb5 f1f3 	udiv	r1, r5, r3
 8002df2:	fb03 5711 	mls	r7, r3, r1, r5
 8002df6:	5dc7      	ldrb	r7, [r0, r7]
 8002df8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002dfc:	462f      	mov	r7, r5
 8002dfe:	42bb      	cmp	r3, r7
 8002e00:	460d      	mov	r5, r1
 8002e02:	d9f4      	bls.n	8002dee <_printf_i+0x112>
 8002e04:	2b08      	cmp	r3, #8
 8002e06:	d10b      	bne.n	8002e20 <_printf_i+0x144>
 8002e08:	6823      	ldr	r3, [r4, #0]
 8002e0a:	07df      	lsls	r7, r3, #31
 8002e0c:	d508      	bpl.n	8002e20 <_printf_i+0x144>
 8002e0e:	6923      	ldr	r3, [r4, #16]
 8002e10:	6861      	ldr	r1, [r4, #4]
 8002e12:	4299      	cmp	r1, r3
 8002e14:	bfde      	ittt	le
 8002e16:	2330      	movle	r3, #48	@ 0x30
 8002e18:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002e1c:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8002e20:	1b92      	subs	r2, r2, r6
 8002e22:	6122      	str	r2, [r4, #16]
 8002e24:	f8cd a000 	str.w	sl, [sp]
 8002e28:	464b      	mov	r3, r9
 8002e2a:	aa03      	add	r2, sp, #12
 8002e2c:	4621      	mov	r1, r4
 8002e2e:	4640      	mov	r0, r8
 8002e30:	f7ff fee6 	bl	8002c00 <_printf_common>
 8002e34:	3001      	adds	r0, #1
 8002e36:	d14a      	bne.n	8002ece <_printf_i+0x1f2>
 8002e38:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002e3c:	b004      	add	sp, #16
 8002e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e42:	6823      	ldr	r3, [r4, #0]
 8002e44:	f043 0320 	orr.w	r3, r3, #32
 8002e48:	6023      	str	r3, [r4, #0]
 8002e4a:	4833      	ldr	r0, [pc, #204]	@ (8002f18 <_printf_i+0x23c>)
 8002e4c:	2778      	movs	r7, #120	@ 0x78
 8002e4e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002e52:	6823      	ldr	r3, [r4, #0]
 8002e54:	6831      	ldr	r1, [r6, #0]
 8002e56:	061f      	lsls	r7, r3, #24
 8002e58:	f851 5b04 	ldr.w	r5, [r1], #4
 8002e5c:	d402      	bmi.n	8002e64 <_printf_i+0x188>
 8002e5e:	065f      	lsls	r7, r3, #25
 8002e60:	bf48      	it	mi
 8002e62:	b2ad      	uxthmi	r5, r5
 8002e64:	6031      	str	r1, [r6, #0]
 8002e66:	07d9      	lsls	r1, r3, #31
 8002e68:	bf44      	itt	mi
 8002e6a:	f043 0320 	orrmi.w	r3, r3, #32
 8002e6e:	6023      	strmi	r3, [r4, #0]
 8002e70:	b11d      	cbz	r5, 8002e7a <_printf_i+0x19e>
 8002e72:	2310      	movs	r3, #16
 8002e74:	e7ac      	b.n	8002dd0 <_printf_i+0xf4>
 8002e76:	4827      	ldr	r0, [pc, #156]	@ (8002f14 <_printf_i+0x238>)
 8002e78:	e7e9      	b.n	8002e4e <_printf_i+0x172>
 8002e7a:	6823      	ldr	r3, [r4, #0]
 8002e7c:	f023 0320 	bic.w	r3, r3, #32
 8002e80:	6023      	str	r3, [r4, #0]
 8002e82:	e7f6      	b.n	8002e72 <_printf_i+0x196>
 8002e84:	4616      	mov	r6, r2
 8002e86:	e7bd      	b.n	8002e04 <_printf_i+0x128>
 8002e88:	6833      	ldr	r3, [r6, #0]
 8002e8a:	6825      	ldr	r5, [r4, #0]
 8002e8c:	6961      	ldr	r1, [r4, #20]
 8002e8e:	1d18      	adds	r0, r3, #4
 8002e90:	6030      	str	r0, [r6, #0]
 8002e92:	062e      	lsls	r6, r5, #24
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	d501      	bpl.n	8002e9c <_printf_i+0x1c0>
 8002e98:	6019      	str	r1, [r3, #0]
 8002e9a:	e002      	b.n	8002ea2 <_printf_i+0x1c6>
 8002e9c:	0668      	lsls	r0, r5, #25
 8002e9e:	d5fb      	bpl.n	8002e98 <_printf_i+0x1bc>
 8002ea0:	8019      	strh	r1, [r3, #0]
 8002ea2:	2300      	movs	r3, #0
 8002ea4:	6123      	str	r3, [r4, #16]
 8002ea6:	4616      	mov	r6, r2
 8002ea8:	e7bc      	b.n	8002e24 <_printf_i+0x148>
 8002eaa:	6833      	ldr	r3, [r6, #0]
 8002eac:	1d1a      	adds	r2, r3, #4
 8002eae:	6032      	str	r2, [r6, #0]
 8002eb0:	681e      	ldr	r6, [r3, #0]
 8002eb2:	6862      	ldr	r2, [r4, #4]
 8002eb4:	2100      	movs	r1, #0
 8002eb6:	4630      	mov	r0, r6
 8002eb8:	f7fd f992 	bl	80001e0 <memchr>
 8002ebc:	b108      	cbz	r0, 8002ec2 <_printf_i+0x1e6>
 8002ebe:	1b80      	subs	r0, r0, r6
 8002ec0:	6060      	str	r0, [r4, #4]
 8002ec2:	6863      	ldr	r3, [r4, #4]
 8002ec4:	6123      	str	r3, [r4, #16]
 8002ec6:	2300      	movs	r3, #0
 8002ec8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002ecc:	e7aa      	b.n	8002e24 <_printf_i+0x148>
 8002ece:	6923      	ldr	r3, [r4, #16]
 8002ed0:	4632      	mov	r2, r6
 8002ed2:	4649      	mov	r1, r9
 8002ed4:	4640      	mov	r0, r8
 8002ed6:	47d0      	blx	sl
 8002ed8:	3001      	adds	r0, #1
 8002eda:	d0ad      	beq.n	8002e38 <_printf_i+0x15c>
 8002edc:	6823      	ldr	r3, [r4, #0]
 8002ede:	079b      	lsls	r3, r3, #30
 8002ee0:	d413      	bmi.n	8002f0a <_printf_i+0x22e>
 8002ee2:	68e0      	ldr	r0, [r4, #12]
 8002ee4:	9b03      	ldr	r3, [sp, #12]
 8002ee6:	4298      	cmp	r0, r3
 8002ee8:	bfb8      	it	lt
 8002eea:	4618      	movlt	r0, r3
 8002eec:	e7a6      	b.n	8002e3c <_printf_i+0x160>
 8002eee:	2301      	movs	r3, #1
 8002ef0:	4632      	mov	r2, r6
 8002ef2:	4649      	mov	r1, r9
 8002ef4:	4640      	mov	r0, r8
 8002ef6:	47d0      	blx	sl
 8002ef8:	3001      	adds	r0, #1
 8002efa:	d09d      	beq.n	8002e38 <_printf_i+0x15c>
 8002efc:	3501      	adds	r5, #1
 8002efe:	68e3      	ldr	r3, [r4, #12]
 8002f00:	9903      	ldr	r1, [sp, #12]
 8002f02:	1a5b      	subs	r3, r3, r1
 8002f04:	42ab      	cmp	r3, r5
 8002f06:	dcf2      	bgt.n	8002eee <_printf_i+0x212>
 8002f08:	e7eb      	b.n	8002ee2 <_printf_i+0x206>
 8002f0a:	2500      	movs	r5, #0
 8002f0c:	f104 0619 	add.w	r6, r4, #25
 8002f10:	e7f5      	b.n	8002efe <_printf_i+0x222>
 8002f12:	bf00      	nop
 8002f14:	08006e52 	.word	0x08006e52
 8002f18:	08006e63 	.word	0x08006e63

08002f1c <_scanf_float>:
 8002f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f20:	b087      	sub	sp, #28
 8002f22:	4617      	mov	r7, r2
 8002f24:	9303      	str	r3, [sp, #12]
 8002f26:	688b      	ldr	r3, [r1, #8]
 8002f28:	1e5a      	subs	r2, r3, #1
 8002f2a:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002f2e:	bf81      	itttt	hi
 8002f30:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8002f34:	eb03 0b05 	addhi.w	fp, r3, r5
 8002f38:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002f3c:	608b      	strhi	r3, [r1, #8]
 8002f3e:	680b      	ldr	r3, [r1, #0]
 8002f40:	460a      	mov	r2, r1
 8002f42:	f04f 0500 	mov.w	r5, #0
 8002f46:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8002f4a:	f842 3b1c 	str.w	r3, [r2], #28
 8002f4e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002f52:	4680      	mov	r8, r0
 8002f54:	460c      	mov	r4, r1
 8002f56:	bf98      	it	ls
 8002f58:	f04f 0b00 	movls.w	fp, #0
 8002f5c:	9201      	str	r2, [sp, #4]
 8002f5e:	4616      	mov	r6, r2
 8002f60:	46aa      	mov	sl, r5
 8002f62:	46a9      	mov	r9, r5
 8002f64:	9502      	str	r5, [sp, #8]
 8002f66:	68a2      	ldr	r2, [r4, #8]
 8002f68:	b152      	cbz	r2, 8002f80 <_scanf_float+0x64>
 8002f6a:	683b      	ldr	r3, [r7, #0]
 8002f6c:	781b      	ldrb	r3, [r3, #0]
 8002f6e:	2b4e      	cmp	r3, #78	@ 0x4e
 8002f70:	d864      	bhi.n	800303c <_scanf_float+0x120>
 8002f72:	2b40      	cmp	r3, #64	@ 0x40
 8002f74:	d83c      	bhi.n	8002ff0 <_scanf_float+0xd4>
 8002f76:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002f7a:	b2c8      	uxtb	r0, r1
 8002f7c:	280e      	cmp	r0, #14
 8002f7e:	d93a      	bls.n	8002ff6 <_scanf_float+0xda>
 8002f80:	f1b9 0f00 	cmp.w	r9, #0
 8002f84:	d003      	beq.n	8002f8e <_scanf_float+0x72>
 8002f86:	6823      	ldr	r3, [r4, #0]
 8002f88:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002f8c:	6023      	str	r3, [r4, #0]
 8002f8e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002f92:	f1ba 0f01 	cmp.w	sl, #1
 8002f96:	f200 8117 	bhi.w	80031c8 <_scanf_float+0x2ac>
 8002f9a:	9b01      	ldr	r3, [sp, #4]
 8002f9c:	429e      	cmp	r6, r3
 8002f9e:	f200 8108 	bhi.w	80031b2 <_scanf_float+0x296>
 8002fa2:	2001      	movs	r0, #1
 8002fa4:	b007      	add	sp, #28
 8002fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002faa:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002fae:	2a0d      	cmp	r2, #13
 8002fb0:	d8e6      	bhi.n	8002f80 <_scanf_float+0x64>
 8002fb2:	a101      	add	r1, pc, #4	@ (adr r1, 8002fb8 <_scanf_float+0x9c>)
 8002fb4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002fb8:	080030ff 	.word	0x080030ff
 8002fbc:	08002f81 	.word	0x08002f81
 8002fc0:	08002f81 	.word	0x08002f81
 8002fc4:	08002f81 	.word	0x08002f81
 8002fc8:	0800315f 	.word	0x0800315f
 8002fcc:	08003137 	.word	0x08003137
 8002fd0:	08002f81 	.word	0x08002f81
 8002fd4:	08002f81 	.word	0x08002f81
 8002fd8:	0800310d 	.word	0x0800310d
 8002fdc:	08002f81 	.word	0x08002f81
 8002fe0:	08002f81 	.word	0x08002f81
 8002fe4:	08002f81 	.word	0x08002f81
 8002fe8:	08002f81 	.word	0x08002f81
 8002fec:	080030c5 	.word	0x080030c5
 8002ff0:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8002ff4:	e7db      	b.n	8002fae <_scanf_float+0x92>
 8002ff6:	290e      	cmp	r1, #14
 8002ff8:	d8c2      	bhi.n	8002f80 <_scanf_float+0x64>
 8002ffa:	a001      	add	r0, pc, #4	@ (adr r0, 8003000 <_scanf_float+0xe4>)
 8002ffc:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003000:	080030b5 	.word	0x080030b5
 8003004:	08002f81 	.word	0x08002f81
 8003008:	080030b5 	.word	0x080030b5
 800300c:	0800314b 	.word	0x0800314b
 8003010:	08002f81 	.word	0x08002f81
 8003014:	0800305d 	.word	0x0800305d
 8003018:	0800309b 	.word	0x0800309b
 800301c:	0800309b 	.word	0x0800309b
 8003020:	0800309b 	.word	0x0800309b
 8003024:	0800309b 	.word	0x0800309b
 8003028:	0800309b 	.word	0x0800309b
 800302c:	0800309b 	.word	0x0800309b
 8003030:	0800309b 	.word	0x0800309b
 8003034:	0800309b 	.word	0x0800309b
 8003038:	0800309b 	.word	0x0800309b
 800303c:	2b6e      	cmp	r3, #110	@ 0x6e
 800303e:	d809      	bhi.n	8003054 <_scanf_float+0x138>
 8003040:	2b60      	cmp	r3, #96	@ 0x60
 8003042:	d8b2      	bhi.n	8002faa <_scanf_float+0x8e>
 8003044:	2b54      	cmp	r3, #84	@ 0x54
 8003046:	d07b      	beq.n	8003140 <_scanf_float+0x224>
 8003048:	2b59      	cmp	r3, #89	@ 0x59
 800304a:	d199      	bne.n	8002f80 <_scanf_float+0x64>
 800304c:	2d07      	cmp	r5, #7
 800304e:	d197      	bne.n	8002f80 <_scanf_float+0x64>
 8003050:	2508      	movs	r5, #8
 8003052:	e02c      	b.n	80030ae <_scanf_float+0x192>
 8003054:	2b74      	cmp	r3, #116	@ 0x74
 8003056:	d073      	beq.n	8003140 <_scanf_float+0x224>
 8003058:	2b79      	cmp	r3, #121	@ 0x79
 800305a:	e7f6      	b.n	800304a <_scanf_float+0x12e>
 800305c:	6821      	ldr	r1, [r4, #0]
 800305e:	05c8      	lsls	r0, r1, #23
 8003060:	d51b      	bpl.n	800309a <_scanf_float+0x17e>
 8003062:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8003066:	6021      	str	r1, [r4, #0]
 8003068:	f109 0901 	add.w	r9, r9, #1
 800306c:	f1bb 0f00 	cmp.w	fp, #0
 8003070:	d003      	beq.n	800307a <_scanf_float+0x15e>
 8003072:	3201      	adds	r2, #1
 8003074:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8003078:	60a2      	str	r2, [r4, #8]
 800307a:	68a3      	ldr	r3, [r4, #8]
 800307c:	3b01      	subs	r3, #1
 800307e:	60a3      	str	r3, [r4, #8]
 8003080:	6923      	ldr	r3, [r4, #16]
 8003082:	3301      	adds	r3, #1
 8003084:	6123      	str	r3, [r4, #16]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	3b01      	subs	r3, #1
 800308a:	2b00      	cmp	r3, #0
 800308c:	607b      	str	r3, [r7, #4]
 800308e:	f340 8087 	ble.w	80031a0 <_scanf_float+0x284>
 8003092:	683b      	ldr	r3, [r7, #0]
 8003094:	3301      	adds	r3, #1
 8003096:	603b      	str	r3, [r7, #0]
 8003098:	e765      	b.n	8002f66 <_scanf_float+0x4a>
 800309a:	eb1a 0105 	adds.w	r1, sl, r5
 800309e:	f47f af6f 	bne.w	8002f80 <_scanf_float+0x64>
 80030a2:	6822      	ldr	r2, [r4, #0]
 80030a4:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 80030a8:	6022      	str	r2, [r4, #0]
 80030aa:	460d      	mov	r5, r1
 80030ac:	468a      	mov	sl, r1
 80030ae:	f806 3b01 	strb.w	r3, [r6], #1
 80030b2:	e7e2      	b.n	800307a <_scanf_float+0x15e>
 80030b4:	6822      	ldr	r2, [r4, #0]
 80030b6:	0610      	lsls	r0, r2, #24
 80030b8:	f57f af62 	bpl.w	8002f80 <_scanf_float+0x64>
 80030bc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80030c0:	6022      	str	r2, [r4, #0]
 80030c2:	e7f4      	b.n	80030ae <_scanf_float+0x192>
 80030c4:	f1ba 0f00 	cmp.w	sl, #0
 80030c8:	d10e      	bne.n	80030e8 <_scanf_float+0x1cc>
 80030ca:	f1b9 0f00 	cmp.w	r9, #0
 80030ce:	d10e      	bne.n	80030ee <_scanf_float+0x1d2>
 80030d0:	6822      	ldr	r2, [r4, #0]
 80030d2:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80030d6:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80030da:	d108      	bne.n	80030ee <_scanf_float+0x1d2>
 80030dc:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80030e0:	6022      	str	r2, [r4, #0]
 80030e2:	f04f 0a01 	mov.w	sl, #1
 80030e6:	e7e2      	b.n	80030ae <_scanf_float+0x192>
 80030e8:	f1ba 0f02 	cmp.w	sl, #2
 80030ec:	d055      	beq.n	800319a <_scanf_float+0x27e>
 80030ee:	2d01      	cmp	r5, #1
 80030f0:	d002      	beq.n	80030f8 <_scanf_float+0x1dc>
 80030f2:	2d04      	cmp	r5, #4
 80030f4:	f47f af44 	bne.w	8002f80 <_scanf_float+0x64>
 80030f8:	3501      	adds	r5, #1
 80030fa:	b2ed      	uxtb	r5, r5
 80030fc:	e7d7      	b.n	80030ae <_scanf_float+0x192>
 80030fe:	f1ba 0f01 	cmp.w	sl, #1
 8003102:	f47f af3d 	bne.w	8002f80 <_scanf_float+0x64>
 8003106:	f04f 0a02 	mov.w	sl, #2
 800310a:	e7d0      	b.n	80030ae <_scanf_float+0x192>
 800310c:	b97d      	cbnz	r5, 800312e <_scanf_float+0x212>
 800310e:	f1b9 0f00 	cmp.w	r9, #0
 8003112:	f47f af38 	bne.w	8002f86 <_scanf_float+0x6a>
 8003116:	6822      	ldr	r2, [r4, #0]
 8003118:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800311c:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8003120:	f040 8108 	bne.w	8003334 <_scanf_float+0x418>
 8003124:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003128:	6022      	str	r2, [r4, #0]
 800312a:	2501      	movs	r5, #1
 800312c:	e7bf      	b.n	80030ae <_scanf_float+0x192>
 800312e:	2d03      	cmp	r5, #3
 8003130:	d0e2      	beq.n	80030f8 <_scanf_float+0x1dc>
 8003132:	2d05      	cmp	r5, #5
 8003134:	e7de      	b.n	80030f4 <_scanf_float+0x1d8>
 8003136:	2d02      	cmp	r5, #2
 8003138:	f47f af22 	bne.w	8002f80 <_scanf_float+0x64>
 800313c:	2503      	movs	r5, #3
 800313e:	e7b6      	b.n	80030ae <_scanf_float+0x192>
 8003140:	2d06      	cmp	r5, #6
 8003142:	f47f af1d 	bne.w	8002f80 <_scanf_float+0x64>
 8003146:	2507      	movs	r5, #7
 8003148:	e7b1      	b.n	80030ae <_scanf_float+0x192>
 800314a:	6822      	ldr	r2, [r4, #0]
 800314c:	0591      	lsls	r1, r2, #22
 800314e:	f57f af17 	bpl.w	8002f80 <_scanf_float+0x64>
 8003152:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8003156:	6022      	str	r2, [r4, #0]
 8003158:	f8cd 9008 	str.w	r9, [sp, #8]
 800315c:	e7a7      	b.n	80030ae <_scanf_float+0x192>
 800315e:	6822      	ldr	r2, [r4, #0]
 8003160:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8003164:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8003168:	d006      	beq.n	8003178 <_scanf_float+0x25c>
 800316a:	0550      	lsls	r0, r2, #21
 800316c:	f57f af08 	bpl.w	8002f80 <_scanf_float+0x64>
 8003170:	f1b9 0f00 	cmp.w	r9, #0
 8003174:	f000 80de 	beq.w	8003334 <_scanf_float+0x418>
 8003178:	0591      	lsls	r1, r2, #22
 800317a:	bf58      	it	pl
 800317c:	9902      	ldrpl	r1, [sp, #8]
 800317e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003182:	bf58      	it	pl
 8003184:	eba9 0101 	subpl.w	r1, r9, r1
 8003188:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800318c:	bf58      	it	pl
 800318e:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003192:	6022      	str	r2, [r4, #0]
 8003194:	f04f 0900 	mov.w	r9, #0
 8003198:	e789      	b.n	80030ae <_scanf_float+0x192>
 800319a:	f04f 0a03 	mov.w	sl, #3
 800319e:	e786      	b.n	80030ae <_scanf_float+0x192>
 80031a0:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 80031a4:	4639      	mov	r1, r7
 80031a6:	4640      	mov	r0, r8
 80031a8:	4798      	blx	r3
 80031aa:	2800      	cmp	r0, #0
 80031ac:	f43f aedb 	beq.w	8002f66 <_scanf_float+0x4a>
 80031b0:	e6e6      	b.n	8002f80 <_scanf_float+0x64>
 80031b2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031b6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031ba:	463a      	mov	r2, r7
 80031bc:	4640      	mov	r0, r8
 80031be:	4798      	blx	r3
 80031c0:	6923      	ldr	r3, [r4, #16]
 80031c2:	3b01      	subs	r3, #1
 80031c4:	6123      	str	r3, [r4, #16]
 80031c6:	e6e8      	b.n	8002f9a <_scanf_float+0x7e>
 80031c8:	1e6b      	subs	r3, r5, #1
 80031ca:	2b06      	cmp	r3, #6
 80031cc:	d824      	bhi.n	8003218 <_scanf_float+0x2fc>
 80031ce:	2d02      	cmp	r5, #2
 80031d0:	d836      	bhi.n	8003240 <_scanf_float+0x324>
 80031d2:	9b01      	ldr	r3, [sp, #4]
 80031d4:	429e      	cmp	r6, r3
 80031d6:	f67f aee4 	bls.w	8002fa2 <_scanf_float+0x86>
 80031da:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031de:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031e2:	463a      	mov	r2, r7
 80031e4:	4640      	mov	r0, r8
 80031e6:	4798      	blx	r3
 80031e8:	6923      	ldr	r3, [r4, #16]
 80031ea:	3b01      	subs	r3, #1
 80031ec:	6123      	str	r3, [r4, #16]
 80031ee:	e7f0      	b.n	80031d2 <_scanf_float+0x2b6>
 80031f0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031f4:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 80031f8:	463a      	mov	r2, r7
 80031fa:	4640      	mov	r0, r8
 80031fc:	4798      	blx	r3
 80031fe:	6923      	ldr	r3, [r4, #16]
 8003200:	3b01      	subs	r3, #1
 8003202:	6123      	str	r3, [r4, #16]
 8003204:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8003208:	fa5f fa8a 	uxtb.w	sl, sl
 800320c:	f1ba 0f02 	cmp.w	sl, #2
 8003210:	d1ee      	bne.n	80031f0 <_scanf_float+0x2d4>
 8003212:	3d03      	subs	r5, #3
 8003214:	b2ed      	uxtb	r5, r5
 8003216:	1b76      	subs	r6, r6, r5
 8003218:	6823      	ldr	r3, [r4, #0]
 800321a:	05da      	lsls	r2, r3, #23
 800321c:	d530      	bpl.n	8003280 <_scanf_float+0x364>
 800321e:	055b      	lsls	r3, r3, #21
 8003220:	d511      	bpl.n	8003246 <_scanf_float+0x32a>
 8003222:	9b01      	ldr	r3, [sp, #4]
 8003224:	429e      	cmp	r6, r3
 8003226:	f67f aebc 	bls.w	8002fa2 <_scanf_float+0x86>
 800322a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800322e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003232:	463a      	mov	r2, r7
 8003234:	4640      	mov	r0, r8
 8003236:	4798      	blx	r3
 8003238:	6923      	ldr	r3, [r4, #16]
 800323a:	3b01      	subs	r3, #1
 800323c:	6123      	str	r3, [r4, #16]
 800323e:	e7f0      	b.n	8003222 <_scanf_float+0x306>
 8003240:	46aa      	mov	sl, r5
 8003242:	46b3      	mov	fp, r6
 8003244:	e7de      	b.n	8003204 <_scanf_float+0x2e8>
 8003246:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800324a:	6923      	ldr	r3, [r4, #16]
 800324c:	2965      	cmp	r1, #101	@ 0x65
 800324e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8003252:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
 8003256:	6123      	str	r3, [r4, #16]
 8003258:	d00c      	beq.n	8003274 <_scanf_float+0x358>
 800325a:	2945      	cmp	r1, #69	@ 0x45
 800325c:	d00a      	beq.n	8003274 <_scanf_float+0x358>
 800325e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003262:	463a      	mov	r2, r7
 8003264:	4640      	mov	r0, r8
 8003266:	4798      	blx	r3
 8003268:	6923      	ldr	r3, [r4, #16]
 800326a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800326e:	3b01      	subs	r3, #1
 8003270:	1eb5      	subs	r5, r6, #2
 8003272:	6123      	str	r3, [r4, #16]
 8003274:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003278:	463a      	mov	r2, r7
 800327a:	4640      	mov	r0, r8
 800327c:	4798      	blx	r3
 800327e:	462e      	mov	r6, r5
 8003280:	6822      	ldr	r2, [r4, #0]
 8003282:	f012 0210 	ands.w	r2, r2, #16
 8003286:	d001      	beq.n	800328c <_scanf_float+0x370>
 8003288:	2000      	movs	r0, #0
 800328a:	e68b      	b.n	8002fa4 <_scanf_float+0x88>
 800328c:	7032      	strb	r2, [r6, #0]
 800328e:	6823      	ldr	r3, [r4, #0]
 8003290:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003294:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003298:	d11c      	bne.n	80032d4 <_scanf_float+0x3b8>
 800329a:	9b02      	ldr	r3, [sp, #8]
 800329c:	454b      	cmp	r3, r9
 800329e:	eba3 0209 	sub.w	r2, r3, r9
 80032a2:	d123      	bne.n	80032ec <_scanf_float+0x3d0>
 80032a4:	9901      	ldr	r1, [sp, #4]
 80032a6:	2200      	movs	r2, #0
 80032a8:	4640      	mov	r0, r8
 80032aa:	f002 fc21 	bl	8005af0 <_strtod_r>
 80032ae:	9b03      	ldr	r3, [sp, #12]
 80032b0:	6821      	ldr	r1, [r4, #0]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	f011 0f02 	tst.w	r1, #2
 80032b8:	ec57 6b10 	vmov	r6, r7, d0
 80032bc:	f103 0204 	add.w	r2, r3, #4
 80032c0:	d01f      	beq.n	8003302 <_scanf_float+0x3e6>
 80032c2:	9903      	ldr	r1, [sp, #12]
 80032c4:	600a      	str	r2, [r1, #0]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	e9c3 6700 	strd	r6, r7, [r3]
 80032cc:	68e3      	ldr	r3, [r4, #12]
 80032ce:	3301      	adds	r3, #1
 80032d0:	60e3      	str	r3, [r4, #12]
 80032d2:	e7d9      	b.n	8003288 <_scanf_float+0x36c>
 80032d4:	9b04      	ldr	r3, [sp, #16]
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d0e4      	beq.n	80032a4 <_scanf_float+0x388>
 80032da:	9905      	ldr	r1, [sp, #20]
 80032dc:	230a      	movs	r3, #10
 80032de:	3101      	adds	r1, #1
 80032e0:	4640      	mov	r0, r8
 80032e2:	f002 fc85 	bl	8005bf0 <_strtol_r>
 80032e6:	9b04      	ldr	r3, [sp, #16]
 80032e8:	9e05      	ldr	r6, [sp, #20]
 80032ea:	1ac2      	subs	r2, r0, r3
 80032ec:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 80032f0:	429e      	cmp	r6, r3
 80032f2:	bf28      	it	cs
 80032f4:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 80032f8:	4910      	ldr	r1, [pc, #64]	@ (800333c <_scanf_float+0x420>)
 80032fa:	4630      	mov	r0, r6
 80032fc:	f000 f8f6 	bl	80034ec <siprintf>
 8003300:	e7d0      	b.n	80032a4 <_scanf_float+0x388>
 8003302:	f011 0f04 	tst.w	r1, #4
 8003306:	9903      	ldr	r1, [sp, #12]
 8003308:	600a      	str	r2, [r1, #0]
 800330a:	d1dc      	bne.n	80032c6 <_scanf_float+0x3aa>
 800330c:	681d      	ldr	r5, [r3, #0]
 800330e:	4632      	mov	r2, r6
 8003310:	463b      	mov	r3, r7
 8003312:	4630      	mov	r0, r6
 8003314:	4639      	mov	r1, r7
 8003316:	f7fd fc11 	bl	8000b3c <__aeabi_dcmpun>
 800331a:	b128      	cbz	r0, 8003328 <_scanf_float+0x40c>
 800331c:	4808      	ldr	r0, [pc, #32]	@ (8003340 <_scanf_float+0x424>)
 800331e:	f000 f9df 	bl	80036e0 <nanf>
 8003322:	ed85 0a00 	vstr	s0, [r5]
 8003326:	e7d1      	b.n	80032cc <_scanf_float+0x3b0>
 8003328:	4630      	mov	r0, r6
 800332a:	4639      	mov	r1, r7
 800332c:	f7fd fc64 	bl	8000bf8 <__aeabi_d2f>
 8003330:	6028      	str	r0, [r5, #0]
 8003332:	e7cb      	b.n	80032cc <_scanf_float+0x3b0>
 8003334:	f04f 0900 	mov.w	r9, #0
 8003338:	e629      	b.n	8002f8e <_scanf_float+0x72>
 800333a:	bf00      	nop
 800333c:	08006e74 	.word	0x08006e74
 8003340:	0800720d 	.word	0x0800720d

08003344 <std>:
 8003344:	2300      	movs	r3, #0
 8003346:	b510      	push	{r4, lr}
 8003348:	4604      	mov	r4, r0
 800334a:	e9c0 3300 	strd	r3, r3, [r0]
 800334e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003352:	6083      	str	r3, [r0, #8]
 8003354:	8181      	strh	r1, [r0, #12]
 8003356:	6643      	str	r3, [r0, #100]	@ 0x64
 8003358:	81c2      	strh	r2, [r0, #14]
 800335a:	6183      	str	r3, [r0, #24]
 800335c:	4619      	mov	r1, r3
 800335e:	2208      	movs	r2, #8
 8003360:	305c      	adds	r0, #92	@ 0x5c
 8003362:	f000 f926 	bl	80035b2 <memset>
 8003366:	4b0d      	ldr	r3, [pc, #52]	@ (800339c <std+0x58>)
 8003368:	6263      	str	r3, [r4, #36]	@ 0x24
 800336a:	4b0d      	ldr	r3, [pc, #52]	@ (80033a0 <std+0x5c>)
 800336c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800336e:	4b0d      	ldr	r3, [pc, #52]	@ (80033a4 <std+0x60>)
 8003370:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003372:	4b0d      	ldr	r3, [pc, #52]	@ (80033a8 <std+0x64>)
 8003374:	6323      	str	r3, [r4, #48]	@ 0x30
 8003376:	4b0d      	ldr	r3, [pc, #52]	@ (80033ac <std+0x68>)
 8003378:	6224      	str	r4, [r4, #32]
 800337a:	429c      	cmp	r4, r3
 800337c:	d006      	beq.n	800338c <std+0x48>
 800337e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8003382:	4294      	cmp	r4, r2
 8003384:	d002      	beq.n	800338c <std+0x48>
 8003386:	33d0      	adds	r3, #208	@ 0xd0
 8003388:	429c      	cmp	r4, r3
 800338a:	d105      	bne.n	8003398 <std+0x54>
 800338c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8003390:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003394:	f000 b9a0 	b.w	80036d8 <__retarget_lock_init_recursive>
 8003398:	bd10      	pop	{r4, pc}
 800339a:	bf00      	nop
 800339c:	0800352d 	.word	0x0800352d
 80033a0:	0800354f 	.word	0x0800354f
 80033a4:	08003587 	.word	0x08003587
 80033a8:	080035ab 	.word	0x080035ab
 80033ac:	200002ac 	.word	0x200002ac

080033b0 <stdio_exit_handler>:
 80033b0:	4a02      	ldr	r2, [pc, #8]	@ (80033bc <stdio_exit_handler+0xc>)
 80033b2:	4903      	ldr	r1, [pc, #12]	@ (80033c0 <stdio_exit_handler+0x10>)
 80033b4:	4803      	ldr	r0, [pc, #12]	@ (80033c4 <stdio_exit_handler+0x14>)
 80033b6:	f000 b869 	b.w	800348c <_fwalk_sglue>
 80033ba:	bf00      	nop
 80033bc:	2000000c 	.word	0x2000000c
 80033c0:	08006231 	.word	0x08006231
 80033c4:	2000001c 	.word	0x2000001c

080033c8 <cleanup_stdio>:
 80033c8:	6841      	ldr	r1, [r0, #4]
 80033ca:	4b0c      	ldr	r3, [pc, #48]	@ (80033fc <cleanup_stdio+0x34>)
 80033cc:	4299      	cmp	r1, r3
 80033ce:	b510      	push	{r4, lr}
 80033d0:	4604      	mov	r4, r0
 80033d2:	d001      	beq.n	80033d8 <cleanup_stdio+0x10>
 80033d4:	f002 ff2c 	bl	8006230 <_fflush_r>
 80033d8:	68a1      	ldr	r1, [r4, #8]
 80033da:	4b09      	ldr	r3, [pc, #36]	@ (8003400 <cleanup_stdio+0x38>)
 80033dc:	4299      	cmp	r1, r3
 80033de:	d002      	beq.n	80033e6 <cleanup_stdio+0x1e>
 80033e0:	4620      	mov	r0, r4
 80033e2:	f002 ff25 	bl	8006230 <_fflush_r>
 80033e6:	68e1      	ldr	r1, [r4, #12]
 80033e8:	4b06      	ldr	r3, [pc, #24]	@ (8003404 <cleanup_stdio+0x3c>)
 80033ea:	4299      	cmp	r1, r3
 80033ec:	d004      	beq.n	80033f8 <cleanup_stdio+0x30>
 80033ee:	4620      	mov	r0, r4
 80033f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033f4:	f002 bf1c 	b.w	8006230 <_fflush_r>
 80033f8:	bd10      	pop	{r4, pc}
 80033fa:	bf00      	nop
 80033fc:	200002ac 	.word	0x200002ac
 8003400:	20000314 	.word	0x20000314
 8003404:	2000037c 	.word	0x2000037c

08003408 <global_stdio_init.part.0>:
 8003408:	b510      	push	{r4, lr}
 800340a:	4b0b      	ldr	r3, [pc, #44]	@ (8003438 <global_stdio_init.part.0+0x30>)
 800340c:	4c0b      	ldr	r4, [pc, #44]	@ (800343c <global_stdio_init.part.0+0x34>)
 800340e:	4a0c      	ldr	r2, [pc, #48]	@ (8003440 <global_stdio_init.part.0+0x38>)
 8003410:	601a      	str	r2, [r3, #0]
 8003412:	4620      	mov	r0, r4
 8003414:	2200      	movs	r2, #0
 8003416:	2104      	movs	r1, #4
 8003418:	f7ff ff94 	bl	8003344 <std>
 800341c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8003420:	2201      	movs	r2, #1
 8003422:	2109      	movs	r1, #9
 8003424:	f7ff ff8e 	bl	8003344 <std>
 8003428:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800342c:	2202      	movs	r2, #2
 800342e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003432:	2112      	movs	r1, #18
 8003434:	f7ff bf86 	b.w	8003344 <std>
 8003438:	200003e4 	.word	0x200003e4
 800343c:	200002ac 	.word	0x200002ac
 8003440:	080033b1 	.word	0x080033b1

08003444 <__sfp_lock_acquire>:
 8003444:	4801      	ldr	r0, [pc, #4]	@ (800344c <__sfp_lock_acquire+0x8>)
 8003446:	f000 b948 	b.w	80036da <__retarget_lock_acquire_recursive>
 800344a:	bf00      	nop
 800344c:	200003ed 	.word	0x200003ed

08003450 <__sfp_lock_release>:
 8003450:	4801      	ldr	r0, [pc, #4]	@ (8003458 <__sfp_lock_release+0x8>)
 8003452:	f000 b943 	b.w	80036dc <__retarget_lock_release_recursive>
 8003456:	bf00      	nop
 8003458:	200003ed 	.word	0x200003ed

0800345c <__sinit>:
 800345c:	b510      	push	{r4, lr}
 800345e:	4604      	mov	r4, r0
 8003460:	f7ff fff0 	bl	8003444 <__sfp_lock_acquire>
 8003464:	6a23      	ldr	r3, [r4, #32]
 8003466:	b11b      	cbz	r3, 8003470 <__sinit+0x14>
 8003468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800346c:	f7ff bff0 	b.w	8003450 <__sfp_lock_release>
 8003470:	4b04      	ldr	r3, [pc, #16]	@ (8003484 <__sinit+0x28>)
 8003472:	6223      	str	r3, [r4, #32]
 8003474:	4b04      	ldr	r3, [pc, #16]	@ (8003488 <__sinit+0x2c>)
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	2b00      	cmp	r3, #0
 800347a:	d1f5      	bne.n	8003468 <__sinit+0xc>
 800347c:	f7ff ffc4 	bl	8003408 <global_stdio_init.part.0>
 8003480:	e7f2      	b.n	8003468 <__sinit+0xc>
 8003482:	bf00      	nop
 8003484:	080033c9 	.word	0x080033c9
 8003488:	200003e4 	.word	0x200003e4

0800348c <_fwalk_sglue>:
 800348c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003490:	4607      	mov	r7, r0
 8003492:	4688      	mov	r8, r1
 8003494:	4614      	mov	r4, r2
 8003496:	2600      	movs	r6, #0
 8003498:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800349c:	f1b9 0901 	subs.w	r9, r9, #1
 80034a0:	d505      	bpl.n	80034ae <_fwalk_sglue+0x22>
 80034a2:	6824      	ldr	r4, [r4, #0]
 80034a4:	2c00      	cmp	r4, #0
 80034a6:	d1f7      	bne.n	8003498 <_fwalk_sglue+0xc>
 80034a8:	4630      	mov	r0, r6
 80034aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80034ae:	89ab      	ldrh	r3, [r5, #12]
 80034b0:	2b01      	cmp	r3, #1
 80034b2:	d907      	bls.n	80034c4 <_fwalk_sglue+0x38>
 80034b4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80034b8:	3301      	adds	r3, #1
 80034ba:	d003      	beq.n	80034c4 <_fwalk_sglue+0x38>
 80034bc:	4629      	mov	r1, r5
 80034be:	4638      	mov	r0, r7
 80034c0:	47c0      	blx	r8
 80034c2:	4306      	orrs	r6, r0
 80034c4:	3568      	adds	r5, #104	@ 0x68
 80034c6:	e7e9      	b.n	800349c <_fwalk_sglue+0x10>

080034c8 <iprintf>:
 80034c8:	b40f      	push	{r0, r1, r2, r3}
 80034ca:	b507      	push	{r0, r1, r2, lr}
 80034cc:	4906      	ldr	r1, [pc, #24]	@ (80034e8 <iprintf+0x20>)
 80034ce:	ab04      	add	r3, sp, #16
 80034d0:	6808      	ldr	r0, [r1, #0]
 80034d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80034d6:	6881      	ldr	r1, [r0, #8]
 80034d8:	9301      	str	r3, [sp, #4]
 80034da:	f002 fd0d 	bl	8005ef8 <_vfiprintf_r>
 80034de:	b003      	add	sp, #12
 80034e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80034e4:	b004      	add	sp, #16
 80034e6:	4770      	bx	lr
 80034e8:	20000018 	.word	0x20000018

080034ec <siprintf>:
 80034ec:	b40e      	push	{r1, r2, r3}
 80034ee:	b500      	push	{lr}
 80034f0:	b09c      	sub	sp, #112	@ 0x70
 80034f2:	ab1d      	add	r3, sp, #116	@ 0x74
 80034f4:	9002      	str	r0, [sp, #8]
 80034f6:	9006      	str	r0, [sp, #24]
 80034f8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80034fc:	4809      	ldr	r0, [pc, #36]	@ (8003524 <siprintf+0x38>)
 80034fe:	9107      	str	r1, [sp, #28]
 8003500:	9104      	str	r1, [sp, #16]
 8003502:	4909      	ldr	r1, [pc, #36]	@ (8003528 <siprintf+0x3c>)
 8003504:	f853 2b04 	ldr.w	r2, [r3], #4
 8003508:	9105      	str	r1, [sp, #20]
 800350a:	6800      	ldr	r0, [r0, #0]
 800350c:	9301      	str	r3, [sp, #4]
 800350e:	a902      	add	r1, sp, #8
 8003510:	f002 fbcc 	bl	8005cac <_svfiprintf_r>
 8003514:	9b02      	ldr	r3, [sp, #8]
 8003516:	2200      	movs	r2, #0
 8003518:	701a      	strb	r2, [r3, #0]
 800351a:	b01c      	add	sp, #112	@ 0x70
 800351c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003520:	b003      	add	sp, #12
 8003522:	4770      	bx	lr
 8003524:	20000018 	.word	0x20000018
 8003528:	ffff0208 	.word	0xffff0208

0800352c <__sread>:
 800352c:	b510      	push	{r4, lr}
 800352e:	460c      	mov	r4, r1
 8003530:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003534:	f000 f882 	bl	800363c <_read_r>
 8003538:	2800      	cmp	r0, #0
 800353a:	bfab      	itete	ge
 800353c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800353e:	89a3      	ldrhlt	r3, [r4, #12]
 8003540:	181b      	addge	r3, r3, r0
 8003542:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003546:	bfac      	ite	ge
 8003548:	6563      	strge	r3, [r4, #84]	@ 0x54
 800354a:	81a3      	strhlt	r3, [r4, #12]
 800354c:	bd10      	pop	{r4, pc}

0800354e <__swrite>:
 800354e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003552:	461f      	mov	r7, r3
 8003554:	898b      	ldrh	r3, [r1, #12]
 8003556:	05db      	lsls	r3, r3, #23
 8003558:	4605      	mov	r5, r0
 800355a:	460c      	mov	r4, r1
 800355c:	4616      	mov	r6, r2
 800355e:	d505      	bpl.n	800356c <__swrite+0x1e>
 8003560:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003564:	2302      	movs	r3, #2
 8003566:	2200      	movs	r2, #0
 8003568:	f000 f856 	bl	8003618 <_lseek_r>
 800356c:	89a3      	ldrh	r3, [r4, #12]
 800356e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003572:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003576:	81a3      	strh	r3, [r4, #12]
 8003578:	4632      	mov	r2, r6
 800357a:	463b      	mov	r3, r7
 800357c:	4628      	mov	r0, r5
 800357e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003582:	f000 b86d 	b.w	8003660 <_write_r>

08003586 <__sseek>:
 8003586:	b510      	push	{r4, lr}
 8003588:	460c      	mov	r4, r1
 800358a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800358e:	f000 f843 	bl	8003618 <_lseek_r>
 8003592:	1c43      	adds	r3, r0, #1
 8003594:	89a3      	ldrh	r3, [r4, #12]
 8003596:	bf15      	itete	ne
 8003598:	6560      	strne	r0, [r4, #84]	@ 0x54
 800359a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800359e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80035a2:	81a3      	strheq	r3, [r4, #12]
 80035a4:	bf18      	it	ne
 80035a6:	81a3      	strhne	r3, [r4, #12]
 80035a8:	bd10      	pop	{r4, pc}

080035aa <__sclose>:
 80035aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80035ae:	f000 b823 	b.w	80035f8 <_close_r>

080035b2 <memset>:
 80035b2:	4402      	add	r2, r0
 80035b4:	4603      	mov	r3, r0
 80035b6:	4293      	cmp	r3, r2
 80035b8:	d100      	bne.n	80035bc <memset+0xa>
 80035ba:	4770      	bx	lr
 80035bc:	f803 1b01 	strb.w	r1, [r3], #1
 80035c0:	e7f9      	b.n	80035b6 <memset+0x4>

080035c2 <strstr>:
 80035c2:	780a      	ldrb	r2, [r1, #0]
 80035c4:	b570      	push	{r4, r5, r6, lr}
 80035c6:	b96a      	cbnz	r2, 80035e4 <strstr+0x22>
 80035c8:	bd70      	pop	{r4, r5, r6, pc}
 80035ca:	429a      	cmp	r2, r3
 80035cc:	d109      	bne.n	80035e2 <strstr+0x20>
 80035ce:	460c      	mov	r4, r1
 80035d0:	4605      	mov	r5, r0
 80035d2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d0f6      	beq.n	80035c8 <strstr+0x6>
 80035da:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80035de:	429e      	cmp	r6, r3
 80035e0:	d0f7      	beq.n	80035d2 <strstr+0x10>
 80035e2:	3001      	adds	r0, #1
 80035e4:	7803      	ldrb	r3, [r0, #0]
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	d1ef      	bne.n	80035ca <strstr+0x8>
 80035ea:	4618      	mov	r0, r3
 80035ec:	e7ec      	b.n	80035c8 <strstr+0x6>
	...

080035f0 <_localeconv_r>:
 80035f0:	4800      	ldr	r0, [pc, #0]	@ (80035f4 <_localeconv_r+0x4>)
 80035f2:	4770      	bx	lr
 80035f4:	20000158 	.word	0x20000158

080035f8 <_close_r>:
 80035f8:	b538      	push	{r3, r4, r5, lr}
 80035fa:	4d06      	ldr	r5, [pc, #24]	@ (8003614 <_close_r+0x1c>)
 80035fc:	2300      	movs	r3, #0
 80035fe:	4604      	mov	r4, r0
 8003600:	4608      	mov	r0, r1
 8003602:	602b      	str	r3, [r5, #0]
 8003604:	f7fd ff56 	bl	80014b4 <_close>
 8003608:	1c43      	adds	r3, r0, #1
 800360a:	d102      	bne.n	8003612 <_close_r+0x1a>
 800360c:	682b      	ldr	r3, [r5, #0]
 800360e:	b103      	cbz	r3, 8003612 <_close_r+0x1a>
 8003610:	6023      	str	r3, [r4, #0]
 8003612:	bd38      	pop	{r3, r4, r5, pc}
 8003614:	200003e8 	.word	0x200003e8

08003618 <_lseek_r>:
 8003618:	b538      	push	{r3, r4, r5, lr}
 800361a:	4d07      	ldr	r5, [pc, #28]	@ (8003638 <_lseek_r+0x20>)
 800361c:	4604      	mov	r4, r0
 800361e:	4608      	mov	r0, r1
 8003620:	4611      	mov	r1, r2
 8003622:	2200      	movs	r2, #0
 8003624:	602a      	str	r2, [r5, #0]
 8003626:	461a      	mov	r2, r3
 8003628:	f7fd ff6b 	bl	8001502 <_lseek>
 800362c:	1c43      	adds	r3, r0, #1
 800362e:	d102      	bne.n	8003636 <_lseek_r+0x1e>
 8003630:	682b      	ldr	r3, [r5, #0]
 8003632:	b103      	cbz	r3, 8003636 <_lseek_r+0x1e>
 8003634:	6023      	str	r3, [r4, #0]
 8003636:	bd38      	pop	{r3, r4, r5, pc}
 8003638:	200003e8 	.word	0x200003e8

0800363c <_read_r>:
 800363c:	b538      	push	{r3, r4, r5, lr}
 800363e:	4d07      	ldr	r5, [pc, #28]	@ (800365c <_read_r+0x20>)
 8003640:	4604      	mov	r4, r0
 8003642:	4608      	mov	r0, r1
 8003644:	4611      	mov	r1, r2
 8003646:	2200      	movs	r2, #0
 8003648:	602a      	str	r2, [r5, #0]
 800364a:	461a      	mov	r2, r3
 800364c:	f7fd fef9 	bl	8001442 <_read>
 8003650:	1c43      	adds	r3, r0, #1
 8003652:	d102      	bne.n	800365a <_read_r+0x1e>
 8003654:	682b      	ldr	r3, [r5, #0]
 8003656:	b103      	cbz	r3, 800365a <_read_r+0x1e>
 8003658:	6023      	str	r3, [r4, #0]
 800365a:	bd38      	pop	{r3, r4, r5, pc}
 800365c:	200003e8 	.word	0x200003e8

08003660 <_write_r>:
 8003660:	b538      	push	{r3, r4, r5, lr}
 8003662:	4d07      	ldr	r5, [pc, #28]	@ (8003680 <_write_r+0x20>)
 8003664:	4604      	mov	r4, r0
 8003666:	4608      	mov	r0, r1
 8003668:	4611      	mov	r1, r2
 800366a:	2200      	movs	r2, #0
 800366c:	602a      	str	r2, [r5, #0]
 800366e:	461a      	mov	r2, r3
 8003670:	f7fd ff04 	bl	800147c <_write>
 8003674:	1c43      	adds	r3, r0, #1
 8003676:	d102      	bne.n	800367e <_write_r+0x1e>
 8003678:	682b      	ldr	r3, [r5, #0]
 800367a:	b103      	cbz	r3, 800367e <_write_r+0x1e>
 800367c:	6023      	str	r3, [r4, #0]
 800367e:	bd38      	pop	{r3, r4, r5, pc}
 8003680:	200003e8 	.word	0x200003e8

08003684 <__errno>:
 8003684:	4b01      	ldr	r3, [pc, #4]	@ (800368c <__errno+0x8>)
 8003686:	6818      	ldr	r0, [r3, #0]
 8003688:	4770      	bx	lr
 800368a:	bf00      	nop
 800368c:	20000018 	.word	0x20000018

08003690 <__libc_init_array>:
 8003690:	b570      	push	{r4, r5, r6, lr}
 8003692:	4d0d      	ldr	r5, [pc, #52]	@ (80036c8 <__libc_init_array+0x38>)
 8003694:	4c0d      	ldr	r4, [pc, #52]	@ (80036cc <__libc_init_array+0x3c>)
 8003696:	1b64      	subs	r4, r4, r5
 8003698:	10a4      	asrs	r4, r4, #2
 800369a:	2600      	movs	r6, #0
 800369c:	42a6      	cmp	r6, r4
 800369e:	d109      	bne.n	80036b4 <__libc_init_array+0x24>
 80036a0:	4d0b      	ldr	r5, [pc, #44]	@ (80036d0 <__libc_init_array+0x40>)
 80036a2:	4c0c      	ldr	r4, [pc, #48]	@ (80036d4 <__libc_init_array+0x44>)
 80036a4:	f003 fb76 	bl	8006d94 <_init>
 80036a8:	1b64      	subs	r4, r4, r5
 80036aa:	10a4      	asrs	r4, r4, #2
 80036ac:	2600      	movs	r6, #0
 80036ae:	42a6      	cmp	r6, r4
 80036b0:	d105      	bne.n	80036be <__libc_init_array+0x2e>
 80036b2:	bd70      	pop	{r4, r5, r6, pc}
 80036b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80036b8:	4798      	blx	r3
 80036ba:	3601      	adds	r6, #1
 80036bc:	e7ee      	b.n	800369c <__libc_init_array+0xc>
 80036be:	f855 3b04 	ldr.w	r3, [r5], #4
 80036c2:	4798      	blx	r3
 80036c4:	3601      	adds	r6, #1
 80036c6:	e7f2      	b.n	80036ae <__libc_init_array+0x1e>
 80036c8:	08007278 	.word	0x08007278
 80036cc:	08007278 	.word	0x08007278
 80036d0:	08007278 	.word	0x08007278
 80036d4:	0800727c 	.word	0x0800727c

080036d8 <__retarget_lock_init_recursive>:
 80036d8:	4770      	bx	lr

080036da <__retarget_lock_acquire_recursive>:
 80036da:	4770      	bx	lr

080036dc <__retarget_lock_release_recursive>:
 80036dc:	4770      	bx	lr
	...

080036e0 <nanf>:
 80036e0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80036e8 <nanf+0x8>
 80036e4:	4770      	bx	lr
 80036e6:	bf00      	nop
 80036e8:	7fc00000 	.word	0x7fc00000

080036ec <quorem>:
 80036ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036f0:	6903      	ldr	r3, [r0, #16]
 80036f2:	690c      	ldr	r4, [r1, #16]
 80036f4:	42a3      	cmp	r3, r4
 80036f6:	4607      	mov	r7, r0
 80036f8:	db7e      	blt.n	80037f8 <quorem+0x10c>
 80036fa:	3c01      	subs	r4, #1
 80036fc:	f101 0814 	add.w	r8, r1, #20
 8003700:	00a3      	lsls	r3, r4, #2
 8003702:	f100 0514 	add.w	r5, r0, #20
 8003706:	9300      	str	r3, [sp, #0]
 8003708:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800370c:	9301      	str	r3, [sp, #4]
 800370e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003712:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003716:	3301      	adds	r3, #1
 8003718:	429a      	cmp	r2, r3
 800371a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800371e:	fbb2 f6f3 	udiv	r6, r2, r3
 8003722:	d32e      	bcc.n	8003782 <quorem+0x96>
 8003724:	f04f 0a00 	mov.w	sl, #0
 8003728:	46c4      	mov	ip, r8
 800372a:	46ae      	mov	lr, r5
 800372c:	46d3      	mov	fp, sl
 800372e:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003732:	b298      	uxth	r0, r3
 8003734:	fb06 a000 	mla	r0, r6, r0, sl
 8003738:	0c02      	lsrs	r2, r0, #16
 800373a:	0c1b      	lsrs	r3, r3, #16
 800373c:	fb06 2303 	mla	r3, r6, r3, r2
 8003740:	f8de 2000 	ldr.w	r2, [lr]
 8003744:	b280      	uxth	r0, r0
 8003746:	b292      	uxth	r2, r2
 8003748:	1a12      	subs	r2, r2, r0
 800374a:	445a      	add	r2, fp
 800374c:	f8de 0000 	ldr.w	r0, [lr]
 8003750:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003754:	b29b      	uxth	r3, r3
 8003756:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800375a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800375e:	b292      	uxth	r2, r2
 8003760:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8003764:	45e1      	cmp	r9, ip
 8003766:	f84e 2b04 	str.w	r2, [lr], #4
 800376a:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800376e:	d2de      	bcs.n	800372e <quorem+0x42>
 8003770:	9b00      	ldr	r3, [sp, #0]
 8003772:	58eb      	ldr	r3, [r5, r3]
 8003774:	b92b      	cbnz	r3, 8003782 <quorem+0x96>
 8003776:	9b01      	ldr	r3, [sp, #4]
 8003778:	3b04      	subs	r3, #4
 800377a:	429d      	cmp	r5, r3
 800377c:	461a      	mov	r2, r3
 800377e:	d32f      	bcc.n	80037e0 <quorem+0xf4>
 8003780:	613c      	str	r4, [r7, #16]
 8003782:	4638      	mov	r0, r7
 8003784:	f001 f9c4 	bl	8004b10 <__mcmp>
 8003788:	2800      	cmp	r0, #0
 800378a:	db25      	blt.n	80037d8 <quorem+0xec>
 800378c:	4629      	mov	r1, r5
 800378e:	2000      	movs	r0, #0
 8003790:	f858 2b04 	ldr.w	r2, [r8], #4
 8003794:	f8d1 c000 	ldr.w	ip, [r1]
 8003798:	fa1f fe82 	uxth.w	lr, r2
 800379c:	fa1f f38c 	uxth.w	r3, ip
 80037a0:	eba3 030e 	sub.w	r3, r3, lr
 80037a4:	4403      	add	r3, r0
 80037a6:	0c12      	lsrs	r2, r2, #16
 80037a8:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80037ac:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80037b0:	b29b      	uxth	r3, r3
 80037b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80037b6:	45c1      	cmp	r9, r8
 80037b8:	f841 3b04 	str.w	r3, [r1], #4
 80037bc:	ea4f 4022 	mov.w	r0, r2, asr #16
 80037c0:	d2e6      	bcs.n	8003790 <quorem+0xa4>
 80037c2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80037c6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80037ca:	b922      	cbnz	r2, 80037d6 <quorem+0xea>
 80037cc:	3b04      	subs	r3, #4
 80037ce:	429d      	cmp	r5, r3
 80037d0:	461a      	mov	r2, r3
 80037d2:	d30b      	bcc.n	80037ec <quorem+0x100>
 80037d4:	613c      	str	r4, [r7, #16]
 80037d6:	3601      	adds	r6, #1
 80037d8:	4630      	mov	r0, r6
 80037da:	b003      	add	sp, #12
 80037dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037e0:	6812      	ldr	r2, [r2, #0]
 80037e2:	3b04      	subs	r3, #4
 80037e4:	2a00      	cmp	r2, #0
 80037e6:	d1cb      	bne.n	8003780 <quorem+0x94>
 80037e8:	3c01      	subs	r4, #1
 80037ea:	e7c6      	b.n	800377a <quorem+0x8e>
 80037ec:	6812      	ldr	r2, [r2, #0]
 80037ee:	3b04      	subs	r3, #4
 80037f0:	2a00      	cmp	r2, #0
 80037f2:	d1ef      	bne.n	80037d4 <quorem+0xe8>
 80037f4:	3c01      	subs	r4, #1
 80037f6:	e7ea      	b.n	80037ce <quorem+0xe2>
 80037f8:	2000      	movs	r0, #0
 80037fa:	e7ee      	b.n	80037da <quorem+0xee>
 80037fc:	0000      	movs	r0, r0
	...

08003800 <_dtoa_r>:
 8003800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003804:	69c7      	ldr	r7, [r0, #28]
 8003806:	b099      	sub	sp, #100	@ 0x64
 8003808:	ed8d 0b02 	vstr	d0, [sp, #8]
 800380c:	ec55 4b10 	vmov	r4, r5, d0
 8003810:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8003812:	9109      	str	r1, [sp, #36]	@ 0x24
 8003814:	4683      	mov	fp, r0
 8003816:	920e      	str	r2, [sp, #56]	@ 0x38
 8003818:	9313      	str	r3, [sp, #76]	@ 0x4c
 800381a:	b97f      	cbnz	r7, 800383c <_dtoa_r+0x3c>
 800381c:	2010      	movs	r0, #16
 800381e:	f000 fdfd 	bl	800441c <malloc>
 8003822:	4602      	mov	r2, r0
 8003824:	f8cb 001c 	str.w	r0, [fp, #28]
 8003828:	b920      	cbnz	r0, 8003834 <_dtoa_r+0x34>
 800382a:	4ba7      	ldr	r3, [pc, #668]	@ (8003ac8 <_dtoa_r+0x2c8>)
 800382c:	21ef      	movs	r1, #239	@ 0xef
 800382e:	48a7      	ldr	r0, [pc, #668]	@ (8003acc <_dtoa_r+0x2cc>)
 8003830:	f002 fe0e 	bl	8006450 <__assert_func>
 8003834:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8003838:	6007      	str	r7, [r0, #0]
 800383a:	60c7      	str	r7, [r0, #12]
 800383c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003840:	6819      	ldr	r1, [r3, #0]
 8003842:	b159      	cbz	r1, 800385c <_dtoa_r+0x5c>
 8003844:	685a      	ldr	r2, [r3, #4]
 8003846:	604a      	str	r2, [r1, #4]
 8003848:	2301      	movs	r3, #1
 800384a:	4093      	lsls	r3, r2
 800384c:	608b      	str	r3, [r1, #8]
 800384e:	4658      	mov	r0, fp
 8003850:	f000 feda 	bl	8004608 <_Bfree>
 8003854:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003858:	2200      	movs	r2, #0
 800385a:	601a      	str	r2, [r3, #0]
 800385c:	1e2b      	subs	r3, r5, #0
 800385e:	bfb9      	ittee	lt
 8003860:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8003864:	9303      	strlt	r3, [sp, #12]
 8003866:	2300      	movge	r3, #0
 8003868:	6033      	strge	r3, [r6, #0]
 800386a:	9f03      	ldr	r7, [sp, #12]
 800386c:	4b98      	ldr	r3, [pc, #608]	@ (8003ad0 <_dtoa_r+0x2d0>)
 800386e:	bfbc      	itt	lt
 8003870:	2201      	movlt	r2, #1
 8003872:	6032      	strlt	r2, [r6, #0]
 8003874:	43bb      	bics	r3, r7
 8003876:	d112      	bne.n	800389e <_dtoa_r+0x9e>
 8003878:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800387a:	f242 730f 	movw	r3, #9999	@ 0x270f
 800387e:	6013      	str	r3, [r2, #0]
 8003880:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003884:	4323      	orrs	r3, r4
 8003886:	f000 854d 	beq.w	8004324 <_dtoa_r+0xb24>
 800388a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800388c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8003ae4 <_dtoa_r+0x2e4>
 8003890:	2b00      	cmp	r3, #0
 8003892:	f000 854f 	beq.w	8004334 <_dtoa_r+0xb34>
 8003896:	f10a 0303 	add.w	r3, sl, #3
 800389a:	f000 bd49 	b.w	8004330 <_dtoa_r+0xb30>
 800389e:	ed9d 7b02 	vldr	d7, [sp, #8]
 80038a2:	2200      	movs	r2, #0
 80038a4:	ec51 0b17 	vmov	r0, r1, d7
 80038a8:	2300      	movs	r3, #0
 80038aa:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80038ae:	f7fd f913 	bl	8000ad8 <__aeabi_dcmpeq>
 80038b2:	4680      	mov	r8, r0
 80038b4:	b158      	cbz	r0, 80038ce <_dtoa_r+0xce>
 80038b6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80038b8:	2301      	movs	r3, #1
 80038ba:	6013      	str	r3, [r2, #0]
 80038bc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80038be:	b113      	cbz	r3, 80038c6 <_dtoa_r+0xc6>
 80038c0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80038c2:	4b84      	ldr	r3, [pc, #528]	@ (8003ad4 <_dtoa_r+0x2d4>)
 80038c4:	6013      	str	r3, [r2, #0]
 80038c6:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8003ae8 <_dtoa_r+0x2e8>
 80038ca:	f000 bd33 	b.w	8004334 <_dtoa_r+0xb34>
 80038ce:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80038d2:	aa16      	add	r2, sp, #88	@ 0x58
 80038d4:	a917      	add	r1, sp, #92	@ 0x5c
 80038d6:	4658      	mov	r0, fp
 80038d8:	f001 fa3a 	bl	8004d50 <__d2b>
 80038dc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80038e0:	4681      	mov	r9, r0
 80038e2:	2e00      	cmp	r6, #0
 80038e4:	d077      	beq.n	80039d6 <_dtoa_r+0x1d6>
 80038e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80038e8:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80038ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80038f0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80038f4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80038f8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80038fc:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8003900:	4619      	mov	r1, r3
 8003902:	2200      	movs	r2, #0
 8003904:	4b74      	ldr	r3, [pc, #464]	@ (8003ad8 <_dtoa_r+0x2d8>)
 8003906:	f7fc fcc7 	bl	8000298 <__aeabi_dsub>
 800390a:	a369      	add	r3, pc, #420	@ (adr r3, 8003ab0 <_dtoa_r+0x2b0>)
 800390c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003910:	f7fc fe7a 	bl	8000608 <__aeabi_dmul>
 8003914:	a368      	add	r3, pc, #416	@ (adr r3, 8003ab8 <_dtoa_r+0x2b8>)
 8003916:	e9d3 2300 	ldrd	r2, r3, [r3]
 800391a:	f7fc fcbf 	bl	800029c <__adddf3>
 800391e:	4604      	mov	r4, r0
 8003920:	4630      	mov	r0, r6
 8003922:	460d      	mov	r5, r1
 8003924:	f7fc fe06 	bl	8000534 <__aeabi_i2d>
 8003928:	a365      	add	r3, pc, #404	@ (adr r3, 8003ac0 <_dtoa_r+0x2c0>)
 800392a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800392e:	f7fc fe6b 	bl	8000608 <__aeabi_dmul>
 8003932:	4602      	mov	r2, r0
 8003934:	460b      	mov	r3, r1
 8003936:	4620      	mov	r0, r4
 8003938:	4629      	mov	r1, r5
 800393a:	f7fc fcaf 	bl	800029c <__adddf3>
 800393e:	4604      	mov	r4, r0
 8003940:	460d      	mov	r5, r1
 8003942:	f7fd f911 	bl	8000b68 <__aeabi_d2iz>
 8003946:	2200      	movs	r2, #0
 8003948:	4607      	mov	r7, r0
 800394a:	2300      	movs	r3, #0
 800394c:	4620      	mov	r0, r4
 800394e:	4629      	mov	r1, r5
 8003950:	f7fd f8cc 	bl	8000aec <__aeabi_dcmplt>
 8003954:	b140      	cbz	r0, 8003968 <_dtoa_r+0x168>
 8003956:	4638      	mov	r0, r7
 8003958:	f7fc fdec 	bl	8000534 <__aeabi_i2d>
 800395c:	4622      	mov	r2, r4
 800395e:	462b      	mov	r3, r5
 8003960:	f7fd f8ba 	bl	8000ad8 <__aeabi_dcmpeq>
 8003964:	b900      	cbnz	r0, 8003968 <_dtoa_r+0x168>
 8003966:	3f01      	subs	r7, #1
 8003968:	2f16      	cmp	r7, #22
 800396a:	d851      	bhi.n	8003a10 <_dtoa_r+0x210>
 800396c:	4b5b      	ldr	r3, [pc, #364]	@ (8003adc <_dtoa_r+0x2dc>)
 800396e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003972:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003976:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800397a:	f7fd f8b7 	bl	8000aec <__aeabi_dcmplt>
 800397e:	2800      	cmp	r0, #0
 8003980:	d048      	beq.n	8003a14 <_dtoa_r+0x214>
 8003982:	3f01      	subs	r7, #1
 8003984:	2300      	movs	r3, #0
 8003986:	9312      	str	r3, [sp, #72]	@ 0x48
 8003988:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800398a:	1b9b      	subs	r3, r3, r6
 800398c:	1e5a      	subs	r2, r3, #1
 800398e:	bf44      	itt	mi
 8003990:	f1c3 0801 	rsbmi	r8, r3, #1
 8003994:	2300      	movmi	r3, #0
 8003996:	9208      	str	r2, [sp, #32]
 8003998:	bf54      	ite	pl
 800399a:	f04f 0800 	movpl.w	r8, #0
 800399e:	9308      	strmi	r3, [sp, #32]
 80039a0:	2f00      	cmp	r7, #0
 80039a2:	db39      	blt.n	8003a18 <_dtoa_r+0x218>
 80039a4:	9b08      	ldr	r3, [sp, #32]
 80039a6:	970f      	str	r7, [sp, #60]	@ 0x3c
 80039a8:	443b      	add	r3, r7
 80039aa:	9308      	str	r3, [sp, #32]
 80039ac:	2300      	movs	r3, #0
 80039ae:	930a      	str	r3, [sp, #40]	@ 0x28
 80039b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039b2:	2b09      	cmp	r3, #9
 80039b4:	d864      	bhi.n	8003a80 <_dtoa_r+0x280>
 80039b6:	2b05      	cmp	r3, #5
 80039b8:	bfc4      	itt	gt
 80039ba:	3b04      	subgt	r3, #4
 80039bc:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80039be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039c0:	f1a3 0302 	sub.w	r3, r3, #2
 80039c4:	bfcc      	ite	gt
 80039c6:	2400      	movgt	r4, #0
 80039c8:	2401      	movle	r4, #1
 80039ca:	2b03      	cmp	r3, #3
 80039cc:	d863      	bhi.n	8003a96 <_dtoa_r+0x296>
 80039ce:	e8df f003 	tbb	[pc, r3]
 80039d2:	372a      	.short	0x372a
 80039d4:	5535      	.short	0x5535
 80039d6:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 80039da:	441e      	add	r6, r3
 80039dc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80039e0:	2b20      	cmp	r3, #32
 80039e2:	bfc1      	itttt	gt
 80039e4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80039e8:	409f      	lslgt	r7, r3
 80039ea:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80039ee:	fa24 f303 	lsrgt.w	r3, r4, r3
 80039f2:	bfd6      	itet	le
 80039f4:	f1c3 0320 	rsble	r3, r3, #32
 80039f8:	ea47 0003 	orrgt.w	r0, r7, r3
 80039fc:	fa04 f003 	lslle.w	r0, r4, r3
 8003a00:	f7fc fd88 	bl	8000514 <__aeabi_ui2d>
 8003a04:	2201      	movs	r2, #1
 8003a06:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003a0a:	3e01      	subs	r6, #1
 8003a0c:	9214      	str	r2, [sp, #80]	@ 0x50
 8003a0e:	e777      	b.n	8003900 <_dtoa_r+0x100>
 8003a10:	2301      	movs	r3, #1
 8003a12:	e7b8      	b.n	8003986 <_dtoa_r+0x186>
 8003a14:	9012      	str	r0, [sp, #72]	@ 0x48
 8003a16:	e7b7      	b.n	8003988 <_dtoa_r+0x188>
 8003a18:	427b      	negs	r3, r7
 8003a1a:	930a      	str	r3, [sp, #40]	@ 0x28
 8003a1c:	2300      	movs	r3, #0
 8003a1e:	eba8 0807 	sub.w	r8, r8, r7
 8003a22:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003a24:	e7c4      	b.n	80039b0 <_dtoa_r+0x1b0>
 8003a26:	2300      	movs	r3, #0
 8003a28:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003a2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	dc35      	bgt.n	8003a9c <_dtoa_r+0x29c>
 8003a30:	2301      	movs	r3, #1
 8003a32:	9300      	str	r3, [sp, #0]
 8003a34:	9307      	str	r3, [sp, #28]
 8003a36:	461a      	mov	r2, r3
 8003a38:	920e      	str	r2, [sp, #56]	@ 0x38
 8003a3a:	e00b      	b.n	8003a54 <_dtoa_r+0x254>
 8003a3c:	2301      	movs	r3, #1
 8003a3e:	e7f3      	b.n	8003a28 <_dtoa_r+0x228>
 8003a40:	2300      	movs	r3, #0
 8003a42:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003a44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a46:	18fb      	adds	r3, r7, r3
 8003a48:	9300      	str	r3, [sp, #0]
 8003a4a:	3301      	adds	r3, #1
 8003a4c:	2b01      	cmp	r3, #1
 8003a4e:	9307      	str	r3, [sp, #28]
 8003a50:	bfb8      	it	lt
 8003a52:	2301      	movlt	r3, #1
 8003a54:	f8db 001c 	ldr.w	r0, [fp, #28]
 8003a58:	2100      	movs	r1, #0
 8003a5a:	2204      	movs	r2, #4
 8003a5c:	f102 0514 	add.w	r5, r2, #20
 8003a60:	429d      	cmp	r5, r3
 8003a62:	d91f      	bls.n	8003aa4 <_dtoa_r+0x2a4>
 8003a64:	6041      	str	r1, [r0, #4]
 8003a66:	4658      	mov	r0, fp
 8003a68:	f000 fd8e 	bl	8004588 <_Balloc>
 8003a6c:	4682      	mov	sl, r0
 8003a6e:	2800      	cmp	r0, #0
 8003a70:	d13c      	bne.n	8003aec <_dtoa_r+0x2ec>
 8003a72:	4b1b      	ldr	r3, [pc, #108]	@ (8003ae0 <_dtoa_r+0x2e0>)
 8003a74:	4602      	mov	r2, r0
 8003a76:	f240 11af 	movw	r1, #431	@ 0x1af
 8003a7a:	e6d8      	b.n	800382e <_dtoa_r+0x2e>
 8003a7c:	2301      	movs	r3, #1
 8003a7e:	e7e0      	b.n	8003a42 <_dtoa_r+0x242>
 8003a80:	2401      	movs	r4, #1
 8003a82:	2300      	movs	r3, #0
 8003a84:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a86:	940b      	str	r4, [sp, #44]	@ 0x2c
 8003a88:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8003a8c:	9300      	str	r3, [sp, #0]
 8003a8e:	9307      	str	r3, [sp, #28]
 8003a90:	2200      	movs	r2, #0
 8003a92:	2312      	movs	r3, #18
 8003a94:	e7d0      	b.n	8003a38 <_dtoa_r+0x238>
 8003a96:	2301      	movs	r3, #1
 8003a98:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003a9a:	e7f5      	b.n	8003a88 <_dtoa_r+0x288>
 8003a9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a9e:	9300      	str	r3, [sp, #0]
 8003aa0:	9307      	str	r3, [sp, #28]
 8003aa2:	e7d7      	b.n	8003a54 <_dtoa_r+0x254>
 8003aa4:	3101      	adds	r1, #1
 8003aa6:	0052      	lsls	r2, r2, #1
 8003aa8:	e7d8      	b.n	8003a5c <_dtoa_r+0x25c>
 8003aaa:	bf00      	nop
 8003aac:	f3af 8000 	nop.w
 8003ab0:	636f4361 	.word	0x636f4361
 8003ab4:	3fd287a7 	.word	0x3fd287a7
 8003ab8:	8b60c8b3 	.word	0x8b60c8b3
 8003abc:	3fc68a28 	.word	0x3fc68a28
 8003ac0:	509f79fb 	.word	0x509f79fb
 8003ac4:	3fd34413 	.word	0x3fd34413
 8003ac8:	08006e86 	.word	0x08006e86
 8003acc:	08006e9d 	.word	0x08006e9d
 8003ad0:	7ff00000 	.word	0x7ff00000
 8003ad4:	08006e51 	.word	0x08006e51
 8003ad8:	3ff80000 	.word	0x3ff80000
 8003adc:	08006f98 	.word	0x08006f98
 8003ae0:	08006ef5 	.word	0x08006ef5
 8003ae4:	08006e82 	.word	0x08006e82
 8003ae8:	08006e50 	.word	0x08006e50
 8003aec:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003af0:	6018      	str	r0, [r3, #0]
 8003af2:	9b07      	ldr	r3, [sp, #28]
 8003af4:	2b0e      	cmp	r3, #14
 8003af6:	f200 80a4 	bhi.w	8003c42 <_dtoa_r+0x442>
 8003afa:	2c00      	cmp	r4, #0
 8003afc:	f000 80a1 	beq.w	8003c42 <_dtoa_r+0x442>
 8003b00:	2f00      	cmp	r7, #0
 8003b02:	dd33      	ble.n	8003b6c <_dtoa_r+0x36c>
 8003b04:	4bad      	ldr	r3, [pc, #692]	@ (8003dbc <_dtoa_r+0x5bc>)
 8003b06:	f007 020f 	and.w	r2, r7, #15
 8003b0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003b0e:	ed93 7b00 	vldr	d7, [r3]
 8003b12:	05f8      	lsls	r0, r7, #23
 8003b14:	ed8d 7b04 	vstr	d7, [sp, #16]
 8003b18:	ea4f 1427 	mov.w	r4, r7, asr #4
 8003b1c:	d516      	bpl.n	8003b4c <_dtoa_r+0x34c>
 8003b1e:	4ba8      	ldr	r3, [pc, #672]	@ (8003dc0 <_dtoa_r+0x5c0>)
 8003b20:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003b24:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003b28:	f7fc fe98 	bl	800085c <__aeabi_ddiv>
 8003b2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003b30:	f004 040f 	and.w	r4, r4, #15
 8003b34:	2603      	movs	r6, #3
 8003b36:	4da2      	ldr	r5, [pc, #648]	@ (8003dc0 <_dtoa_r+0x5c0>)
 8003b38:	b954      	cbnz	r4, 8003b50 <_dtoa_r+0x350>
 8003b3a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003b3e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003b42:	f7fc fe8b 	bl	800085c <__aeabi_ddiv>
 8003b46:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003b4a:	e028      	b.n	8003b9e <_dtoa_r+0x39e>
 8003b4c:	2602      	movs	r6, #2
 8003b4e:	e7f2      	b.n	8003b36 <_dtoa_r+0x336>
 8003b50:	07e1      	lsls	r1, r4, #31
 8003b52:	d508      	bpl.n	8003b66 <_dtoa_r+0x366>
 8003b54:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003b58:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003b5c:	f7fc fd54 	bl	8000608 <__aeabi_dmul>
 8003b60:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003b64:	3601      	adds	r6, #1
 8003b66:	1064      	asrs	r4, r4, #1
 8003b68:	3508      	adds	r5, #8
 8003b6a:	e7e5      	b.n	8003b38 <_dtoa_r+0x338>
 8003b6c:	f000 80d2 	beq.w	8003d14 <_dtoa_r+0x514>
 8003b70:	427c      	negs	r4, r7
 8003b72:	4b92      	ldr	r3, [pc, #584]	@ (8003dbc <_dtoa_r+0x5bc>)
 8003b74:	4d92      	ldr	r5, [pc, #584]	@ (8003dc0 <_dtoa_r+0x5c0>)
 8003b76:	f004 020f 	and.w	r2, r4, #15
 8003b7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003b7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b82:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003b86:	f7fc fd3f 	bl	8000608 <__aeabi_dmul>
 8003b8a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003b8e:	1124      	asrs	r4, r4, #4
 8003b90:	2300      	movs	r3, #0
 8003b92:	2602      	movs	r6, #2
 8003b94:	2c00      	cmp	r4, #0
 8003b96:	f040 80b2 	bne.w	8003cfe <_dtoa_r+0x4fe>
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d1d3      	bne.n	8003b46 <_dtoa_r+0x346>
 8003b9e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8003ba0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	f000 80b7 	beq.w	8003d18 <_dtoa_r+0x518>
 8003baa:	4b86      	ldr	r3, [pc, #536]	@ (8003dc4 <_dtoa_r+0x5c4>)
 8003bac:	2200      	movs	r2, #0
 8003bae:	4620      	mov	r0, r4
 8003bb0:	4629      	mov	r1, r5
 8003bb2:	f7fc ff9b 	bl	8000aec <__aeabi_dcmplt>
 8003bb6:	2800      	cmp	r0, #0
 8003bb8:	f000 80ae 	beq.w	8003d18 <_dtoa_r+0x518>
 8003bbc:	9b07      	ldr	r3, [sp, #28]
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	f000 80aa 	beq.w	8003d18 <_dtoa_r+0x518>
 8003bc4:	9b00      	ldr	r3, [sp, #0]
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	dd37      	ble.n	8003c3a <_dtoa_r+0x43a>
 8003bca:	1e7b      	subs	r3, r7, #1
 8003bcc:	9304      	str	r3, [sp, #16]
 8003bce:	4620      	mov	r0, r4
 8003bd0:	4b7d      	ldr	r3, [pc, #500]	@ (8003dc8 <_dtoa_r+0x5c8>)
 8003bd2:	2200      	movs	r2, #0
 8003bd4:	4629      	mov	r1, r5
 8003bd6:	f7fc fd17 	bl	8000608 <__aeabi_dmul>
 8003bda:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003bde:	9c00      	ldr	r4, [sp, #0]
 8003be0:	3601      	adds	r6, #1
 8003be2:	4630      	mov	r0, r6
 8003be4:	f7fc fca6 	bl	8000534 <__aeabi_i2d>
 8003be8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003bec:	f7fc fd0c 	bl	8000608 <__aeabi_dmul>
 8003bf0:	4b76      	ldr	r3, [pc, #472]	@ (8003dcc <_dtoa_r+0x5cc>)
 8003bf2:	2200      	movs	r2, #0
 8003bf4:	f7fc fb52 	bl	800029c <__adddf3>
 8003bf8:	4605      	mov	r5, r0
 8003bfa:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8003bfe:	2c00      	cmp	r4, #0
 8003c00:	f040 808d 	bne.w	8003d1e <_dtoa_r+0x51e>
 8003c04:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003c08:	4b71      	ldr	r3, [pc, #452]	@ (8003dd0 <_dtoa_r+0x5d0>)
 8003c0a:	2200      	movs	r2, #0
 8003c0c:	f7fc fb44 	bl	8000298 <__aeabi_dsub>
 8003c10:	4602      	mov	r2, r0
 8003c12:	460b      	mov	r3, r1
 8003c14:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003c18:	462a      	mov	r2, r5
 8003c1a:	4633      	mov	r3, r6
 8003c1c:	f7fc ff84 	bl	8000b28 <__aeabi_dcmpgt>
 8003c20:	2800      	cmp	r0, #0
 8003c22:	f040 828b 	bne.w	800413c <_dtoa_r+0x93c>
 8003c26:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003c2a:	462a      	mov	r2, r5
 8003c2c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8003c30:	f7fc ff5c 	bl	8000aec <__aeabi_dcmplt>
 8003c34:	2800      	cmp	r0, #0
 8003c36:	f040 8128 	bne.w	8003e8a <_dtoa_r+0x68a>
 8003c3a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8003c3e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8003c42:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	f2c0 815a 	blt.w	8003efe <_dtoa_r+0x6fe>
 8003c4a:	2f0e      	cmp	r7, #14
 8003c4c:	f300 8157 	bgt.w	8003efe <_dtoa_r+0x6fe>
 8003c50:	4b5a      	ldr	r3, [pc, #360]	@ (8003dbc <_dtoa_r+0x5bc>)
 8003c52:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003c56:	ed93 7b00 	vldr	d7, [r3]
 8003c5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	ed8d 7b00 	vstr	d7, [sp]
 8003c62:	da03      	bge.n	8003c6c <_dtoa_r+0x46c>
 8003c64:	9b07      	ldr	r3, [sp, #28]
 8003c66:	2b00      	cmp	r3, #0
 8003c68:	f340 8101 	ble.w	8003e6e <_dtoa_r+0x66e>
 8003c6c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003c70:	4656      	mov	r6, sl
 8003c72:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003c76:	4620      	mov	r0, r4
 8003c78:	4629      	mov	r1, r5
 8003c7a:	f7fc fdef 	bl	800085c <__aeabi_ddiv>
 8003c7e:	f7fc ff73 	bl	8000b68 <__aeabi_d2iz>
 8003c82:	4680      	mov	r8, r0
 8003c84:	f7fc fc56 	bl	8000534 <__aeabi_i2d>
 8003c88:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003c8c:	f7fc fcbc 	bl	8000608 <__aeabi_dmul>
 8003c90:	4602      	mov	r2, r0
 8003c92:	460b      	mov	r3, r1
 8003c94:	4620      	mov	r0, r4
 8003c96:	4629      	mov	r1, r5
 8003c98:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003c9c:	f7fc fafc 	bl	8000298 <__aeabi_dsub>
 8003ca0:	f806 4b01 	strb.w	r4, [r6], #1
 8003ca4:	9d07      	ldr	r5, [sp, #28]
 8003ca6:	eba6 040a 	sub.w	r4, r6, sl
 8003caa:	42a5      	cmp	r5, r4
 8003cac:	4602      	mov	r2, r0
 8003cae:	460b      	mov	r3, r1
 8003cb0:	f040 8117 	bne.w	8003ee2 <_dtoa_r+0x6e2>
 8003cb4:	f7fc faf2 	bl	800029c <__adddf3>
 8003cb8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003cbc:	4604      	mov	r4, r0
 8003cbe:	460d      	mov	r5, r1
 8003cc0:	f7fc ff32 	bl	8000b28 <__aeabi_dcmpgt>
 8003cc4:	2800      	cmp	r0, #0
 8003cc6:	f040 80f9 	bne.w	8003ebc <_dtoa_r+0x6bc>
 8003cca:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003cce:	4620      	mov	r0, r4
 8003cd0:	4629      	mov	r1, r5
 8003cd2:	f7fc ff01 	bl	8000ad8 <__aeabi_dcmpeq>
 8003cd6:	b118      	cbz	r0, 8003ce0 <_dtoa_r+0x4e0>
 8003cd8:	f018 0f01 	tst.w	r8, #1
 8003cdc:	f040 80ee 	bne.w	8003ebc <_dtoa_r+0x6bc>
 8003ce0:	4649      	mov	r1, r9
 8003ce2:	4658      	mov	r0, fp
 8003ce4:	f000 fc90 	bl	8004608 <_Bfree>
 8003ce8:	2300      	movs	r3, #0
 8003cea:	7033      	strb	r3, [r6, #0]
 8003cec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003cee:	3701      	adds	r7, #1
 8003cf0:	601f      	str	r7, [r3, #0]
 8003cf2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	f000 831d 	beq.w	8004334 <_dtoa_r+0xb34>
 8003cfa:	601e      	str	r6, [r3, #0]
 8003cfc:	e31a      	b.n	8004334 <_dtoa_r+0xb34>
 8003cfe:	07e2      	lsls	r2, r4, #31
 8003d00:	d505      	bpl.n	8003d0e <_dtoa_r+0x50e>
 8003d02:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003d06:	f7fc fc7f 	bl	8000608 <__aeabi_dmul>
 8003d0a:	3601      	adds	r6, #1
 8003d0c:	2301      	movs	r3, #1
 8003d0e:	1064      	asrs	r4, r4, #1
 8003d10:	3508      	adds	r5, #8
 8003d12:	e73f      	b.n	8003b94 <_dtoa_r+0x394>
 8003d14:	2602      	movs	r6, #2
 8003d16:	e742      	b.n	8003b9e <_dtoa_r+0x39e>
 8003d18:	9c07      	ldr	r4, [sp, #28]
 8003d1a:	9704      	str	r7, [sp, #16]
 8003d1c:	e761      	b.n	8003be2 <_dtoa_r+0x3e2>
 8003d1e:	4b27      	ldr	r3, [pc, #156]	@ (8003dbc <_dtoa_r+0x5bc>)
 8003d20:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003d22:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003d26:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003d2a:	4454      	add	r4, sl
 8003d2c:	2900      	cmp	r1, #0
 8003d2e:	d053      	beq.n	8003dd8 <_dtoa_r+0x5d8>
 8003d30:	4928      	ldr	r1, [pc, #160]	@ (8003dd4 <_dtoa_r+0x5d4>)
 8003d32:	2000      	movs	r0, #0
 8003d34:	f7fc fd92 	bl	800085c <__aeabi_ddiv>
 8003d38:	4633      	mov	r3, r6
 8003d3a:	462a      	mov	r2, r5
 8003d3c:	f7fc faac 	bl	8000298 <__aeabi_dsub>
 8003d40:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003d44:	4656      	mov	r6, sl
 8003d46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d4a:	f7fc ff0d 	bl	8000b68 <__aeabi_d2iz>
 8003d4e:	4605      	mov	r5, r0
 8003d50:	f7fc fbf0 	bl	8000534 <__aeabi_i2d>
 8003d54:	4602      	mov	r2, r0
 8003d56:	460b      	mov	r3, r1
 8003d58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d5c:	f7fc fa9c 	bl	8000298 <__aeabi_dsub>
 8003d60:	3530      	adds	r5, #48	@ 0x30
 8003d62:	4602      	mov	r2, r0
 8003d64:	460b      	mov	r3, r1
 8003d66:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003d6a:	f806 5b01 	strb.w	r5, [r6], #1
 8003d6e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003d72:	f7fc febb 	bl	8000aec <__aeabi_dcmplt>
 8003d76:	2800      	cmp	r0, #0
 8003d78:	d171      	bne.n	8003e5e <_dtoa_r+0x65e>
 8003d7a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003d7e:	4911      	ldr	r1, [pc, #68]	@ (8003dc4 <_dtoa_r+0x5c4>)
 8003d80:	2000      	movs	r0, #0
 8003d82:	f7fc fa89 	bl	8000298 <__aeabi_dsub>
 8003d86:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003d8a:	f7fc feaf 	bl	8000aec <__aeabi_dcmplt>
 8003d8e:	2800      	cmp	r0, #0
 8003d90:	f040 8095 	bne.w	8003ebe <_dtoa_r+0x6be>
 8003d94:	42a6      	cmp	r6, r4
 8003d96:	f43f af50 	beq.w	8003c3a <_dtoa_r+0x43a>
 8003d9a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003d9e:	4b0a      	ldr	r3, [pc, #40]	@ (8003dc8 <_dtoa_r+0x5c8>)
 8003da0:	2200      	movs	r2, #0
 8003da2:	f7fc fc31 	bl	8000608 <__aeabi_dmul>
 8003da6:	4b08      	ldr	r3, [pc, #32]	@ (8003dc8 <_dtoa_r+0x5c8>)
 8003da8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003dac:	2200      	movs	r2, #0
 8003dae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003db2:	f7fc fc29 	bl	8000608 <__aeabi_dmul>
 8003db6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003dba:	e7c4      	b.n	8003d46 <_dtoa_r+0x546>
 8003dbc:	08006f98 	.word	0x08006f98
 8003dc0:	08006f70 	.word	0x08006f70
 8003dc4:	3ff00000 	.word	0x3ff00000
 8003dc8:	40240000 	.word	0x40240000
 8003dcc:	401c0000 	.word	0x401c0000
 8003dd0:	40140000 	.word	0x40140000
 8003dd4:	3fe00000 	.word	0x3fe00000
 8003dd8:	4631      	mov	r1, r6
 8003dda:	4628      	mov	r0, r5
 8003ddc:	f7fc fc14 	bl	8000608 <__aeabi_dmul>
 8003de0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003de4:	9415      	str	r4, [sp, #84]	@ 0x54
 8003de6:	4656      	mov	r6, sl
 8003de8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003dec:	f7fc febc 	bl	8000b68 <__aeabi_d2iz>
 8003df0:	4605      	mov	r5, r0
 8003df2:	f7fc fb9f 	bl	8000534 <__aeabi_i2d>
 8003df6:	4602      	mov	r2, r0
 8003df8:	460b      	mov	r3, r1
 8003dfa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003dfe:	f7fc fa4b 	bl	8000298 <__aeabi_dsub>
 8003e02:	3530      	adds	r5, #48	@ 0x30
 8003e04:	f806 5b01 	strb.w	r5, [r6], #1
 8003e08:	4602      	mov	r2, r0
 8003e0a:	460b      	mov	r3, r1
 8003e0c:	42a6      	cmp	r6, r4
 8003e0e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003e12:	f04f 0200 	mov.w	r2, #0
 8003e16:	d124      	bne.n	8003e62 <_dtoa_r+0x662>
 8003e18:	4bac      	ldr	r3, [pc, #688]	@ (80040cc <_dtoa_r+0x8cc>)
 8003e1a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003e1e:	f7fc fa3d 	bl	800029c <__adddf3>
 8003e22:	4602      	mov	r2, r0
 8003e24:	460b      	mov	r3, r1
 8003e26:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e2a:	f7fc fe7d 	bl	8000b28 <__aeabi_dcmpgt>
 8003e2e:	2800      	cmp	r0, #0
 8003e30:	d145      	bne.n	8003ebe <_dtoa_r+0x6be>
 8003e32:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003e36:	49a5      	ldr	r1, [pc, #660]	@ (80040cc <_dtoa_r+0x8cc>)
 8003e38:	2000      	movs	r0, #0
 8003e3a:	f7fc fa2d 	bl	8000298 <__aeabi_dsub>
 8003e3e:	4602      	mov	r2, r0
 8003e40:	460b      	mov	r3, r1
 8003e42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e46:	f7fc fe51 	bl	8000aec <__aeabi_dcmplt>
 8003e4a:	2800      	cmp	r0, #0
 8003e4c:	f43f aef5 	beq.w	8003c3a <_dtoa_r+0x43a>
 8003e50:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8003e52:	1e73      	subs	r3, r6, #1
 8003e54:	9315      	str	r3, [sp, #84]	@ 0x54
 8003e56:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003e5a:	2b30      	cmp	r3, #48	@ 0x30
 8003e5c:	d0f8      	beq.n	8003e50 <_dtoa_r+0x650>
 8003e5e:	9f04      	ldr	r7, [sp, #16]
 8003e60:	e73e      	b.n	8003ce0 <_dtoa_r+0x4e0>
 8003e62:	4b9b      	ldr	r3, [pc, #620]	@ (80040d0 <_dtoa_r+0x8d0>)
 8003e64:	f7fc fbd0 	bl	8000608 <__aeabi_dmul>
 8003e68:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e6c:	e7bc      	b.n	8003de8 <_dtoa_r+0x5e8>
 8003e6e:	d10c      	bne.n	8003e8a <_dtoa_r+0x68a>
 8003e70:	4b98      	ldr	r3, [pc, #608]	@ (80040d4 <_dtoa_r+0x8d4>)
 8003e72:	2200      	movs	r2, #0
 8003e74:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003e78:	f7fc fbc6 	bl	8000608 <__aeabi_dmul>
 8003e7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003e80:	f7fc fe48 	bl	8000b14 <__aeabi_dcmpge>
 8003e84:	2800      	cmp	r0, #0
 8003e86:	f000 8157 	beq.w	8004138 <_dtoa_r+0x938>
 8003e8a:	2400      	movs	r4, #0
 8003e8c:	4625      	mov	r5, r4
 8003e8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003e90:	43db      	mvns	r3, r3
 8003e92:	9304      	str	r3, [sp, #16]
 8003e94:	4656      	mov	r6, sl
 8003e96:	2700      	movs	r7, #0
 8003e98:	4621      	mov	r1, r4
 8003e9a:	4658      	mov	r0, fp
 8003e9c:	f000 fbb4 	bl	8004608 <_Bfree>
 8003ea0:	2d00      	cmp	r5, #0
 8003ea2:	d0dc      	beq.n	8003e5e <_dtoa_r+0x65e>
 8003ea4:	b12f      	cbz	r7, 8003eb2 <_dtoa_r+0x6b2>
 8003ea6:	42af      	cmp	r7, r5
 8003ea8:	d003      	beq.n	8003eb2 <_dtoa_r+0x6b2>
 8003eaa:	4639      	mov	r1, r7
 8003eac:	4658      	mov	r0, fp
 8003eae:	f000 fbab 	bl	8004608 <_Bfree>
 8003eb2:	4629      	mov	r1, r5
 8003eb4:	4658      	mov	r0, fp
 8003eb6:	f000 fba7 	bl	8004608 <_Bfree>
 8003eba:	e7d0      	b.n	8003e5e <_dtoa_r+0x65e>
 8003ebc:	9704      	str	r7, [sp, #16]
 8003ebe:	4633      	mov	r3, r6
 8003ec0:	461e      	mov	r6, r3
 8003ec2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003ec6:	2a39      	cmp	r2, #57	@ 0x39
 8003ec8:	d107      	bne.n	8003eda <_dtoa_r+0x6da>
 8003eca:	459a      	cmp	sl, r3
 8003ecc:	d1f8      	bne.n	8003ec0 <_dtoa_r+0x6c0>
 8003ece:	9a04      	ldr	r2, [sp, #16]
 8003ed0:	3201      	adds	r2, #1
 8003ed2:	9204      	str	r2, [sp, #16]
 8003ed4:	2230      	movs	r2, #48	@ 0x30
 8003ed6:	f88a 2000 	strb.w	r2, [sl]
 8003eda:	781a      	ldrb	r2, [r3, #0]
 8003edc:	3201      	adds	r2, #1
 8003ede:	701a      	strb	r2, [r3, #0]
 8003ee0:	e7bd      	b.n	8003e5e <_dtoa_r+0x65e>
 8003ee2:	4b7b      	ldr	r3, [pc, #492]	@ (80040d0 <_dtoa_r+0x8d0>)
 8003ee4:	2200      	movs	r2, #0
 8003ee6:	f7fc fb8f 	bl	8000608 <__aeabi_dmul>
 8003eea:	2200      	movs	r2, #0
 8003eec:	2300      	movs	r3, #0
 8003eee:	4604      	mov	r4, r0
 8003ef0:	460d      	mov	r5, r1
 8003ef2:	f7fc fdf1 	bl	8000ad8 <__aeabi_dcmpeq>
 8003ef6:	2800      	cmp	r0, #0
 8003ef8:	f43f aebb 	beq.w	8003c72 <_dtoa_r+0x472>
 8003efc:	e6f0      	b.n	8003ce0 <_dtoa_r+0x4e0>
 8003efe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003f00:	2a00      	cmp	r2, #0
 8003f02:	f000 80db 	beq.w	80040bc <_dtoa_r+0x8bc>
 8003f06:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003f08:	2a01      	cmp	r2, #1
 8003f0a:	f300 80bf 	bgt.w	800408c <_dtoa_r+0x88c>
 8003f0e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8003f10:	2a00      	cmp	r2, #0
 8003f12:	f000 80b7 	beq.w	8004084 <_dtoa_r+0x884>
 8003f16:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003f1a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003f1c:	4646      	mov	r6, r8
 8003f1e:	9a08      	ldr	r2, [sp, #32]
 8003f20:	2101      	movs	r1, #1
 8003f22:	441a      	add	r2, r3
 8003f24:	4658      	mov	r0, fp
 8003f26:	4498      	add	r8, r3
 8003f28:	9208      	str	r2, [sp, #32]
 8003f2a:	f000 fc6b 	bl	8004804 <__i2b>
 8003f2e:	4605      	mov	r5, r0
 8003f30:	b15e      	cbz	r6, 8003f4a <_dtoa_r+0x74a>
 8003f32:	9b08      	ldr	r3, [sp, #32]
 8003f34:	2b00      	cmp	r3, #0
 8003f36:	dd08      	ble.n	8003f4a <_dtoa_r+0x74a>
 8003f38:	42b3      	cmp	r3, r6
 8003f3a:	9a08      	ldr	r2, [sp, #32]
 8003f3c:	bfa8      	it	ge
 8003f3e:	4633      	movge	r3, r6
 8003f40:	eba8 0803 	sub.w	r8, r8, r3
 8003f44:	1af6      	subs	r6, r6, r3
 8003f46:	1ad3      	subs	r3, r2, r3
 8003f48:	9308      	str	r3, [sp, #32]
 8003f4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003f4c:	b1f3      	cbz	r3, 8003f8c <_dtoa_r+0x78c>
 8003f4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003f50:	2b00      	cmp	r3, #0
 8003f52:	f000 80b7 	beq.w	80040c4 <_dtoa_r+0x8c4>
 8003f56:	b18c      	cbz	r4, 8003f7c <_dtoa_r+0x77c>
 8003f58:	4629      	mov	r1, r5
 8003f5a:	4622      	mov	r2, r4
 8003f5c:	4658      	mov	r0, fp
 8003f5e:	f000 fd11 	bl	8004984 <__pow5mult>
 8003f62:	464a      	mov	r2, r9
 8003f64:	4601      	mov	r1, r0
 8003f66:	4605      	mov	r5, r0
 8003f68:	4658      	mov	r0, fp
 8003f6a:	f000 fc61 	bl	8004830 <__multiply>
 8003f6e:	4649      	mov	r1, r9
 8003f70:	9004      	str	r0, [sp, #16]
 8003f72:	4658      	mov	r0, fp
 8003f74:	f000 fb48 	bl	8004608 <_Bfree>
 8003f78:	9b04      	ldr	r3, [sp, #16]
 8003f7a:	4699      	mov	r9, r3
 8003f7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003f7e:	1b1a      	subs	r2, r3, r4
 8003f80:	d004      	beq.n	8003f8c <_dtoa_r+0x78c>
 8003f82:	4649      	mov	r1, r9
 8003f84:	4658      	mov	r0, fp
 8003f86:	f000 fcfd 	bl	8004984 <__pow5mult>
 8003f8a:	4681      	mov	r9, r0
 8003f8c:	2101      	movs	r1, #1
 8003f8e:	4658      	mov	r0, fp
 8003f90:	f000 fc38 	bl	8004804 <__i2b>
 8003f94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003f96:	4604      	mov	r4, r0
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	f000 81cf 	beq.w	800433c <_dtoa_r+0xb3c>
 8003f9e:	461a      	mov	r2, r3
 8003fa0:	4601      	mov	r1, r0
 8003fa2:	4658      	mov	r0, fp
 8003fa4:	f000 fcee 	bl	8004984 <__pow5mult>
 8003fa8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003faa:	2b01      	cmp	r3, #1
 8003fac:	4604      	mov	r4, r0
 8003fae:	f300 8095 	bgt.w	80040dc <_dtoa_r+0x8dc>
 8003fb2:	9b02      	ldr	r3, [sp, #8]
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	f040 8087 	bne.w	80040c8 <_dtoa_r+0x8c8>
 8003fba:	9b03      	ldr	r3, [sp, #12]
 8003fbc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	f040 8089 	bne.w	80040d8 <_dtoa_r+0x8d8>
 8003fc6:	9b03      	ldr	r3, [sp, #12]
 8003fc8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003fcc:	0d1b      	lsrs	r3, r3, #20
 8003fce:	051b      	lsls	r3, r3, #20
 8003fd0:	b12b      	cbz	r3, 8003fde <_dtoa_r+0x7de>
 8003fd2:	9b08      	ldr	r3, [sp, #32]
 8003fd4:	3301      	adds	r3, #1
 8003fd6:	9308      	str	r3, [sp, #32]
 8003fd8:	f108 0801 	add.w	r8, r8, #1
 8003fdc:	2301      	movs	r3, #1
 8003fde:	930a      	str	r3, [sp, #40]	@ 0x28
 8003fe0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	f000 81b0 	beq.w	8004348 <_dtoa_r+0xb48>
 8003fe8:	6923      	ldr	r3, [r4, #16]
 8003fea:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003fee:	6918      	ldr	r0, [r3, #16]
 8003ff0:	f000 fbbc 	bl	800476c <__hi0bits>
 8003ff4:	f1c0 0020 	rsb	r0, r0, #32
 8003ff8:	9b08      	ldr	r3, [sp, #32]
 8003ffa:	4418      	add	r0, r3
 8003ffc:	f010 001f 	ands.w	r0, r0, #31
 8004000:	d077      	beq.n	80040f2 <_dtoa_r+0x8f2>
 8004002:	f1c0 0320 	rsb	r3, r0, #32
 8004006:	2b04      	cmp	r3, #4
 8004008:	dd6b      	ble.n	80040e2 <_dtoa_r+0x8e2>
 800400a:	9b08      	ldr	r3, [sp, #32]
 800400c:	f1c0 001c 	rsb	r0, r0, #28
 8004010:	4403      	add	r3, r0
 8004012:	4480      	add	r8, r0
 8004014:	4406      	add	r6, r0
 8004016:	9308      	str	r3, [sp, #32]
 8004018:	f1b8 0f00 	cmp.w	r8, #0
 800401c:	dd05      	ble.n	800402a <_dtoa_r+0x82a>
 800401e:	4649      	mov	r1, r9
 8004020:	4642      	mov	r2, r8
 8004022:	4658      	mov	r0, fp
 8004024:	f000 fd08 	bl	8004a38 <__lshift>
 8004028:	4681      	mov	r9, r0
 800402a:	9b08      	ldr	r3, [sp, #32]
 800402c:	2b00      	cmp	r3, #0
 800402e:	dd05      	ble.n	800403c <_dtoa_r+0x83c>
 8004030:	4621      	mov	r1, r4
 8004032:	461a      	mov	r2, r3
 8004034:	4658      	mov	r0, fp
 8004036:	f000 fcff 	bl	8004a38 <__lshift>
 800403a:	4604      	mov	r4, r0
 800403c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800403e:	2b00      	cmp	r3, #0
 8004040:	d059      	beq.n	80040f6 <_dtoa_r+0x8f6>
 8004042:	4621      	mov	r1, r4
 8004044:	4648      	mov	r0, r9
 8004046:	f000 fd63 	bl	8004b10 <__mcmp>
 800404a:	2800      	cmp	r0, #0
 800404c:	da53      	bge.n	80040f6 <_dtoa_r+0x8f6>
 800404e:	1e7b      	subs	r3, r7, #1
 8004050:	9304      	str	r3, [sp, #16]
 8004052:	4649      	mov	r1, r9
 8004054:	2300      	movs	r3, #0
 8004056:	220a      	movs	r2, #10
 8004058:	4658      	mov	r0, fp
 800405a:	f000 faf7 	bl	800464c <__multadd>
 800405e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004060:	4681      	mov	r9, r0
 8004062:	2b00      	cmp	r3, #0
 8004064:	f000 8172 	beq.w	800434c <_dtoa_r+0xb4c>
 8004068:	2300      	movs	r3, #0
 800406a:	4629      	mov	r1, r5
 800406c:	220a      	movs	r2, #10
 800406e:	4658      	mov	r0, fp
 8004070:	f000 faec 	bl	800464c <__multadd>
 8004074:	9b00      	ldr	r3, [sp, #0]
 8004076:	2b00      	cmp	r3, #0
 8004078:	4605      	mov	r5, r0
 800407a:	dc67      	bgt.n	800414c <_dtoa_r+0x94c>
 800407c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800407e:	2b02      	cmp	r3, #2
 8004080:	dc41      	bgt.n	8004106 <_dtoa_r+0x906>
 8004082:	e063      	b.n	800414c <_dtoa_r+0x94c>
 8004084:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8004086:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800408a:	e746      	b.n	8003f1a <_dtoa_r+0x71a>
 800408c:	9b07      	ldr	r3, [sp, #28]
 800408e:	1e5c      	subs	r4, r3, #1
 8004090:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004092:	42a3      	cmp	r3, r4
 8004094:	bfbf      	itttt	lt
 8004096:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8004098:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 800409a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800409c:	1ae3      	sublt	r3, r4, r3
 800409e:	bfb4      	ite	lt
 80040a0:	18d2      	addlt	r2, r2, r3
 80040a2:	1b1c      	subge	r4, r3, r4
 80040a4:	9b07      	ldr	r3, [sp, #28]
 80040a6:	bfbc      	itt	lt
 80040a8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 80040aa:	2400      	movlt	r4, #0
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	bfb5      	itete	lt
 80040b0:	eba8 0603 	sublt.w	r6, r8, r3
 80040b4:	9b07      	ldrge	r3, [sp, #28]
 80040b6:	2300      	movlt	r3, #0
 80040b8:	4646      	movge	r6, r8
 80040ba:	e730      	b.n	8003f1e <_dtoa_r+0x71e>
 80040bc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80040be:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80040c0:	4646      	mov	r6, r8
 80040c2:	e735      	b.n	8003f30 <_dtoa_r+0x730>
 80040c4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80040c6:	e75c      	b.n	8003f82 <_dtoa_r+0x782>
 80040c8:	2300      	movs	r3, #0
 80040ca:	e788      	b.n	8003fde <_dtoa_r+0x7de>
 80040cc:	3fe00000 	.word	0x3fe00000
 80040d0:	40240000 	.word	0x40240000
 80040d4:	40140000 	.word	0x40140000
 80040d8:	9b02      	ldr	r3, [sp, #8]
 80040da:	e780      	b.n	8003fde <_dtoa_r+0x7de>
 80040dc:	2300      	movs	r3, #0
 80040de:	930a      	str	r3, [sp, #40]	@ 0x28
 80040e0:	e782      	b.n	8003fe8 <_dtoa_r+0x7e8>
 80040e2:	d099      	beq.n	8004018 <_dtoa_r+0x818>
 80040e4:	9a08      	ldr	r2, [sp, #32]
 80040e6:	331c      	adds	r3, #28
 80040e8:	441a      	add	r2, r3
 80040ea:	4498      	add	r8, r3
 80040ec:	441e      	add	r6, r3
 80040ee:	9208      	str	r2, [sp, #32]
 80040f0:	e792      	b.n	8004018 <_dtoa_r+0x818>
 80040f2:	4603      	mov	r3, r0
 80040f4:	e7f6      	b.n	80040e4 <_dtoa_r+0x8e4>
 80040f6:	9b07      	ldr	r3, [sp, #28]
 80040f8:	9704      	str	r7, [sp, #16]
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	dc20      	bgt.n	8004140 <_dtoa_r+0x940>
 80040fe:	9300      	str	r3, [sp, #0]
 8004100:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004102:	2b02      	cmp	r3, #2
 8004104:	dd1e      	ble.n	8004144 <_dtoa_r+0x944>
 8004106:	9b00      	ldr	r3, [sp, #0]
 8004108:	2b00      	cmp	r3, #0
 800410a:	f47f aec0 	bne.w	8003e8e <_dtoa_r+0x68e>
 800410e:	4621      	mov	r1, r4
 8004110:	2205      	movs	r2, #5
 8004112:	4658      	mov	r0, fp
 8004114:	f000 fa9a 	bl	800464c <__multadd>
 8004118:	4601      	mov	r1, r0
 800411a:	4604      	mov	r4, r0
 800411c:	4648      	mov	r0, r9
 800411e:	f000 fcf7 	bl	8004b10 <__mcmp>
 8004122:	2800      	cmp	r0, #0
 8004124:	f77f aeb3 	ble.w	8003e8e <_dtoa_r+0x68e>
 8004128:	4656      	mov	r6, sl
 800412a:	2331      	movs	r3, #49	@ 0x31
 800412c:	f806 3b01 	strb.w	r3, [r6], #1
 8004130:	9b04      	ldr	r3, [sp, #16]
 8004132:	3301      	adds	r3, #1
 8004134:	9304      	str	r3, [sp, #16]
 8004136:	e6ae      	b.n	8003e96 <_dtoa_r+0x696>
 8004138:	9c07      	ldr	r4, [sp, #28]
 800413a:	9704      	str	r7, [sp, #16]
 800413c:	4625      	mov	r5, r4
 800413e:	e7f3      	b.n	8004128 <_dtoa_r+0x928>
 8004140:	9b07      	ldr	r3, [sp, #28]
 8004142:	9300      	str	r3, [sp, #0]
 8004144:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004146:	2b00      	cmp	r3, #0
 8004148:	f000 8104 	beq.w	8004354 <_dtoa_r+0xb54>
 800414c:	2e00      	cmp	r6, #0
 800414e:	dd05      	ble.n	800415c <_dtoa_r+0x95c>
 8004150:	4629      	mov	r1, r5
 8004152:	4632      	mov	r2, r6
 8004154:	4658      	mov	r0, fp
 8004156:	f000 fc6f 	bl	8004a38 <__lshift>
 800415a:	4605      	mov	r5, r0
 800415c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800415e:	2b00      	cmp	r3, #0
 8004160:	d05a      	beq.n	8004218 <_dtoa_r+0xa18>
 8004162:	6869      	ldr	r1, [r5, #4]
 8004164:	4658      	mov	r0, fp
 8004166:	f000 fa0f 	bl	8004588 <_Balloc>
 800416a:	4606      	mov	r6, r0
 800416c:	b928      	cbnz	r0, 800417a <_dtoa_r+0x97a>
 800416e:	4b84      	ldr	r3, [pc, #528]	@ (8004380 <_dtoa_r+0xb80>)
 8004170:	4602      	mov	r2, r0
 8004172:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8004176:	f7ff bb5a 	b.w	800382e <_dtoa_r+0x2e>
 800417a:	692a      	ldr	r2, [r5, #16]
 800417c:	3202      	adds	r2, #2
 800417e:	0092      	lsls	r2, r2, #2
 8004180:	f105 010c 	add.w	r1, r5, #12
 8004184:	300c      	adds	r0, #12
 8004186:	f002 f94b 	bl	8006420 <memcpy>
 800418a:	2201      	movs	r2, #1
 800418c:	4631      	mov	r1, r6
 800418e:	4658      	mov	r0, fp
 8004190:	f000 fc52 	bl	8004a38 <__lshift>
 8004194:	f10a 0301 	add.w	r3, sl, #1
 8004198:	9307      	str	r3, [sp, #28]
 800419a:	9b00      	ldr	r3, [sp, #0]
 800419c:	4453      	add	r3, sl
 800419e:	930b      	str	r3, [sp, #44]	@ 0x2c
 80041a0:	9b02      	ldr	r3, [sp, #8]
 80041a2:	f003 0301 	and.w	r3, r3, #1
 80041a6:	462f      	mov	r7, r5
 80041a8:	930a      	str	r3, [sp, #40]	@ 0x28
 80041aa:	4605      	mov	r5, r0
 80041ac:	9b07      	ldr	r3, [sp, #28]
 80041ae:	4621      	mov	r1, r4
 80041b0:	3b01      	subs	r3, #1
 80041b2:	4648      	mov	r0, r9
 80041b4:	9300      	str	r3, [sp, #0]
 80041b6:	f7ff fa99 	bl	80036ec <quorem>
 80041ba:	4639      	mov	r1, r7
 80041bc:	9002      	str	r0, [sp, #8]
 80041be:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80041c2:	4648      	mov	r0, r9
 80041c4:	f000 fca4 	bl	8004b10 <__mcmp>
 80041c8:	462a      	mov	r2, r5
 80041ca:	9008      	str	r0, [sp, #32]
 80041cc:	4621      	mov	r1, r4
 80041ce:	4658      	mov	r0, fp
 80041d0:	f000 fcba 	bl	8004b48 <__mdiff>
 80041d4:	68c2      	ldr	r2, [r0, #12]
 80041d6:	4606      	mov	r6, r0
 80041d8:	bb02      	cbnz	r2, 800421c <_dtoa_r+0xa1c>
 80041da:	4601      	mov	r1, r0
 80041dc:	4648      	mov	r0, r9
 80041de:	f000 fc97 	bl	8004b10 <__mcmp>
 80041e2:	4602      	mov	r2, r0
 80041e4:	4631      	mov	r1, r6
 80041e6:	4658      	mov	r0, fp
 80041e8:	920e      	str	r2, [sp, #56]	@ 0x38
 80041ea:	f000 fa0d 	bl	8004608 <_Bfree>
 80041ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80041f0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80041f2:	9e07      	ldr	r6, [sp, #28]
 80041f4:	ea43 0102 	orr.w	r1, r3, r2
 80041f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80041fa:	4319      	orrs	r1, r3
 80041fc:	d110      	bne.n	8004220 <_dtoa_r+0xa20>
 80041fe:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8004202:	d029      	beq.n	8004258 <_dtoa_r+0xa58>
 8004204:	9b08      	ldr	r3, [sp, #32]
 8004206:	2b00      	cmp	r3, #0
 8004208:	dd02      	ble.n	8004210 <_dtoa_r+0xa10>
 800420a:	9b02      	ldr	r3, [sp, #8]
 800420c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8004210:	9b00      	ldr	r3, [sp, #0]
 8004212:	f883 8000 	strb.w	r8, [r3]
 8004216:	e63f      	b.n	8003e98 <_dtoa_r+0x698>
 8004218:	4628      	mov	r0, r5
 800421a:	e7bb      	b.n	8004194 <_dtoa_r+0x994>
 800421c:	2201      	movs	r2, #1
 800421e:	e7e1      	b.n	80041e4 <_dtoa_r+0x9e4>
 8004220:	9b08      	ldr	r3, [sp, #32]
 8004222:	2b00      	cmp	r3, #0
 8004224:	db04      	blt.n	8004230 <_dtoa_r+0xa30>
 8004226:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004228:	430b      	orrs	r3, r1
 800422a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800422c:	430b      	orrs	r3, r1
 800422e:	d120      	bne.n	8004272 <_dtoa_r+0xa72>
 8004230:	2a00      	cmp	r2, #0
 8004232:	dded      	ble.n	8004210 <_dtoa_r+0xa10>
 8004234:	4649      	mov	r1, r9
 8004236:	2201      	movs	r2, #1
 8004238:	4658      	mov	r0, fp
 800423a:	f000 fbfd 	bl	8004a38 <__lshift>
 800423e:	4621      	mov	r1, r4
 8004240:	4681      	mov	r9, r0
 8004242:	f000 fc65 	bl	8004b10 <__mcmp>
 8004246:	2800      	cmp	r0, #0
 8004248:	dc03      	bgt.n	8004252 <_dtoa_r+0xa52>
 800424a:	d1e1      	bne.n	8004210 <_dtoa_r+0xa10>
 800424c:	f018 0f01 	tst.w	r8, #1
 8004250:	d0de      	beq.n	8004210 <_dtoa_r+0xa10>
 8004252:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8004256:	d1d8      	bne.n	800420a <_dtoa_r+0xa0a>
 8004258:	9a00      	ldr	r2, [sp, #0]
 800425a:	2339      	movs	r3, #57	@ 0x39
 800425c:	7013      	strb	r3, [r2, #0]
 800425e:	4633      	mov	r3, r6
 8004260:	461e      	mov	r6, r3
 8004262:	3b01      	subs	r3, #1
 8004264:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8004268:	2a39      	cmp	r2, #57	@ 0x39
 800426a:	d052      	beq.n	8004312 <_dtoa_r+0xb12>
 800426c:	3201      	adds	r2, #1
 800426e:	701a      	strb	r2, [r3, #0]
 8004270:	e612      	b.n	8003e98 <_dtoa_r+0x698>
 8004272:	2a00      	cmp	r2, #0
 8004274:	dd07      	ble.n	8004286 <_dtoa_r+0xa86>
 8004276:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800427a:	d0ed      	beq.n	8004258 <_dtoa_r+0xa58>
 800427c:	9a00      	ldr	r2, [sp, #0]
 800427e:	f108 0301 	add.w	r3, r8, #1
 8004282:	7013      	strb	r3, [r2, #0]
 8004284:	e608      	b.n	8003e98 <_dtoa_r+0x698>
 8004286:	9b07      	ldr	r3, [sp, #28]
 8004288:	9a07      	ldr	r2, [sp, #28]
 800428a:	f803 8c01 	strb.w	r8, [r3, #-1]
 800428e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004290:	4293      	cmp	r3, r2
 8004292:	d028      	beq.n	80042e6 <_dtoa_r+0xae6>
 8004294:	4649      	mov	r1, r9
 8004296:	2300      	movs	r3, #0
 8004298:	220a      	movs	r2, #10
 800429a:	4658      	mov	r0, fp
 800429c:	f000 f9d6 	bl	800464c <__multadd>
 80042a0:	42af      	cmp	r7, r5
 80042a2:	4681      	mov	r9, r0
 80042a4:	f04f 0300 	mov.w	r3, #0
 80042a8:	f04f 020a 	mov.w	r2, #10
 80042ac:	4639      	mov	r1, r7
 80042ae:	4658      	mov	r0, fp
 80042b0:	d107      	bne.n	80042c2 <_dtoa_r+0xac2>
 80042b2:	f000 f9cb 	bl	800464c <__multadd>
 80042b6:	4607      	mov	r7, r0
 80042b8:	4605      	mov	r5, r0
 80042ba:	9b07      	ldr	r3, [sp, #28]
 80042bc:	3301      	adds	r3, #1
 80042be:	9307      	str	r3, [sp, #28]
 80042c0:	e774      	b.n	80041ac <_dtoa_r+0x9ac>
 80042c2:	f000 f9c3 	bl	800464c <__multadd>
 80042c6:	4629      	mov	r1, r5
 80042c8:	4607      	mov	r7, r0
 80042ca:	2300      	movs	r3, #0
 80042cc:	220a      	movs	r2, #10
 80042ce:	4658      	mov	r0, fp
 80042d0:	f000 f9bc 	bl	800464c <__multadd>
 80042d4:	4605      	mov	r5, r0
 80042d6:	e7f0      	b.n	80042ba <_dtoa_r+0xaba>
 80042d8:	9b00      	ldr	r3, [sp, #0]
 80042da:	2b00      	cmp	r3, #0
 80042dc:	bfcc      	ite	gt
 80042de:	461e      	movgt	r6, r3
 80042e0:	2601      	movle	r6, #1
 80042e2:	4456      	add	r6, sl
 80042e4:	2700      	movs	r7, #0
 80042e6:	4649      	mov	r1, r9
 80042e8:	2201      	movs	r2, #1
 80042ea:	4658      	mov	r0, fp
 80042ec:	f000 fba4 	bl	8004a38 <__lshift>
 80042f0:	4621      	mov	r1, r4
 80042f2:	4681      	mov	r9, r0
 80042f4:	f000 fc0c 	bl	8004b10 <__mcmp>
 80042f8:	2800      	cmp	r0, #0
 80042fa:	dcb0      	bgt.n	800425e <_dtoa_r+0xa5e>
 80042fc:	d102      	bne.n	8004304 <_dtoa_r+0xb04>
 80042fe:	f018 0f01 	tst.w	r8, #1
 8004302:	d1ac      	bne.n	800425e <_dtoa_r+0xa5e>
 8004304:	4633      	mov	r3, r6
 8004306:	461e      	mov	r6, r3
 8004308:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800430c:	2a30      	cmp	r2, #48	@ 0x30
 800430e:	d0fa      	beq.n	8004306 <_dtoa_r+0xb06>
 8004310:	e5c2      	b.n	8003e98 <_dtoa_r+0x698>
 8004312:	459a      	cmp	sl, r3
 8004314:	d1a4      	bne.n	8004260 <_dtoa_r+0xa60>
 8004316:	9b04      	ldr	r3, [sp, #16]
 8004318:	3301      	adds	r3, #1
 800431a:	9304      	str	r3, [sp, #16]
 800431c:	2331      	movs	r3, #49	@ 0x31
 800431e:	f88a 3000 	strb.w	r3, [sl]
 8004322:	e5b9      	b.n	8003e98 <_dtoa_r+0x698>
 8004324:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8004326:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8004384 <_dtoa_r+0xb84>
 800432a:	b11b      	cbz	r3, 8004334 <_dtoa_r+0xb34>
 800432c:	f10a 0308 	add.w	r3, sl, #8
 8004330:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8004332:	6013      	str	r3, [r2, #0]
 8004334:	4650      	mov	r0, sl
 8004336:	b019      	add	sp, #100	@ 0x64
 8004338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800433c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800433e:	2b01      	cmp	r3, #1
 8004340:	f77f ae37 	ble.w	8003fb2 <_dtoa_r+0x7b2>
 8004344:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004346:	930a      	str	r3, [sp, #40]	@ 0x28
 8004348:	2001      	movs	r0, #1
 800434a:	e655      	b.n	8003ff8 <_dtoa_r+0x7f8>
 800434c:	9b00      	ldr	r3, [sp, #0]
 800434e:	2b00      	cmp	r3, #0
 8004350:	f77f aed6 	ble.w	8004100 <_dtoa_r+0x900>
 8004354:	4656      	mov	r6, sl
 8004356:	4621      	mov	r1, r4
 8004358:	4648      	mov	r0, r9
 800435a:	f7ff f9c7 	bl	80036ec <quorem>
 800435e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8004362:	f806 8b01 	strb.w	r8, [r6], #1
 8004366:	9b00      	ldr	r3, [sp, #0]
 8004368:	eba6 020a 	sub.w	r2, r6, sl
 800436c:	4293      	cmp	r3, r2
 800436e:	ddb3      	ble.n	80042d8 <_dtoa_r+0xad8>
 8004370:	4649      	mov	r1, r9
 8004372:	2300      	movs	r3, #0
 8004374:	220a      	movs	r2, #10
 8004376:	4658      	mov	r0, fp
 8004378:	f000 f968 	bl	800464c <__multadd>
 800437c:	4681      	mov	r9, r0
 800437e:	e7ea      	b.n	8004356 <_dtoa_r+0xb56>
 8004380:	08006ef5 	.word	0x08006ef5
 8004384:	08006e79 	.word	0x08006e79

08004388 <_free_r>:
 8004388:	b538      	push	{r3, r4, r5, lr}
 800438a:	4605      	mov	r5, r0
 800438c:	2900      	cmp	r1, #0
 800438e:	d041      	beq.n	8004414 <_free_r+0x8c>
 8004390:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004394:	1f0c      	subs	r4, r1, #4
 8004396:	2b00      	cmp	r3, #0
 8004398:	bfb8      	it	lt
 800439a:	18e4      	addlt	r4, r4, r3
 800439c:	f000 f8e8 	bl	8004570 <__malloc_lock>
 80043a0:	4a1d      	ldr	r2, [pc, #116]	@ (8004418 <_free_r+0x90>)
 80043a2:	6813      	ldr	r3, [r2, #0]
 80043a4:	b933      	cbnz	r3, 80043b4 <_free_r+0x2c>
 80043a6:	6063      	str	r3, [r4, #4]
 80043a8:	6014      	str	r4, [r2, #0]
 80043aa:	4628      	mov	r0, r5
 80043ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80043b0:	f000 b8e4 	b.w	800457c <__malloc_unlock>
 80043b4:	42a3      	cmp	r3, r4
 80043b6:	d908      	bls.n	80043ca <_free_r+0x42>
 80043b8:	6820      	ldr	r0, [r4, #0]
 80043ba:	1821      	adds	r1, r4, r0
 80043bc:	428b      	cmp	r3, r1
 80043be:	bf01      	itttt	eq
 80043c0:	6819      	ldreq	r1, [r3, #0]
 80043c2:	685b      	ldreq	r3, [r3, #4]
 80043c4:	1809      	addeq	r1, r1, r0
 80043c6:	6021      	streq	r1, [r4, #0]
 80043c8:	e7ed      	b.n	80043a6 <_free_r+0x1e>
 80043ca:	461a      	mov	r2, r3
 80043cc:	685b      	ldr	r3, [r3, #4]
 80043ce:	b10b      	cbz	r3, 80043d4 <_free_r+0x4c>
 80043d0:	42a3      	cmp	r3, r4
 80043d2:	d9fa      	bls.n	80043ca <_free_r+0x42>
 80043d4:	6811      	ldr	r1, [r2, #0]
 80043d6:	1850      	adds	r0, r2, r1
 80043d8:	42a0      	cmp	r0, r4
 80043da:	d10b      	bne.n	80043f4 <_free_r+0x6c>
 80043dc:	6820      	ldr	r0, [r4, #0]
 80043de:	4401      	add	r1, r0
 80043e0:	1850      	adds	r0, r2, r1
 80043e2:	4283      	cmp	r3, r0
 80043e4:	6011      	str	r1, [r2, #0]
 80043e6:	d1e0      	bne.n	80043aa <_free_r+0x22>
 80043e8:	6818      	ldr	r0, [r3, #0]
 80043ea:	685b      	ldr	r3, [r3, #4]
 80043ec:	6053      	str	r3, [r2, #4]
 80043ee:	4408      	add	r0, r1
 80043f0:	6010      	str	r0, [r2, #0]
 80043f2:	e7da      	b.n	80043aa <_free_r+0x22>
 80043f4:	d902      	bls.n	80043fc <_free_r+0x74>
 80043f6:	230c      	movs	r3, #12
 80043f8:	602b      	str	r3, [r5, #0]
 80043fa:	e7d6      	b.n	80043aa <_free_r+0x22>
 80043fc:	6820      	ldr	r0, [r4, #0]
 80043fe:	1821      	adds	r1, r4, r0
 8004400:	428b      	cmp	r3, r1
 8004402:	bf04      	itt	eq
 8004404:	6819      	ldreq	r1, [r3, #0]
 8004406:	685b      	ldreq	r3, [r3, #4]
 8004408:	6063      	str	r3, [r4, #4]
 800440a:	bf04      	itt	eq
 800440c:	1809      	addeq	r1, r1, r0
 800440e:	6021      	streq	r1, [r4, #0]
 8004410:	6054      	str	r4, [r2, #4]
 8004412:	e7ca      	b.n	80043aa <_free_r+0x22>
 8004414:	bd38      	pop	{r3, r4, r5, pc}
 8004416:	bf00      	nop
 8004418:	200003f4 	.word	0x200003f4

0800441c <malloc>:
 800441c:	4b02      	ldr	r3, [pc, #8]	@ (8004428 <malloc+0xc>)
 800441e:	4601      	mov	r1, r0
 8004420:	6818      	ldr	r0, [r3, #0]
 8004422:	f000 b825 	b.w	8004470 <_malloc_r>
 8004426:	bf00      	nop
 8004428:	20000018 	.word	0x20000018

0800442c <sbrk_aligned>:
 800442c:	b570      	push	{r4, r5, r6, lr}
 800442e:	4e0f      	ldr	r6, [pc, #60]	@ (800446c <sbrk_aligned+0x40>)
 8004430:	460c      	mov	r4, r1
 8004432:	6831      	ldr	r1, [r6, #0]
 8004434:	4605      	mov	r5, r0
 8004436:	b911      	cbnz	r1, 800443e <sbrk_aligned+0x12>
 8004438:	f001 ffe2 	bl	8006400 <_sbrk_r>
 800443c:	6030      	str	r0, [r6, #0]
 800443e:	4621      	mov	r1, r4
 8004440:	4628      	mov	r0, r5
 8004442:	f001 ffdd 	bl	8006400 <_sbrk_r>
 8004446:	1c43      	adds	r3, r0, #1
 8004448:	d103      	bne.n	8004452 <sbrk_aligned+0x26>
 800444a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800444e:	4620      	mov	r0, r4
 8004450:	bd70      	pop	{r4, r5, r6, pc}
 8004452:	1cc4      	adds	r4, r0, #3
 8004454:	f024 0403 	bic.w	r4, r4, #3
 8004458:	42a0      	cmp	r0, r4
 800445a:	d0f8      	beq.n	800444e <sbrk_aligned+0x22>
 800445c:	1a21      	subs	r1, r4, r0
 800445e:	4628      	mov	r0, r5
 8004460:	f001 ffce 	bl	8006400 <_sbrk_r>
 8004464:	3001      	adds	r0, #1
 8004466:	d1f2      	bne.n	800444e <sbrk_aligned+0x22>
 8004468:	e7ef      	b.n	800444a <sbrk_aligned+0x1e>
 800446a:	bf00      	nop
 800446c:	200003f0 	.word	0x200003f0

08004470 <_malloc_r>:
 8004470:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004474:	1ccd      	adds	r5, r1, #3
 8004476:	f025 0503 	bic.w	r5, r5, #3
 800447a:	3508      	adds	r5, #8
 800447c:	2d0c      	cmp	r5, #12
 800447e:	bf38      	it	cc
 8004480:	250c      	movcc	r5, #12
 8004482:	2d00      	cmp	r5, #0
 8004484:	4606      	mov	r6, r0
 8004486:	db01      	blt.n	800448c <_malloc_r+0x1c>
 8004488:	42a9      	cmp	r1, r5
 800448a:	d904      	bls.n	8004496 <_malloc_r+0x26>
 800448c:	230c      	movs	r3, #12
 800448e:	6033      	str	r3, [r6, #0]
 8004490:	2000      	movs	r0, #0
 8004492:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004496:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800456c <_malloc_r+0xfc>
 800449a:	f000 f869 	bl	8004570 <__malloc_lock>
 800449e:	f8d8 3000 	ldr.w	r3, [r8]
 80044a2:	461c      	mov	r4, r3
 80044a4:	bb44      	cbnz	r4, 80044f8 <_malloc_r+0x88>
 80044a6:	4629      	mov	r1, r5
 80044a8:	4630      	mov	r0, r6
 80044aa:	f7ff ffbf 	bl	800442c <sbrk_aligned>
 80044ae:	1c43      	adds	r3, r0, #1
 80044b0:	4604      	mov	r4, r0
 80044b2:	d158      	bne.n	8004566 <_malloc_r+0xf6>
 80044b4:	f8d8 4000 	ldr.w	r4, [r8]
 80044b8:	4627      	mov	r7, r4
 80044ba:	2f00      	cmp	r7, #0
 80044bc:	d143      	bne.n	8004546 <_malloc_r+0xd6>
 80044be:	2c00      	cmp	r4, #0
 80044c0:	d04b      	beq.n	800455a <_malloc_r+0xea>
 80044c2:	6823      	ldr	r3, [r4, #0]
 80044c4:	4639      	mov	r1, r7
 80044c6:	4630      	mov	r0, r6
 80044c8:	eb04 0903 	add.w	r9, r4, r3
 80044cc:	f001 ff98 	bl	8006400 <_sbrk_r>
 80044d0:	4581      	cmp	r9, r0
 80044d2:	d142      	bne.n	800455a <_malloc_r+0xea>
 80044d4:	6821      	ldr	r1, [r4, #0]
 80044d6:	1a6d      	subs	r5, r5, r1
 80044d8:	4629      	mov	r1, r5
 80044da:	4630      	mov	r0, r6
 80044dc:	f7ff ffa6 	bl	800442c <sbrk_aligned>
 80044e0:	3001      	adds	r0, #1
 80044e2:	d03a      	beq.n	800455a <_malloc_r+0xea>
 80044e4:	6823      	ldr	r3, [r4, #0]
 80044e6:	442b      	add	r3, r5
 80044e8:	6023      	str	r3, [r4, #0]
 80044ea:	f8d8 3000 	ldr.w	r3, [r8]
 80044ee:	685a      	ldr	r2, [r3, #4]
 80044f0:	bb62      	cbnz	r2, 800454c <_malloc_r+0xdc>
 80044f2:	f8c8 7000 	str.w	r7, [r8]
 80044f6:	e00f      	b.n	8004518 <_malloc_r+0xa8>
 80044f8:	6822      	ldr	r2, [r4, #0]
 80044fa:	1b52      	subs	r2, r2, r5
 80044fc:	d420      	bmi.n	8004540 <_malloc_r+0xd0>
 80044fe:	2a0b      	cmp	r2, #11
 8004500:	d917      	bls.n	8004532 <_malloc_r+0xc2>
 8004502:	1961      	adds	r1, r4, r5
 8004504:	42a3      	cmp	r3, r4
 8004506:	6025      	str	r5, [r4, #0]
 8004508:	bf18      	it	ne
 800450a:	6059      	strne	r1, [r3, #4]
 800450c:	6863      	ldr	r3, [r4, #4]
 800450e:	bf08      	it	eq
 8004510:	f8c8 1000 	streq.w	r1, [r8]
 8004514:	5162      	str	r2, [r4, r5]
 8004516:	604b      	str	r3, [r1, #4]
 8004518:	4630      	mov	r0, r6
 800451a:	f000 f82f 	bl	800457c <__malloc_unlock>
 800451e:	f104 000b 	add.w	r0, r4, #11
 8004522:	1d23      	adds	r3, r4, #4
 8004524:	f020 0007 	bic.w	r0, r0, #7
 8004528:	1ac2      	subs	r2, r0, r3
 800452a:	bf1c      	itt	ne
 800452c:	1a1b      	subne	r3, r3, r0
 800452e:	50a3      	strne	r3, [r4, r2]
 8004530:	e7af      	b.n	8004492 <_malloc_r+0x22>
 8004532:	6862      	ldr	r2, [r4, #4]
 8004534:	42a3      	cmp	r3, r4
 8004536:	bf0c      	ite	eq
 8004538:	f8c8 2000 	streq.w	r2, [r8]
 800453c:	605a      	strne	r2, [r3, #4]
 800453e:	e7eb      	b.n	8004518 <_malloc_r+0xa8>
 8004540:	4623      	mov	r3, r4
 8004542:	6864      	ldr	r4, [r4, #4]
 8004544:	e7ae      	b.n	80044a4 <_malloc_r+0x34>
 8004546:	463c      	mov	r4, r7
 8004548:	687f      	ldr	r7, [r7, #4]
 800454a:	e7b6      	b.n	80044ba <_malloc_r+0x4a>
 800454c:	461a      	mov	r2, r3
 800454e:	685b      	ldr	r3, [r3, #4]
 8004550:	42a3      	cmp	r3, r4
 8004552:	d1fb      	bne.n	800454c <_malloc_r+0xdc>
 8004554:	2300      	movs	r3, #0
 8004556:	6053      	str	r3, [r2, #4]
 8004558:	e7de      	b.n	8004518 <_malloc_r+0xa8>
 800455a:	230c      	movs	r3, #12
 800455c:	6033      	str	r3, [r6, #0]
 800455e:	4630      	mov	r0, r6
 8004560:	f000 f80c 	bl	800457c <__malloc_unlock>
 8004564:	e794      	b.n	8004490 <_malloc_r+0x20>
 8004566:	6005      	str	r5, [r0, #0]
 8004568:	e7d6      	b.n	8004518 <_malloc_r+0xa8>
 800456a:	bf00      	nop
 800456c:	200003f4 	.word	0x200003f4

08004570 <__malloc_lock>:
 8004570:	4801      	ldr	r0, [pc, #4]	@ (8004578 <__malloc_lock+0x8>)
 8004572:	f7ff b8b2 	b.w	80036da <__retarget_lock_acquire_recursive>
 8004576:	bf00      	nop
 8004578:	200003ec 	.word	0x200003ec

0800457c <__malloc_unlock>:
 800457c:	4801      	ldr	r0, [pc, #4]	@ (8004584 <__malloc_unlock+0x8>)
 800457e:	f7ff b8ad 	b.w	80036dc <__retarget_lock_release_recursive>
 8004582:	bf00      	nop
 8004584:	200003ec 	.word	0x200003ec

08004588 <_Balloc>:
 8004588:	b570      	push	{r4, r5, r6, lr}
 800458a:	69c6      	ldr	r6, [r0, #28]
 800458c:	4604      	mov	r4, r0
 800458e:	460d      	mov	r5, r1
 8004590:	b976      	cbnz	r6, 80045b0 <_Balloc+0x28>
 8004592:	2010      	movs	r0, #16
 8004594:	f7ff ff42 	bl	800441c <malloc>
 8004598:	4602      	mov	r2, r0
 800459a:	61e0      	str	r0, [r4, #28]
 800459c:	b920      	cbnz	r0, 80045a8 <_Balloc+0x20>
 800459e:	4b18      	ldr	r3, [pc, #96]	@ (8004600 <_Balloc+0x78>)
 80045a0:	4818      	ldr	r0, [pc, #96]	@ (8004604 <_Balloc+0x7c>)
 80045a2:	216b      	movs	r1, #107	@ 0x6b
 80045a4:	f001 ff54 	bl	8006450 <__assert_func>
 80045a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80045ac:	6006      	str	r6, [r0, #0]
 80045ae:	60c6      	str	r6, [r0, #12]
 80045b0:	69e6      	ldr	r6, [r4, #28]
 80045b2:	68f3      	ldr	r3, [r6, #12]
 80045b4:	b183      	cbz	r3, 80045d8 <_Balloc+0x50>
 80045b6:	69e3      	ldr	r3, [r4, #28]
 80045b8:	68db      	ldr	r3, [r3, #12]
 80045ba:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80045be:	b9b8      	cbnz	r0, 80045f0 <_Balloc+0x68>
 80045c0:	2101      	movs	r1, #1
 80045c2:	fa01 f605 	lsl.w	r6, r1, r5
 80045c6:	1d72      	adds	r2, r6, #5
 80045c8:	0092      	lsls	r2, r2, #2
 80045ca:	4620      	mov	r0, r4
 80045cc:	f001 ff5e 	bl	800648c <_calloc_r>
 80045d0:	b160      	cbz	r0, 80045ec <_Balloc+0x64>
 80045d2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80045d6:	e00e      	b.n	80045f6 <_Balloc+0x6e>
 80045d8:	2221      	movs	r2, #33	@ 0x21
 80045da:	2104      	movs	r1, #4
 80045dc:	4620      	mov	r0, r4
 80045de:	f001 ff55 	bl	800648c <_calloc_r>
 80045e2:	69e3      	ldr	r3, [r4, #28]
 80045e4:	60f0      	str	r0, [r6, #12]
 80045e6:	68db      	ldr	r3, [r3, #12]
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d1e4      	bne.n	80045b6 <_Balloc+0x2e>
 80045ec:	2000      	movs	r0, #0
 80045ee:	bd70      	pop	{r4, r5, r6, pc}
 80045f0:	6802      	ldr	r2, [r0, #0]
 80045f2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80045f6:	2300      	movs	r3, #0
 80045f8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80045fc:	e7f7      	b.n	80045ee <_Balloc+0x66>
 80045fe:	bf00      	nop
 8004600:	08006e86 	.word	0x08006e86
 8004604:	08006f06 	.word	0x08006f06

08004608 <_Bfree>:
 8004608:	b570      	push	{r4, r5, r6, lr}
 800460a:	69c6      	ldr	r6, [r0, #28]
 800460c:	4605      	mov	r5, r0
 800460e:	460c      	mov	r4, r1
 8004610:	b976      	cbnz	r6, 8004630 <_Bfree+0x28>
 8004612:	2010      	movs	r0, #16
 8004614:	f7ff ff02 	bl	800441c <malloc>
 8004618:	4602      	mov	r2, r0
 800461a:	61e8      	str	r0, [r5, #28]
 800461c:	b920      	cbnz	r0, 8004628 <_Bfree+0x20>
 800461e:	4b09      	ldr	r3, [pc, #36]	@ (8004644 <_Bfree+0x3c>)
 8004620:	4809      	ldr	r0, [pc, #36]	@ (8004648 <_Bfree+0x40>)
 8004622:	218f      	movs	r1, #143	@ 0x8f
 8004624:	f001 ff14 	bl	8006450 <__assert_func>
 8004628:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800462c:	6006      	str	r6, [r0, #0]
 800462e:	60c6      	str	r6, [r0, #12]
 8004630:	b13c      	cbz	r4, 8004642 <_Bfree+0x3a>
 8004632:	69eb      	ldr	r3, [r5, #28]
 8004634:	6862      	ldr	r2, [r4, #4]
 8004636:	68db      	ldr	r3, [r3, #12]
 8004638:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800463c:	6021      	str	r1, [r4, #0]
 800463e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004642:	bd70      	pop	{r4, r5, r6, pc}
 8004644:	08006e86 	.word	0x08006e86
 8004648:	08006f06 	.word	0x08006f06

0800464c <__multadd>:
 800464c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004650:	690d      	ldr	r5, [r1, #16]
 8004652:	4607      	mov	r7, r0
 8004654:	460c      	mov	r4, r1
 8004656:	461e      	mov	r6, r3
 8004658:	f101 0c14 	add.w	ip, r1, #20
 800465c:	2000      	movs	r0, #0
 800465e:	f8dc 3000 	ldr.w	r3, [ip]
 8004662:	b299      	uxth	r1, r3
 8004664:	fb02 6101 	mla	r1, r2, r1, r6
 8004668:	0c1e      	lsrs	r6, r3, #16
 800466a:	0c0b      	lsrs	r3, r1, #16
 800466c:	fb02 3306 	mla	r3, r2, r6, r3
 8004670:	b289      	uxth	r1, r1
 8004672:	3001      	adds	r0, #1
 8004674:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004678:	4285      	cmp	r5, r0
 800467a:	f84c 1b04 	str.w	r1, [ip], #4
 800467e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004682:	dcec      	bgt.n	800465e <__multadd+0x12>
 8004684:	b30e      	cbz	r6, 80046ca <__multadd+0x7e>
 8004686:	68a3      	ldr	r3, [r4, #8]
 8004688:	42ab      	cmp	r3, r5
 800468a:	dc19      	bgt.n	80046c0 <__multadd+0x74>
 800468c:	6861      	ldr	r1, [r4, #4]
 800468e:	4638      	mov	r0, r7
 8004690:	3101      	adds	r1, #1
 8004692:	f7ff ff79 	bl	8004588 <_Balloc>
 8004696:	4680      	mov	r8, r0
 8004698:	b928      	cbnz	r0, 80046a6 <__multadd+0x5a>
 800469a:	4602      	mov	r2, r0
 800469c:	4b0c      	ldr	r3, [pc, #48]	@ (80046d0 <__multadd+0x84>)
 800469e:	480d      	ldr	r0, [pc, #52]	@ (80046d4 <__multadd+0x88>)
 80046a0:	21ba      	movs	r1, #186	@ 0xba
 80046a2:	f001 fed5 	bl	8006450 <__assert_func>
 80046a6:	6922      	ldr	r2, [r4, #16]
 80046a8:	3202      	adds	r2, #2
 80046aa:	f104 010c 	add.w	r1, r4, #12
 80046ae:	0092      	lsls	r2, r2, #2
 80046b0:	300c      	adds	r0, #12
 80046b2:	f001 feb5 	bl	8006420 <memcpy>
 80046b6:	4621      	mov	r1, r4
 80046b8:	4638      	mov	r0, r7
 80046ba:	f7ff ffa5 	bl	8004608 <_Bfree>
 80046be:	4644      	mov	r4, r8
 80046c0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80046c4:	3501      	adds	r5, #1
 80046c6:	615e      	str	r6, [r3, #20]
 80046c8:	6125      	str	r5, [r4, #16]
 80046ca:	4620      	mov	r0, r4
 80046cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046d0:	08006ef5 	.word	0x08006ef5
 80046d4:	08006f06 	.word	0x08006f06

080046d8 <__s2b>:
 80046d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80046dc:	460c      	mov	r4, r1
 80046de:	4615      	mov	r5, r2
 80046e0:	461f      	mov	r7, r3
 80046e2:	2209      	movs	r2, #9
 80046e4:	3308      	adds	r3, #8
 80046e6:	4606      	mov	r6, r0
 80046e8:	fb93 f3f2 	sdiv	r3, r3, r2
 80046ec:	2100      	movs	r1, #0
 80046ee:	2201      	movs	r2, #1
 80046f0:	429a      	cmp	r2, r3
 80046f2:	db09      	blt.n	8004708 <__s2b+0x30>
 80046f4:	4630      	mov	r0, r6
 80046f6:	f7ff ff47 	bl	8004588 <_Balloc>
 80046fa:	b940      	cbnz	r0, 800470e <__s2b+0x36>
 80046fc:	4602      	mov	r2, r0
 80046fe:	4b19      	ldr	r3, [pc, #100]	@ (8004764 <__s2b+0x8c>)
 8004700:	4819      	ldr	r0, [pc, #100]	@ (8004768 <__s2b+0x90>)
 8004702:	21d3      	movs	r1, #211	@ 0xd3
 8004704:	f001 fea4 	bl	8006450 <__assert_func>
 8004708:	0052      	lsls	r2, r2, #1
 800470a:	3101      	adds	r1, #1
 800470c:	e7f0      	b.n	80046f0 <__s2b+0x18>
 800470e:	9b08      	ldr	r3, [sp, #32]
 8004710:	6143      	str	r3, [r0, #20]
 8004712:	2d09      	cmp	r5, #9
 8004714:	f04f 0301 	mov.w	r3, #1
 8004718:	6103      	str	r3, [r0, #16]
 800471a:	dd16      	ble.n	800474a <__s2b+0x72>
 800471c:	f104 0909 	add.w	r9, r4, #9
 8004720:	46c8      	mov	r8, r9
 8004722:	442c      	add	r4, r5
 8004724:	f818 3b01 	ldrb.w	r3, [r8], #1
 8004728:	4601      	mov	r1, r0
 800472a:	3b30      	subs	r3, #48	@ 0x30
 800472c:	220a      	movs	r2, #10
 800472e:	4630      	mov	r0, r6
 8004730:	f7ff ff8c 	bl	800464c <__multadd>
 8004734:	45a0      	cmp	r8, r4
 8004736:	d1f5      	bne.n	8004724 <__s2b+0x4c>
 8004738:	f1a5 0408 	sub.w	r4, r5, #8
 800473c:	444c      	add	r4, r9
 800473e:	1b2d      	subs	r5, r5, r4
 8004740:	1963      	adds	r3, r4, r5
 8004742:	42bb      	cmp	r3, r7
 8004744:	db04      	blt.n	8004750 <__s2b+0x78>
 8004746:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800474a:	340a      	adds	r4, #10
 800474c:	2509      	movs	r5, #9
 800474e:	e7f6      	b.n	800473e <__s2b+0x66>
 8004750:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004754:	4601      	mov	r1, r0
 8004756:	3b30      	subs	r3, #48	@ 0x30
 8004758:	220a      	movs	r2, #10
 800475a:	4630      	mov	r0, r6
 800475c:	f7ff ff76 	bl	800464c <__multadd>
 8004760:	e7ee      	b.n	8004740 <__s2b+0x68>
 8004762:	bf00      	nop
 8004764:	08006ef5 	.word	0x08006ef5
 8004768:	08006f06 	.word	0x08006f06

0800476c <__hi0bits>:
 800476c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8004770:	4603      	mov	r3, r0
 8004772:	bf36      	itet	cc
 8004774:	0403      	lslcc	r3, r0, #16
 8004776:	2000      	movcs	r0, #0
 8004778:	2010      	movcc	r0, #16
 800477a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800477e:	bf3c      	itt	cc
 8004780:	021b      	lslcc	r3, r3, #8
 8004782:	3008      	addcc	r0, #8
 8004784:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004788:	bf3c      	itt	cc
 800478a:	011b      	lslcc	r3, r3, #4
 800478c:	3004      	addcc	r0, #4
 800478e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004792:	bf3c      	itt	cc
 8004794:	009b      	lslcc	r3, r3, #2
 8004796:	3002      	addcc	r0, #2
 8004798:	2b00      	cmp	r3, #0
 800479a:	db05      	blt.n	80047a8 <__hi0bits+0x3c>
 800479c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80047a0:	f100 0001 	add.w	r0, r0, #1
 80047a4:	bf08      	it	eq
 80047a6:	2020      	moveq	r0, #32
 80047a8:	4770      	bx	lr

080047aa <__lo0bits>:
 80047aa:	6803      	ldr	r3, [r0, #0]
 80047ac:	4602      	mov	r2, r0
 80047ae:	f013 0007 	ands.w	r0, r3, #7
 80047b2:	d00b      	beq.n	80047cc <__lo0bits+0x22>
 80047b4:	07d9      	lsls	r1, r3, #31
 80047b6:	d421      	bmi.n	80047fc <__lo0bits+0x52>
 80047b8:	0798      	lsls	r0, r3, #30
 80047ba:	bf49      	itett	mi
 80047bc:	085b      	lsrmi	r3, r3, #1
 80047be:	089b      	lsrpl	r3, r3, #2
 80047c0:	2001      	movmi	r0, #1
 80047c2:	6013      	strmi	r3, [r2, #0]
 80047c4:	bf5c      	itt	pl
 80047c6:	6013      	strpl	r3, [r2, #0]
 80047c8:	2002      	movpl	r0, #2
 80047ca:	4770      	bx	lr
 80047cc:	b299      	uxth	r1, r3
 80047ce:	b909      	cbnz	r1, 80047d4 <__lo0bits+0x2a>
 80047d0:	0c1b      	lsrs	r3, r3, #16
 80047d2:	2010      	movs	r0, #16
 80047d4:	b2d9      	uxtb	r1, r3
 80047d6:	b909      	cbnz	r1, 80047dc <__lo0bits+0x32>
 80047d8:	3008      	adds	r0, #8
 80047da:	0a1b      	lsrs	r3, r3, #8
 80047dc:	0719      	lsls	r1, r3, #28
 80047de:	bf04      	itt	eq
 80047e0:	091b      	lsreq	r3, r3, #4
 80047e2:	3004      	addeq	r0, #4
 80047e4:	0799      	lsls	r1, r3, #30
 80047e6:	bf04      	itt	eq
 80047e8:	089b      	lsreq	r3, r3, #2
 80047ea:	3002      	addeq	r0, #2
 80047ec:	07d9      	lsls	r1, r3, #31
 80047ee:	d403      	bmi.n	80047f8 <__lo0bits+0x4e>
 80047f0:	085b      	lsrs	r3, r3, #1
 80047f2:	f100 0001 	add.w	r0, r0, #1
 80047f6:	d003      	beq.n	8004800 <__lo0bits+0x56>
 80047f8:	6013      	str	r3, [r2, #0]
 80047fa:	4770      	bx	lr
 80047fc:	2000      	movs	r0, #0
 80047fe:	4770      	bx	lr
 8004800:	2020      	movs	r0, #32
 8004802:	4770      	bx	lr

08004804 <__i2b>:
 8004804:	b510      	push	{r4, lr}
 8004806:	460c      	mov	r4, r1
 8004808:	2101      	movs	r1, #1
 800480a:	f7ff febd 	bl	8004588 <_Balloc>
 800480e:	4602      	mov	r2, r0
 8004810:	b928      	cbnz	r0, 800481e <__i2b+0x1a>
 8004812:	4b05      	ldr	r3, [pc, #20]	@ (8004828 <__i2b+0x24>)
 8004814:	4805      	ldr	r0, [pc, #20]	@ (800482c <__i2b+0x28>)
 8004816:	f240 1145 	movw	r1, #325	@ 0x145
 800481a:	f001 fe19 	bl	8006450 <__assert_func>
 800481e:	2301      	movs	r3, #1
 8004820:	6144      	str	r4, [r0, #20]
 8004822:	6103      	str	r3, [r0, #16]
 8004824:	bd10      	pop	{r4, pc}
 8004826:	bf00      	nop
 8004828:	08006ef5 	.word	0x08006ef5
 800482c:	08006f06 	.word	0x08006f06

08004830 <__multiply>:
 8004830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004834:	4614      	mov	r4, r2
 8004836:	690a      	ldr	r2, [r1, #16]
 8004838:	6923      	ldr	r3, [r4, #16]
 800483a:	429a      	cmp	r2, r3
 800483c:	bfa8      	it	ge
 800483e:	4623      	movge	r3, r4
 8004840:	460f      	mov	r7, r1
 8004842:	bfa4      	itt	ge
 8004844:	460c      	movge	r4, r1
 8004846:	461f      	movge	r7, r3
 8004848:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800484c:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8004850:	68a3      	ldr	r3, [r4, #8]
 8004852:	6861      	ldr	r1, [r4, #4]
 8004854:	eb0a 0609 	add.w	r6, sl, r9
 8004858:	42b3      	cmp	r3, r6
 800485a:	b085      	sub	sp, #20
 800485c:	bfb8      	it	lt
 800485e:	3101      	addlt	r1, #1
 8004860:	f7ff fe92 	bl	8004588 <_Balloc>
 8004864:	b930      	cbnz	r0, 8004874 <__multiply+0x44>
 8004866:	4602      	mov	r2, r0
 8004868:	4b44      	ldr	r3, [pc, #272]	@ (800497c <__multiply+0x14c>)
 800486a:	4845      	ldr	r0, [pc, #276]	@ (8004980 <__multiply+0x150>)
 800486c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004870:	f001 fdee 	bl	8006450 <__assert_func>
 8004874:	f100 0514 	add.w	r5, r0, #20
 8004878:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800487c:	462b      	mov	r3, r5
 800487e:	2200      	movs	r2, #0
 8004880:	4543      	cmp	r3, r8
 8004882:	d321      	bcc.n	80048c8 <__multiply+0x98>
 8004884:	f107 0114 	add.w	r1, r7, #20
 8004888:	f104 0214 	add.w	r2, r4, #20
 800488c:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8004890:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8004894:	9302      	str	r3, [sp, #8]
 8004896:	1b13      	subs	r3, r2, r4
 8004898:	3b15      	subs	r3, #21
 800489a:	f023 0303 	bic.w	r3, r3, #3
 800489e:	3304      	adds	r3, #4
 80048a0:	f104 0715 	add.w	r7, r4, #21
 80048a4:	42ba      	cmp	r2, r7
 80048a6:	bf38      	it	cc
 80048a8:	2304      	movcc	r3, #4
 80048aa:	9301      	str	r3, [sp, #4]
 80048ac:	9b02      	ldr	r3, [sp, #8]
 80048ae:	9103      	str	r1, [sp, #12]
 80048b0:	428b      	cmp	r3, r1
 80048b2:	d80c      	bhi.n	80048ce <__multiply+0x9e>
 80048b4:	2e00      	cmp	r6, #0
 80048b6:	dd03      	ble.n	80048c0 <__multiply+0x90>
 80048b8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80048bc:	2b00      	cmp	r3, #0
 80048be:	d05b      	beq.n	8004978 <__multiply+0x148>
 80048c0:	6106      	str	r6, [r0, #16]
 80048c2:	b005      	add	sp, #20
 80048c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048c8:	f843 2b04 	str.w	r2, [r3], #4
 80048cc:	e7d8      	b.n	8004880 <__multiply+0x50>
 80048ce:	f8b1 a000 	ldrh.w	sl, [r1]
 80048d2:	f1ba 0f00 	cmp.w	sl, #0
 80048d6:	d024      	beq.n	8004922 <__multiply+0xf2>
 80048d8:	f104 0e14 	add.w	lr, r4, #20
 80048dc:	46a9      	mov	r9, r5
 80048de:	f04f 0c00 	mov.w	ip, #0
 80048e2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80048e6:	f8d9 3000 	ldr.w	r3, [r9]
 80048ea:	fa1f fb87 	uxth.w	fp, r7
 80048ee:	b29b      	uxth	r3, r3
 80048f0:	fb0a 330b 	mla	r3, sl, fp, r3
 80048f4:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 80048f8:	f8d9 7000 	ldr.w	r7, [r9]
 80048fc:	4463      	add	r3, ip
 80048fe:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8004902:	fb0a c70b 	mla	r7, sl, fp, ip
 8004906:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800490a:	b29b      	uxth	r3, r3
 800490c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004910:	4572      	cmp	r2, lr
 8004912:	f849 3b04 	str.w	r3, [r9], #4
 8004916:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800491a:	d8e2      	bhi.n	80048e2 <__multiply+0xb2>
 800491c:	9b01      	ldr	r3, [sp, #4]
 800491e:	f845 c003 	str.w	ip, [r5, r3]
 8004922:	9b03      	ldr	r3, [sp, #12]
 8004924:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8004928:	3104      	adds	r1, #4
 800492a:	f1b9 0f00 	cmp.w	r9, #0
 800492e:	d021      	beq.n	8004974 <__multiply+0x144>
 8004930:	682b      	ldr	r3, [r5, #0]
 8004932:	f104 0c14 	add.w	ip, r4, #20
 8004936:	46ae      	mov	lr, r5
 8004938:	f04f 0a00 	mov.w	sl, #0
 800493c:	f8bc b000 	ldrh.w	fp, [ip]
 8004940:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8004944:	fb09 770b 	mla	r7, r9, fp, r7
 8004948:	4457      	add	r7, sl
 800494a:	b29b      	uxth	r3, r3
 800494c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004950:	f84e 3b04 	str.w	r3, [lr], #4
 8004954:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004958:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800495c:	f8be 3000 	ldrh.w	r3, [lr]
 8004960:	fb09 330a 	mla	r3, r9, sl, r3
 8004964:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8004968:	4562      	cmp	r2, ip
 800496a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800496e:	d8e5      	bhi.n	800493c <__multiply+0x10c>
 8004970:	9f01      	ldr	r7, [sp, #4]
 8004972:	51eb      	str	r3, [r5, r7]
 8004974:	3504      	adds	r5, #4
 8004976:	e799      	b.n	80048ac <__multiply+0x7c>
 8004978:	3e01      	subs	r6, #1
 800497a:	e79b      	b.n	80048b4 <__multiply+0x84>
 800497c:	08006ef5 	.word	0x08006ef5
 8004980:	08006f06 	.word	0x08006f06

08004984 <__pow5mult>:
 8004984:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004988:	4615      	mov	r5, r2
 800498a:	f012 0203 	ands.w	r2, r2, #3
 800498e:	4607      	mov	r7, r0
 8004990:	460e      	mov	r6, r1
 8004992:	d007      	beq.n	80049a4 <__pow5mult+0x20>
 8004994:	4c25      	ldr	r4, [pc, #148]	@ (8004a2c <__pow5mult+0xa8>)
 8004996:	3a01      	subs	r2, #1
 8004998:	2300      	movs	r3, #0
 800499a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800499e:	f7ff fe55 	bl	800464c <__multadd>
 80049a2:	4606      	mov	r6, r0
 80049a4:	10ad      	asrs	r5, r5, #2
 80049a6:	d03d      	beq.n	8004a24 <__pow5mult+0xa0>
 80049a8:	69fc      	ldr	r4, [r7, #28]
 80049aa:	b97c      	cbnz	r4, 80049cc <__pow5mult+0x48>
 80049ac:	2010      	movs	r0, #16
 80049ae:	f7ff fd35 	bl	800441c <malloc>
 80049b2:	4602      	mov	r2, r0
 80049b4:	61f8      	str	r0, [r7, #28]
 80049b6:	b928      	cbnz	r0, 80049c4 <__pow5mult+0x40>
 80049b8:	4b1d      	ldr	r3, [pc, #116]	@ (8004a30 <__pow5mult+0xac>)
 80049ba:	481e      	ldr	r0, [pc, #120]	@ (8004a34 <__pow5mult+0xb0>)
 80049bc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80049c0:	f001 fd46 	bl	8006450 <__assert_func>
 80049c4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80049c8:	6004      	str	r4, [r0, #0]
 80049ca:	60c4      	str	r4, [r0, #12]
 80049cc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80049d0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80049d4:	b94c      	cbnz	r4, 80049ea <__pow5mult+0x66>
 80049d6:	f240 2171 	movw	r1, #625	@ 0x271
 80049da:	4638      	mov	r0, r7
 80049dc:	f7ff ff12 	bl	8004804 <__i2b>
 80049e0:	2300      	movs	r3, #0
 80049e2:	f8c8 0008 	str.w	r0, [r8, #8]
 80049e6:	4604      	mov	r4, r0
 80049e8:	6003      	str	r3, [r0, #0]
 80049ea:	f04f 0900 	mov.w	r9, #0
 80049ee:	07eb      	lsls	r3, r5, #31
 80049f0:	d50a      	bpl.n	8004a08 <__pow5mult+0x84>
 80049f2:	4631      	mov	r1, r6
 80049f4:	4622      	mov	r2, r4
 80049f6:	4638      	mov	r0, r7
 80049f8:	f7ff ff1a 	bl	8004830 <__multiply>
 80049fc:	4631      	mov	r1, r6
 80049fe:	4680      	mov	r8, r0
 8004a00:	4638      	mov	r0, r7
 8004a02:	f7ff fe01 	bl	8004608 <_Bfree>
 8004a06:	4646      	mov	r6, r8
 8004a08:	106d      	asrs	r5, r5, #1
 8004a0a:	d00b      	beq.n	8004a24 <__pow5mult+0xa0>
 8004a0c:	6820      	ldr	r0, [r4, #0]
 8004a0e:	b938      	cbnz	r0, 8004a20 <__pow5mult+0x9c>
 8004a10:	4622      	mov	r2, r4
 8004a12:	4621      	mov	r1, r4
 8004a14:	4638      	mov	r0, r7
 8004a16:	f7ff ff0b 	bl	8004830 <__multiply>
 8004a1a:	6020      	str	r0, [r4, #0]
 8004a1c:	f8c0 9000 	str.w	r9, [r0]
 8004a20:	4604      	mov	r4, r0
 8004a22:	e7e4      	b.n	80049ee <__pow5mult+0x6a>
 8004a24:	4630      	mov	r0, r6
 8004a26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004a2a:	bf00      	nop
 8004a2c:	08006f60 	.word	0x08006f60
 8004a30:	08006e86 	.word	0x08006e86
 8004a34:	08006f06 	.word	0x08006f06

08004a38 <__lshift>:
 8004a38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a3c:	460c      	mov	r4, r1
 8004a3e:	6849      	ldr	r1, [r1, #4]
 8004a40:	6923      	ldr	r3, [r4, #16]
 8004a42:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004a46:	68a3      	ldr	r3, [r4, #8]
 8004a48:	4607      	mov	r7, r0
 8004a4a:	4691      	mov	r9, r2
 8004a4c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004a50:	f108 0601 	add.w	r6, r8, #1
 8004a54:	42b3      	cmp	r3, r6
 8004a56:	db0b      	blt.n	8004a70 <__lshift+0x38>
 8004a58:	4638      	mov	r0, r7
 8004a5a:	f7ff fd95 	bl	8004588 <_Balloc>
 8004a5e:	4605      	mov	r5, r0
 8004a60:	b948      	cbnz	r0, 8004a76 <__lshift+0x3e>
 8004a62:	4602      	mov	r2, r0
 8004a64:	4b28      	ldr	r3, [pc, #160]	@ (8004b08 <__lshift+0xd0>)
 8004a66:	4829      	ldr	r0, [pc, #164]	@ (8004b0c <__lshift+0xd4>)
 8004a68:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004a6c:	f001 fcf0 	bl	8006450 <__assert_func>
 8004a70:	3101      	adds	r1, #1
 8004a72:	005b      	lsls	r3, r3, #1
 8004a74:	e7ee      	b.n	8004a54 <__lshift+0x1c>
 8004a76:	2300      	movs	r3, #0
 8004a78:	f100 0114 	add.w	r1, r0, #20
 8004a7c:	f100 0210 	add.w	r2, r0, #16
 8004a80:	4618      	mov	r0, r3
 8004a82:	4553      	cmp	r3, sl
 8004a84:	db33      	blt.n	8004aee <__lshift+0xb6>
 8004a86:	6920      	ldr	r0, [r4, #16]
 8004a88:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004a8c:	f104 0314 	add.w	r3, r4, #20
 8004a90:	f019 091f 	ands.w	r9, r9, #31
 8004a94:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004a98:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004a9c:	d02b      	beq.n	8004af6 <__lshift+0xbe>
 8004a9e:	f1c9 0e20 	rsb	lr, r9, #32
 8004aa2:	468a      	mov	sl, r1
 8004aa4:	2200      	movs	r2, #0
 8004aa6:	6818      	ldr	r0, [r3, #0]
 8004aa8:	fa00 f009 	lsl.w	r0, r0, r9
 8004aac:	4310      	orrs	r0, r2
 8004aae:	f84a 0b04 	str.w	r0, [sl], #4
 8004ab2:	f853 2b04 	ldr.w	r2, [r3], #4
 8004ab6:	459c      	cmp	ip, r3
 8004ab8:	fa22 f20e 	lsr.w	r2, r2, lr
 8004abc:	d8f3      	bhi.n	8004aa6 <__lshift+0x6e>
 8004abe:	ebac 0304 	sub.w	r3, ip, r4
 8004ac2:	3b15      	subs	r3, #21
 8004ac4:	f023 0303 	bic.w	r3, r3, #3
 8004ac8:	3304      	adds	r3, #4
 8004aca:	f104 0015 	add.w	r0, r4, #21
 8004ace:	4584      	cmp	ip, r0
 8004ad0:	bf38      	it	cc
 8004ad2:	2304      	movcc	r3, #4
 8004ad4:	50ca      	str	r2, [r1, r3]
 8004ad6:	b10a      	cbz	r2, 8004adc <__lshift+0xa4>
 8004ad8:	f108 0602 	add.w	r6, r8, #2
 8004adc:	3e01      	subs	r6, #1
 8004ade:	4638      	mov	r0, r7
 8004ae0:	612e      	str	r6, [r5, #16]
 8004ae2:	4621      	mov	r1, r4
 8004ae4:	f7ff fd90 	bl	8004608 <_Bfree>
 8004ae8:	4628      	mov	r0, r5
 8004aea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004aee:	f842 0f04 	str.w	r0, [r2, #4]!
 8004af2:	3301      	adds	r3, #1
 8004af4:	e7c5      	b.n	8004a82 <__lshift+0x4a>
 8004af6:	3904      	subs	r1, #4
 8004af8:	f853 2b04 	ldr.w	r2, [r3], #4
 8004afc:	f841 2f04 	str.w	r2, [r1, #4]!
 8004b00:	459c      	cmp	ip, r3
 8004b02:	d8f9      	bhi.n	8004af8 <__lshift+0xc0>
 8004b04:	e7ea      	b.n	8004adc <__lshift+0xa4>
 8004b06:	bf00      	nop
 8004b08:	08006ef5 	.word	0x08006ef5
 8004b0c:	08006f06 	.word	0x08006f06

08004b10 <__mcmp>:
 8004b10:	690a      	ldr	r2, [r1, #16]
 8004b12:	4603      	mov	r3, r0
 8004b14:	6900      	ldr	r0, [r0, #16]
 8004b16:	1a80      	subs	r0, r0, r2
 8004b18:	b530      	push	{r4, r5, lr}
 8004b1a:	d10e      	bne.n	8004b3a <__mcmp+0x2a>
 8004b1c:	3314      	adds	r3, #20
 8004b1e:	3114      	adds	r1, #20
 8004b20:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004b24:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004b28:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004b2c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004b30:	4295      	cmp	r5, r2
 8004b32:	d003      	beq.n	8004b3c <__mcmp+0x2c>
 8004b34:	d205      	bcs.n	8004b42 <__mcmp+0x32>
 8004b36:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004b3a:	bd30      	pop	{r4, r5, pc}
 8004b3c:	42a3      	cmp	r3, r4
 8004b3e:	d3f3      	bcc.n	8004b28 <__mcmp+0x18>
 8004b40:	e7fb      	b.n	8004b3a <__mcmp+0x2a>
 8004b42:	2001      	movs	r0, #1
 8004b44:	e7f9      	b.n	8004b3a <__mcmp+0x2a>
	...

08004b48 <__mdiff>:
 8004b48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b4c:	4689      	mov	r9, r1
 8004b4e:	4606      	mov	r6, r0
 8004b50:	4611      	mov	r1, r2
 8004b52:	4648      	mov	r0, r9
 8004b54:	4614      	mov	r4, r2
 8004b56:	f7ff ffdb 	bl	8004b10 <__mcmp>
 8004b5a:	1e05      	subs	r5, r0, #0
 8004b5c:	d112      	bne.n	8004b84 <__mdiff+0x3c>
 8004b5e:	4629      	mov	r1, r5
 8004b60:	4630      	mov	r0, r6
 8004b62:	f7ff fd11 	bl	8004588 <_Balloc>
 8004b66:	4602      	mov	r2, r0
 8004b68:	b928      	cbnz	r0, 8004b76 <__mdiff+0x2e>
 8004b6a:	4b3f      	ldr	r3, [pc, #252]	@ (8004c68 <__mdiff+0x120>)
 8004b6c:	f240 2137 	movw	r1, #567	@ 0x237
 8004b70:	483e      	ldr	r0, [pc, #248]	@ (8004c6c <__mdiff+0x124>)
 8004b72:	f001 fc6d 	bl	8006450 <__assert_func>
 8004b76:	2301      	movs	r3, #1
 8004b78:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004b7c:	4610      	mov	r0, r2
 8004b7e:	b003      	add	sp, #12
 8004b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b84:	bfbc      	itt	lt
 8004b86:	464b      	movlt	r3, r9
 8004b88:	46a1      	movlt	r9, r4
 8004b8a:	4630      	mov	r0, r6
 8004b8c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004b90:	bfba      	itte	lt
 8004b92:	461c      	movlt	r4, r3
 8004b94:	2501      	movlt	r5, #1
 8004b96:	2500      	movge	r5, #0
 8004b98:	f7ff fcf6 	bl	8004588 <_Balloc>
 8004b9c:	4602      	mov	r2, r0
 8004b9e:	b918      	cbnz	r0, 8004ba8 <__mdiff+0x60>
 8004ba0:	4b31      	ldr	r3, [pc, #196]	@ (8004c68 <__mdiff+0x120>)
 8004ba2:	f240 2145 	movw	r1, #581	@ 0x245
 8004ba6:	e7e3      	b.n	8004b70 <__mdiff+0x28>
 8004ba8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004bac:	6926      	ldr	r6, [r4, #16]
 8004bae:	60c5      	str	r5, [r0, #12]
 8004bb0:	f109 0310 	add.w	r3, r9, #16
 8004bb4:	f109 0514 	add.w	r5, r9, #20
 8004bb8:	f104 0e14 	add.w	lr, r4, #20
 8004bbc:	f100 0b14 	add.w	fp, r0, #20
 8004bc0:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004bc4:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004bc8:	9301      	str	r3, [sp, #4]
 8004bca:	46d9      	mov	r9, fp
 8004bcc:	f04f 0c00 	mov.w	ip, #0
 8004bd0:	9b01      	ldr	r3, [sp, #4]
 8004bd2:	f85e 0b04 	ldr.w	r0, [lr], #4
 8004bd6:	f853 af04 	ldr.w	sl, [r3, #4]!
 8004bda:	9301      	str	r3, [sp, #4]
 8004bdc:	fa1f f38a 	uxth.w	r3, sl
 8004be0:	4619      	mov	r1, r3
 8004be2:	b283      	uxth	r3, r0
 8004be4:	1acb      	subs	r3, r1, r3
 8004be6:	0c00      	lsrs	r0, r0, #16
 8004be8:	4463      	add	r3, ip
 8004bea:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8004bee:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004bf2:	b29b      	uxth	r3, r3
 8004bf4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004bf8:	4576      	cmp	r6, lr
 8004bfa:	f849 3b04 	str.w	r3, [r9], #4
 8004bfe:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004c02:	d8e5      	bhi.n	8004bd0 <__mdiff+0x88>
 8004c04:	1b33      	subs	r3, r6, r4
 8004c06:	3b15      	subs	r3, #21
 8004c08:	f023 0303 	bic.w	r3, r3, #3
 8004c0c:	3415      	adds	r4, #21
 8004c0e:	3304      	adds	r3, #4
 8004c10:	42a6      	cmp	r6, r4
 8004c12:	bf38      	it	cc
 8004c14:	2304      	movcc	r3, #4
 8004c16:	441d      	add	r5, r3
 8004c18:	445b      	add	r3, fp
 8004c1a:	461e      	mov	r6, r3
 8004c1c:	462c      	mov	r4, r5
 8004c1e:	4544      	cmp	r4, r8
 8004c20:	d30e      	bcc.n	8004c40 <__mdiff+0xf8>
 8004c22:	f108 0103 	add.w	r1, r8, #3
 8004c26:	1b49      	subs	r1, r1, r5
 8004c28:	f021 0103 	bic.w	r1, r1, #3
 8004c2c:	3d03      	subs	r5, #3
 8004c2e:	45a8      	cmp	r8, r5
 8004c30:	bf38      	it	cc
 8004c32:	2100      	movcc	r1, #0
 8004c34:	440b      	add	r3, r1
 8004c36:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004c3a:	b191      	cbz	r1, 8004c62 <__mdiff+0x11a>
 8004c3c:	6117      	str	r7, [r2, #16]
 8004c3e:	e79d      	b.n	8004b7c <__mdiff+0x34>
 8004c40:	f854 1b04 	ldr.w	r1, [r4], #4
 8004c44:	46e6      	mov	lr, ip
 8004c46:	0c08      	lsrs	r0, r1, #16
 8004c48:	fa1c fc81 	uxtah	ip, ip, r1
 8004c4c:	4471      	add	r1, lr
 8004c4e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8004c52:	b289      	uxth	r1, r1
 8004c54:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004c58:	f846 1b04 	str.w	r1, [r6], #4
 8004c5c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004c60:	e7dd      	b.n	8004c1e <__mdiff+0xd6>
 8004c62:	3f01      	subs	r7, #1
 8004c64:	e7e7      	b.n	8004c36 <__mdiff+0xee>
 8004c66:	bf00      	nop
 8004c68:	08006ef5 	.word	0x08006ef5
 8004c6c:	08006f06 	.word	0x08006f06

08004c70 <__ulp>:
 8004c70:	b082      	sub	sp, #8
 8004c72:	ed8d 0b00 	vstr	d0, [sp]
 8004c76:	9a01      	ldr	r2, [sp, #4]
 8004c78:	4b0f      	ldr	r3, [pc, #60]	@ (8004cb8 <__ulp+0x48>)
 8004c7a:	4013      	ands	r3, r2
 8004c7c:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	dc08      	bgt.n	8004c96 <__ulp+0x26>
 8004c84:	425b      	negs	r3, r3
 8004c86:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004c8a:	ea4f 5223 	mov.w	r2, r3, asr #20
 8004c8e:	da04      	bge.n	8004c9a <__ulp+0x2a>
 8004c90:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004c94:	4113      	asrs	r3, r2
 8004c96:	2200      	movs	r2, #0
 8004c98:	e008      	b.n	8004cac <__ulp+0x3c>
 8004c9a:	f1a2 0314 	sub.w	r3, r2, #20
 8004c9e:	2b1e      	cmp	r3, #30
 8004ca0:	bfda      	itte	le
 8004ca2:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004ca6:	40da      	lsrle	r2, r3
 8004ca8:	2201      	movgt	r2, #1
 8004caa:	2300      	movs	r3, #0
 8004cac:	4619      	mov	r1, r3
 8004cae:	4610      	mov	r0, r2
 8004cb0:	ec41 0b10 	vmov	d0, r0, r1
 8004cb4:	b002      	add	sp, #8
 8004cb6:	4770      	bx	lr
 8004cb8:	7ff00000 	.word	0x7ff00000

08004cbc <__b2d>:
 8004cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cc0:	6906      	ldr	r6, [r0, #16]
 8004cc2:	f100 0814 	add.w	r8, r0, #20
 8004cc6:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8004cca:	1f37      	subs	r7, r6, #4
 8004ccc:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004cd0:	4610      	mov	r0, r2
 8004cd2:	f7ff fd4b 	bl	800476c <__hi0bits>
 8004cd6:	f1c0 0320 	rsb	r3, r0, #32
 8004cda:	280a      	cmp	r0, #10
 8004cdc:	600b      	str	r3, [r1, #0]
 8004cde:	491b      	ldr	r1, [pc, #108]	@ (8004d4c <__b2d+0x90>)
 8004ce0:	dc15      	bgt.n	8004d0e <__b2d+0x52>
 8004ce2:	f1c0 0c0b 	rsb	ip, r0, #11
 8004ce6:	fa22 f30c 	lsr.w	r3, r2, ip
 8004cea:	45b8      	cmp	r8, r7
 8004cec:	ea43 0501 	orr.w	r5, r3, r1
 8004cf0:	bf34      	ite	cc
 8004cf2:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004cf6:	2300      	movcs	r3, #0
 8004cf8:	3015      	adds	r0, #21
 8004cfa:	fa02 f000 	lsl.w	r0, r2, r0
 8004cfe:	fa23 f30c 	lsr.w	r3, r3, ip
 8004d02:	4303      	orrs	r3, r0
 8004d04:	461c      	mov	r4, r3
 8004d06:	ec45 4b10 	vmov	d0, r4, r5
 8004d0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004d0e:	45b8      	cmp	r8, r7
 8004d10:	bf3a      	itte	cc
 8004d12:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004d16:	f1a6 0708 	subcc.w	r7, r6, #8
 8004d1a:	2300      	movcs	r3, #0
 8004d1c:	380b      	subs	r0, #11
 8004d1e:	d012      	beq.n	8004d46 <__b2d+0x8a>
 8004d20:	f1c0 0120 	rsb	r1, r0, #32
 8004d24:	fa23 f401 	lsr.w	r4, r3, r1
 8004d28:	4082      	lsls	r2, r0
 8004d2a:	4322      	orrs	r2, r4
 8004d2c:	4547      	cmp	r7, r8
 8004d2e:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8004d32:	bf8c      	ite	hi
 8004d34:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8004d38:	2200      	movls	r2, #0
 8004d3a:	4083      	lsls	r3, r0
 8004d3c:	40ca      	lsrs	r2, r1
 8004d3e:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8004d42:	4313      	orrs	r3, r2
 8004d44:	e7de      	b.n	8004d04 <__b2d+0x48>
 8004d46:	ea42 0501 	orr.w	r5, r2, r1
 8004d4a:	e7db      	b.n	8004d04 <__b2d+0x48>
 8004d4c:	3ff00000 	.word	0x3ff00000

08004d50 <__d2b>:
 8004d50:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004d54:	460f      	mov	r7, r1
 8004d56:	2101      	movs	r1, #1
 8004d58:	ec59 8b10 	vmov	r8, r9, d0
 8004d5c:	4616      	mov	r6, r2
 8004d5e:	f7ff fc13 	bl	8004588 <_Balloc>
 8004d62:	4604      	mov	r4, r0
 8004d64:	b930      	cbnz	r0, 8004d74 <__d2b+0x24>
 8004d66:	4602      	mov	r2, r0
 8004d68:	4b23      	ldr	r3, [pc, #140]	@ (8004df8 <__d2b+0xa8>)
 8004d6a:	4824      	ldr	r0, [pc, #144]	@ (8004dfc <__d2b+0xac>)
 8004d6c:	f240 310f 	movw	r1, #783	@ 0x30f
 8004d70:	f001 fb6e 	bl	8006450 <__assert_func>
 8004d74:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004d78:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004d7c:	b10d      	cbz	r5, 8004d82 <__d2b+0x32>
 8004d7e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004d82:	9301      	str	r3, [sp, #4]
 8004d84:	f1b8 0300 	subs.w	r3, r8, #0
 8004d88:	d023      	beq.n	8004dd2 <__d2b+0x82>
 8004d8a:	4668      	mov	r0, sp
 8004d8c:	9300      	str	r3, [sp, #0]
 8004d8e:	f7ff fd0c 	bl	80047aa <__lo0bits>
 8004d92:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004d96:	b1d0      	cbz	r0, 8004dce <__d2b+0x7e>
 8004d98:	f1c0 0320 	rsb	r3, r0, #32
 8004d9c:	fa02 f303 	lsl.w	r3, r2, r3
 8004da0:	430b      	orrs	r3, r1
 8004da2:	40c2      	lsrs	r2, r0
 8004da4:	6163      	str	r3, [r4, #20]
 8004da6:	9201      	str	r2, [sp, #4]
 8004da8:	9b01      	ldr	r3, [sp, #4]
 8004daa:	61a3      	str	r3, [r4, #24]
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	bf0c      	ite	eq
 8004db0:	2201      	moveq	r2, #1
 8004db2:	2202      	movne	r2, #2
 8004db4:	6122      	str	r2, [r4, #16]
 8004db6:	b1a5      	cbz	r5, 8004de2 <__d2b+0x92>
 8004db8:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8004dbc:	4405      	add	r5, r0
 8004dbe:	603d      	str	r5, [r7, #0]
 8004dc0:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8004dc4:	6030      	str	r0, [r6, #0]
 8004dc6:	4620      	mov	r0, r4
 8004dc8:	b003      	add	sp, #12
 8004dca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004dce:	6161      	str	r1, [r4, #20]
 8004dd0:	e7ea      	b.n	8004da8 <__d2b+0x58>
 8004dd2:	a801      	add	r0, sp, #4
 8004dd4:	f7ff fce9 	bl	80047aa <__lo0bits>
 8004dd8:	9b01      	ldr	r3, [sp, #4]
 8004dda:	6163      	str	r3, [r4, #20]
 8004ddc:	3020      	adds	r0, #32
 8004dde:	2201      	movs	r2, #1
 8004de0:	e7e8      	b.n	8004db4 <__d2b+0x64>
 8004de2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004de6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8004dea:	6038      	str	r0, [r7, #0]
 8004dec:	6918      	ldr	r0, [r3, #16]
 8004dee:	f7ff fcbd 	bl	800476c <__hi0bits>
 8004df2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004df6:	e7e5      	b.n	8004dc4 <__d2b+0x74>
 8004df8:	08006ef5 	.word	0x08006ef5
 8004dfc:	08006f06 	.word	0x08006f06

08004e00 <__ratio>:
 8004e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e04:	b085      	sub	sp, #20
 8004e06:	e9cd 1000 	strd	r1, r0, [sp]
 8004e0a:	a902      	add	r1, sp, #8
 8004e0c:	f7ff ff56 	bl	8004cbc <__b2d>
 8004e10:	9800      	ldr	r0, [sp, #0]
 8004e12:	a903      	add	r1, sp, #12
 8004e14:	ec55 4b10 	vmov	r4, r5, d0
 8004e18:	f7ff ff50 	bl	8004cbc <__b2d>
 8004e1c:	9b01      	ldr	r3, [sp, #4]
 8004e1e:	6919      	ldr	r1, [r3, #16]
 8004e20:	9b00      	ldr	r3, [sp, #0]
 8004e22:	691b      	ldr	r3, [r3, #16]
 8004e24:	1ac9      	subs	r1, r1, r3
 8004e26:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8004e2a:	1a9b      	subs	r3, r3, r2
 8004e2c:	ec5b ab10 	vmov	sl, fp, d0
 8004e30:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	bfce      	itee	gt
 8004e38:	462a      	movgt	r2, r5
 8004e3a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004e3e:	465a      	movle	r2, fp
 8004e40:	462f      	mov	r7, r5
 8004e42:	46d9      	mov	r9, fp
 8004e44:	bfcc      	ite	gt
 8004e46:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8004e4a:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8004e4e:	464b      	mov	r3, r9
 8004e50:	4652      	mov	r2, sl
 8004e52:	4620      	mov	r0, r4
 8004e54:	4639      	mov	r1, r7
 8004e56:	f7fb fd01 	bl	800085c <__aeabi_ddiv>
 8004e5a:	ec41 0b10 	vmov	d0, r0, r1
 8004e5e:	b005      	add	sp, #20
 8004e60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004e64 <__copybits>:
 8004e64:	3901      	subs	r1, #1
 8004e66:	b570      	push	{r4, r5, r6, lr}
 8004e68:	1149      	asrs	r1, r1, #5
 8004e6a:	6914      	ldr	r4, [r2, #16]
 8004e6c:	3101      	adds	r1, #1
 8004e6e:	f102 0314 	add.w	r3, r2, #20
 8004e72:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004e76:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004e7a:	1f05      	subs	r5, r0, #4
 8004e7c:	42a3      	cmp	r3, r4
 8004e7e:	d30c      	bcc.n	8004e9a <__copybits+0x36>
 8004e80:	1aa3      	subs	r3, r4, r2
 8004e82:	3b11      	subs	r3, #17
 8004e84:	f023 0303 	bic.w	r3, r3, #3
 8004e88:	3211      	adds	r2, #17
 8004e8a:	42a2      	cmp	r2, r4
 8004e8c:	bf88      	it	hi
 8004e8e:	2300      	movhi	r3, #0
 8004e90:	4418      	add	r0, r3
 8004e92:	2300      	movs	r3, #0
 8004e94:	4288      	cmp	r0, r1
 8004e96:	d305      	bcc.n	8004ea4 <__copybits+0x40>
 8004e98:	bd70      	pop	{r4, r5, r6, pc}
 8004e9a:	f853 6b04 	ldr.w	r6, [r3], #4
 8004e9e:	f845 6f04 	str.w	r6, [r5, #4]!
 8004ea2:	e7eb      	b.n	8004e7c <__copybits+0x18>
 8004ea4:	f840 3b04 	str.w	r3, [r0], #4
 8004ea8:	e7f4      	b.n	8004e94 <__copybits+0x30>

08004eaa <__any_on>:
 8004eaa:	f100 0214 	add.w	r2, r0, #20
 8004eae:	6900      	ldr	r0, [r0, #16]
 8004eb0:	114b      	asrs	r3, r1, #5
 8004eb2:	4298      	cmp	r0, r3
 8004eb4:	b510      	push	{r4, lr}
 8004eb6:	db11      	blt.n	8004edc <__any_on+0x32>
 8004eb8:	dd0a      	ble.n	8004ed0 <__any_on+0x26>
 8004eba:	f011 011f 	ands.w	r1, r1, #31
 8004ebe:	d007      	beq.n	8004ed0 <__any_on+0x26>
 8004ec0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004ec4:	fa24 f001 	lsr.w	r0, r4, r1
 8004ec8:	fa00 f101 	lsl.w	r1, r0, r1
 8004ecc:	428c      	cmp	r4, r1
 8004ece:	d10b      	bne.n	8004ee8 <__any_on+0x3e>
 8004ed0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004ed4:	4293      	cmp	r3, r2
 8004ed6:	d803      	bhi.n	8004ee0 <__any_on+0x36>
 8004ed8:	2000      	movs	r0, #0
 8004eda:	bd10      	pop	{r4, pc}
 8004edc:	4603      	mov	r3, r0
 8004ede:	e7f7      	b.n	8004ed0 <__any_on+0x26>
 8004ee0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004ee4:	2900      	cmp	r1, #0
 8004ee6:	d0f5      	beq.n	8004ed4 <__any_on+0x2a>
 8004ee8:	2001      	movs	r0, #1
 8004eea:	e7f6      	b.n	8004eda <__any_on+0x30>

08004eec <sulp>:
 8004eec:	b570      	push	{r4, r5, r6, lr}
 8004eee:	4604      	mov	r4, r0
 8004ef0:	460d      	mov	r5, r1
 8004ef2:	ec45 4b10 	vmov	d0, r4, r5
 8004ef6:	4616      	mov	r6, r2
 8004ef8:	f7ff feba 	bl	8004c70 <__ulp>
 8004efc:	ec51 0b10 	vmov	r0, r1, d0
 8004f00:	b17e      	cbz	r6, 8004f22 <sulp+0x36>
 8004f02:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004f06:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	dd09      	ble.n	8004f22 <sulp+0x36>
 8004f0e:	051b      	lsls	r3, r3, #20
 8004f10:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004f14:	2400      	movs	r4, #0
 8004f16:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004f1a:	4622      	mov	r2, r4
 8004f1c:	462b      	mov	r3, r5
 8004f1e:	f7fb fb73 	bl	8000608 <__aeabi_dmul>
 8004f22:	ec41 0b10 	vmov	d0, r0, r1
 8004f26:	bd70      	pop	{r4, r5, r6, pc}

08004f28 <_strtod_l>:
 8004f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f2c:	b09f      	sub	sp, #124	@ 0x7c
 8004f2e:	460c      	mov	r4, r1
 8004f30:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004f32:	2200      	movs	r2, #0
 8004f34:	921a      	str	r2, [sp, #104]	@ 0x68
 8004f36:	9005      	str	r0, [sp, #20]
 8004f38:	f04f 0a00 	mov.w	sl, #0
 8004f3c:	f04f 0b00 	mov.w	fp, #0
 8004f40:	460a      	mov	r2, r1
 8004f42:	9219      	str	r2, [sp, #100]	@ 0x64
 8004f44:	7811      	ldrb	r1, [r2, #0]
 8004f46:	292b      	cmp	r1, #43	@ 0x2b
 8004f48:	d04a      	beq.n	8004fe0 <_strtod_l+0xb8>
 8004f4a:	d838      	bhi.n	8004fbe <_strtod_l+0x96>
 8004f4c:	290d      	cmp	r1, #13
 8004f4e:	d832      	bhi.n	8004fb6 <_strtod_l+0x8e>
 8004f50:	2908      	cmp	r1, #8
 8004f52:	d832      	bhi.n	8004fba <_strtod_l+0x92>
 8004f54:	2900      	cmp	r1, #0
 8004f56:	d03b      	beq.n	8004fd0 <_strtod_l+0xa8>
 8004f58:	2200      	movs	r2, #0
 8004f5a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8004f5c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004f5e:	782a      	ldrb	r2, [r5, #0]
 8004f60:	2a30      	cmp	r2, #48	@ 0x30
 8004f62:	f040 80b3 	bne.w	80050cc <_strtod_l+0x1a4>
 8004f66:	786a      	ldrb	r2, [r5, #1]
 8004f68:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004f6c:	2a58      	cmp	r2, #88	@ 0x58
 8004f6e:	d16e      	bne.n	800504e <_strtod_l+0x126>
 8004f70:	9302      	str	r3, [sp, #8]
 8004f72:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004f74:	9301      	str	r3, [sp, #4]
 8004f76:	ab1a      	add	r3, sp, #104	@ 0x68
 8004f78:	9300      	str	r3, [sp, #0]
 8004f7a:	4a8e      	ldr	r2, [pc, #568]	@ (80051b4 <_strtod_l+0x28c>)
 8004f7c:	9805      	ldr	r0, [sp, #20]
 8004f7e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004f80:	a919      	add	r1, sp, #100	@ 0x64
 8004f82:	f001 faff 	bl	8006584 <__gethex>
 8004f86:	f010 060f 	ands.w	r6, r0, #15
 8004f8a:	4604      	mov	r4, r0
 8004f8c:	d005      	beq.n	8004f9a <_strtod_l+0x72>
 8004f8e:	2e06      	cmp	r6, #6
 8004f90:	d128      	bne.n	8004fe4 <_strtod_l+0xbc>
 8004f92:	3501      	adds	r5, #1
 8004f94:	2300      	movs	r3, #0
 8004f96:	9519      	str	r5, [sp, #100]	@ 0x64
 8004f98:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004f9a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	f040 858e 	bne.w	8005abe <_strtod_l+0xb96>
 8004fa2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004fa4:	b1cb      	cbz	r3, 8004fda <_strtod_l+0xb2>
 8004fa6:	4652      	mov	r2, sl
 8004fa8:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8004fac:	ec43 2b10 	vmov	d0, r2, r3
 8004fb0:	b01f      	add	sp, #124	@ 0x7c
 8004fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fb6:	2920      	cmp	r1, #32
 8004fb8:	d1ce      	bne.n	8004f58 <_strtod_l+0x30>
 8004fba:	3201      	adds	r2, #1
 8004fbc:	e7c1      	b.n	8004f42 <_strtod_l+0x1a>
 8004fbe:	292d      	cmp	r1, #45	@ 0x2d
 8004fc0:	d1ca      	bne.n	8004f58 <_strtod_l+0x30>
 8004fc2:	2101      	movs	r1, #1
 8004fc4:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004fc6:	1c51      	adds	r1, r2, #1
 8004fc8:	9119      	str	r1, [sp, #100]	@ 0x64
 8004fca:	7852      	ldrb	r2, [r2, #1]
 8004fcc:	2a00      	cmp	r2, #0
 8004fce:	d1c5      	bne.n	8004f5c <_strtod_l+0x34>
 8004fd0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004fd2:	9419      	str	r4, [sp, #100]	@ 0x64
 8004fd4:	2b00      	cmp	r3, #0
 8004fd6:	f040 8570 	bne.w	8005aba <_strtod_l+0xb92>
 8004fda:	4652      	mov	r2, sl
 8004fdc:	465b      	mov	r3, fp
 8004fde:	e7e5      	b.n	8004fac <_strtod_l+0x84>
 8004fe0:	2100      	movs	r1, #0
 8004fe2:	e7ef      	b.n	8004fc4 <_strtod_l+0x9c>
 8004fe4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004fe6:	b13a      	cbz	r2, 8004ff8 <_strtod_l+0xd0>
 8004fe8:	2135      	movs	r1, #53	@ 0x35
 8004fea:	a81c      	add	r0, sp, #112	@ 0x70
 8004fec:	f7ff ff3a 	bl	8004e64 <__copybits>
 8004ff0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004ff2:	9805      	ldr	r0, [sp, #20]
 8004ff4:	f7ff fb08 	bl	8004608 <_Bfree>
 8004ff8:	3e01      	subs	r6, #1
 8004ffa:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004ffc:	2e04      	cmp	r6, #4
 8004ffe:	d806      	bhi.n	800500e <_strtod_l+0xe6>
 8005000:	e8df f006 	tbb	[pc, r6]
 8005004:	201d0314 	.word	0x201d0314
 8005008:	14          	.byte	0x14
 8005009:	00          	.byte	0x00
 800500a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800500e:	05e1      	lsls	r1, r4, #23
 8005010:	bf48      	it	mi
 8005012:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8005016:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800501a:	0d1b      	lsrs	r3, r3, #20
 800501c:	051b      	lsls	r3, r3, #20
 800501e:	2b00      	cmp	r3, #0
 8005020:	d1bb      	bne.n	8004f9a <_strtod_l+0x72>
 8005022:	f7fe fb2f 	bl	8003684 <__errno>
 8005026:	2322      	movs	r3, #34	@ 0x22
 8005028:	6003      	str	r3, [r0, #0]
 800502a:	e7b6      	b.n	8004f9a <_strtod_l+0x72>
 800502c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8005030:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8005034:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8005038:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800503c:	e7e7      	b.n	800500e <_strtod_l+0xe6>
 800503e:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 80051bc <_strtod_l+0x294>
 8005042:	e7e4      	b.n	800500e <_strtod_l+0xe6>
 8005044:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8005048:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 800504c:	e7df      	b.n	800500e <_strtod_l+0xe6>
 800504e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005050:	1c5a      	adds	r2, r3, #1
 8005052:	9219      	str	r2, [sp, #100]	@ 0x64
 8005054:	785b      	ldrb	r3, [r3, #1]
 8005056:	2b30      	cmp	r3, #48	@ 0x30
 8005058:	d0f9      	beq.n	800504e <_strtod_l+0x126>
 800505a:	2b00      	cmp	r3, #0
 800505c:	d09d      	beq.n	8004f9a <_strtod_l+0x72>
 800505e:	2301      	movs	r3, #1
 8005060:	9309      	str	r3, [sp, #36]	@ 0x24
 8005062:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005064:	930c      	str	r3, [sp, #48]	@ 0x30
 8005066:	2300      	movs	r3, #0
 8005068:	9308      	str	r3, [sp, #32]
 800506a:	930a      	str	r3, [sp, #40]	@ 0x28
 800506c:	461f      	mov	r7, r3
 800506e:	220a      	movs	r2, #10
 8005070:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8005072:	7805      	ldrb	r5, [r0, #0]
 8005074:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8005078:	b2d9      	uxtb	r1, r3
 800507a:	2909      	cmp	r1, #9
 800507c:	d928      	bls.n	80050d0 <_strtod_l+0x1a8>
 800507e:	494e      	ldr	r1, [pc, #312]	@ (80051b8 <_strtod_l+0x290>)
 8005080:	2201      	movs	r2, #1
 8005082:	f001 f9ab 	bl	80063dc <strncmp>
 8005086:	2800      	cmp	r0, #0
 8005088:	d032      	beq.n	80050f0 <_strtod_l+0x1c8>
 800508a:	2000      	movs	r0, #0
 800508c:	462a      	mov	r2, r5
 800508e:	4681      	mov	r9, r0
 8005090:	463d      	mov	r5, r7
 8005092:	4603      	mov	r3, r0
 8005094:	2a65      	cmp	r2, #101	@ 0x65
 8005096:	d001      	beq.n	800509c <_strtod_l+0x174>
 8005098:	2a45      	cmp	r2, #69	@ 0x45
 800509a:	d114      	bne.n	80050c6 <_strtod_l+0x19e>
 800509c:	b91d      	cbnz	r5, 80050a6 <_strtod_l+0x17e>
 800509e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80050a0:	4302      	orrs	r2, r0
 80050a2:	d095      	beq.n	8004fd0 <_strtod_l+0xa8>
 80050a4:	2500      	movs	r5, #0
 80050a6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 80050a8:	1c62      	adds	r2, r4, #1
 80050aa:	9219      	str	r2, [sp, #100]	@ 0x64
 80050ac:	7862      	ldrb	r2, [r4, #1]
 80050ae:	2a2b      	cmp	r2, #43	@ 0x2b
 80050b0:	d077      	beq.n	80051a2 <_strtod_l+0x27a>
 80050b2:	2a2d      	cmp	r2, #45	@ 0x2d
 80050b4:	d07b      	beq.n	80051ae <_strtod_l+0x286>
 80050b6:	f04f 0c00 	mov.w	ip, #0
 80050ba:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80050be:	2909      	cmp	r1, #9
 80050c0:	f240 8082 	bls.w	80051c8 <_strtod_l+0x2a0>
 80050c4:	9419      	str	r4, [sp, #100]	@ 0x64
 80050c6:	f04f 0800 	mov.w	r8, #0
 80050ca:	e0a2      	b.n	8005212 <_strtod_l+0x2ea>
 80050cc:	2300      	movs	r3, #0
 80050ce:	e7c7      	b.n	8005060 <_strtod_l+0x138>
 80050d0:	2f08      	cmp	r7, #8
 80050d2:	bfd5      	itete	le
 80050d4:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 80050d6:	9908      	ldrgt	r1, [sp, #32]
 80050d8:	fb02 3301 	mlale	r3, r2, r1, r3
 80050dc:	fb02 3301 	mlagt	r3, r2, r1, r3
 80050e0:	f100 0001 	add.w	r0, r0, #1
 80050e4:	bfd4      	ite	le
 80050e6:	930a      	strle	r3, [sp, #40]	@ 0x28
 80050e8:	9308      	strgt	r3, [sp, #32]
 80050ea:	3701      	adds	r7, #1
 80050ec:	9019      	str	r0, [sp, #100]	@ 0x64
 80050ee:	e7bf      	b.n	8005070 <_strtod_l+0x148>
 80050f0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80050f2:	1c5a      	adds	r2, r3, #1
 80050f4:	9219      	str	r2, [sp, #100]	@ 0x64
 80050f6:	785a      	ldrb	r2, [r3, #1]
 80050f8:	b37f      	cbz	r7, 800515a <_strtod_l+0x232>
 80050fa:	4681      	mov	r9, r0
 80050fc:	463d      	mov	r5, r7
 80050fe:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8005102:	2b09      	cmp	r3, #9
 8005104:	d912      	bls.n	800512c <_strtod_l+0x204>
 8005106:	2301      	movs	r3, #1
 8005108:	e7c4      	b.n	8005094 <_strtod_l+0x16c>
 800510a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800510c:	1c5a      	adds	r2, r3, #1
 800510e:	9219      	str	r2, [sp, #100]	@ 0x64
 8005110:	785a      	ldrb	r2, [r3, #1]
 8005112:	3001      	adds	r0, #1
 8005114:	2a30      	cmp	r2, #48	@ 0x30
 8005116:	d0f8      	beq.n	800510a <_strtod_l+0x1e2>
 8005118:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800511c:	2b08      	cmp	r3, #8
 800511e:	f200 84d3 	bhi.w	8005ac8 <_strtod_l+0xba0>
 8005122:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005124:	930c      	str	r3, [sp, #48]	@ 0x30
 8005126:	4681      	mov	r9, r0
 8005128:	2000      	movs	r0, #0
 800512a:	4605      	mov	r5, r0
 800512c:	3a30      	subs	r2, #48	@ 0x30
 800512e:	f100 0301 	add.w	r3, r0, #1
 8005132:	d02a      	beq.n	800518a <_strtod_l+0x262>
 8005134:	4499      	add	r9, r3
 8005136:	eb00 0c05 	add.w	ip, r0, r5
 800513a:	462b      	mov	r3, r5
 800513c:	210a      	movs	r1, #10
 800513e:	4563      	cmp	r3, ip
 8005140:	d10d      	bne.n	800515e <_strtod_l+0x236>
 8005142:	1c69      	adds	r1, r5, #1
 8005144:	4401      	add	r1, r0
 8005146:	4428      	add	r0, r5
 8005148:	2808      	cmp	r0, #8
 800514a:	dc16      	bgt.n	800517a <_strtod_l+0x252>
 800514c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800514e:	230a      	movs	r3, #10
 8005150:	fb03 2300 	mla	r3, r3, r0, r2
 8005154:	930a      	str	r3, [sp, #40]	@ 0x28
 8005156:	2300      	movs	r3, #0
 8005158:	e018      	b.n	800518c <_strtod_l+0x264>
 800515a:	4638      	mov	r0, r7
 800515c:	e7da      	b.n	8005114 <_strtod_l+0x1ec>
 800515e:	2b08      	cmp	r3, #8
 8005160:	f103 0301 	add.w	r3, r3, #1
 8005164:	dc03      	bgt.n	800516e <_strtod_l+0x246>
 8005166:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8005168:	434e      	muls	r6, r1
 800516a:	960a      	str	r6, [sp, #40]	@ 0x28
 800516c:	e7e7      	b.n	800513e <_strtod_l+0x216>
 800516e:	2b10      	cmp	r3, #16
 8005170:	bfde      	ittt	le
 8005172:	9e08      	ldrle	r6, [sp, #32]
 8005174:	434e      	mulle	r6, r1
 8005176:	9608      	strle	r6, [sp, #32]
 8005178:	e7e1      	b.n	800513e <_strtod_l+0x216>
 800517a:	280f      	cmp	r0, #15
 800517c:	dceb      	bgt.n	8005156 <_strtod_l+0x22e>
 800517e:	9808      	ldr	r0, [sp, #32]
 8005180:	230a      	movs	r3, #10
 8005182:	fb03 2300 	mla	r3, r3, r0, r2
 8005186:	9308      	str	r3, [sp, #32]
 8005188:	e7e5      	b.n	8005156 <_strtod_l+0x22e>
 800518a:	4629      	mov	r1, r5
 800518c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800518e:	1c50      	adds	r0, r2, #1
 8005190:	9019      	str	r0, [sp, #100]	@ 0x64
 8005192:	7852      	ldrb	r2, [r2, #1]
 8005194:	4618      	mov	r0, r3
 8005196:	460d      	mov	r5, r1
 8005198:	e7b1      	b.n	80050fe <_strtod_l+0x1d6>
 800519a:	f04f 0900 	mov.w	r9, #0
 800519e:	2301      	movs	r3, #1
 80051a0:	e77d      	b.n	800509e <_strtod_l+0x176>
 80051a2:	f04f 0c00 	mov.w	ip, #0
 80051a6:	1ca2      	adds	r2, r4, #2
 80051a8:	9219      	str	r2, [sp, #100]	@ 0x64
 80051aa:	78a2      	ldrb	r2, [r4, #2]
 80051ac:	e785      	b.n	80050ba <_strtod_l+0x192>
 80051ae:	f04f 0c01 	mov.w	ip, #1
 80051b2:	e7f8      	b.n	80051a6 <_strtod_l+0x27e>
 80051b4:	08007078 	.word	0x08007078
 80051b8:	08007060 	.word	0x08007060
 80051bc:	7ff00000 	.word	0x7ff00000
 80051c0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80051c2:	1c51      	adds	r1, r2, #1
 80051c4:	9119      	str	r1, [sp, #100]	@ 0x64
 80051c6:	7852      	ldrb	r2, [r2, #1]
 80051c8:	2a30      	cmp	r2, #48	@ 0x30
 80051ca:	d0f9      	beq.n	80051c0 <_strtod_l+0x298>
 80051cc:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 80051d0:	2908      	cmp	r1, #8
 80051d2:	f63f af78 	bhi.w	80050c6 <_strtod_l+0x19e>
 80051d6:	3a30      	subs	r2, #48	@ 0x30
 80051d8:	920e      	str	r2, [sp, #56]	@ 0x38
 80051da:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80051dc:	920f      	str	r2, [sp, #60]	@ 0x3c
 80051de:	f04f 080a 	mov.w	r8, #10
 80051e2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80051e4:	1c56      	adds	r6, r2, #1
 80051e6:	9619      	str	r6, [sp, #100]	@ 0x64
 80051e8:	7852      	ldrb	r2, [r2, #1]
 80051ea:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80051ee:	f1be 0f09 	cmp.w	lr, #9
 80051f2:	d939      	bls.n	8005268 <_strtod_l+0x340>
 80051f4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80051f6:	1a76      	subs	r6, r6, r1
 80051f8:	2e08      	cmp	r6, #8
 80051fa:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80051fe:	dc03      	bgt.n	8005208 <_strtod_l+0x2e0>
 8005200:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8005202:	4588      	cmp	r8, r1
 8005204:	bfa8      	it	ge
 8005206:	4688      	movge	r8, r1
 8005208:	f1bc 0f00 	cmp.w	ip, #0
 800520c:	d001      	beq.n	8005212 <_strtod_l+0x2ea>
 800520e:	f1c8 0800 	rsb	r8, r8, #0
 8005212:	2d00      	cmp	r5, #0
 8005214:	d14e      	bne.n	80052b4 <_strtod_l+0x38c>
 8005216:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005218:	4308      	orrs	r0, r1
 800521a:	f47f aebe 	bne.w	8004f9a <_strtod_l+0x72>
 800521e:	2b00      	cmp	r3, #0
 8005220:	f47f aed6 	bne.w	8004fd0 <_strtod_l+0xa8>
 8005224:	2a69      	cmp	r2, #105	@ 0x69
 8005226:	d028      	beq.n	800527a <_strtod_l+0x352>
 8005228:	dc25      	bgt.n	8005276 <_strtod_l+0x34e>
 800522a:	2a49      	cmp	r2, #73	@ 0x49
 800522c:	d025      	beq.n	800527a <_strtod_l+0x352>
 800522e:	2a4e      	cmp	r2, #78	@ 0x4e
 8005230:	f47f aece 	bne.w	8004fd0 <_strtod_l+0xa8>
 8005234:	499b      	ldr	r1, [pc, #620]	@ (80054a4 <_strtod_l+0x57c>)
 8005236:	a819      	add	r0, sp, #100	@ 0x64
 8005238:	f001 fbc6 	bl	80069c8 <__match>
 800523c:	2800      	cmp	r0, #0
 800523e:	f43f aec7 	beq.w	8004fd0 <_strtod_l+0xa8>
 8005242:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005244:	781b      	ldrb	r3, [r3, #0]
 8005246:	2b28      	cmp	r3, #40	@ 0x28
 8005248:	d12e      	bne.n	80052a8 <_strtod_l+0x380>
 800524a:	4997      	ldr	r1, [pc, #604]	@ (80054a8 <_strtod_l+0x580>)
 800524c:	aa1c      	add	r2, sp, #112	@ 0x70
 800524e:	a819      	add	r0, sp, #100	@ 0x64
 8005250:	f001 fbce 	bl	80069f0 <__hexnan>
 8005254:	2805      	cmp	r0, #5
 8005256:	d127      	bne.n	80052a8 <_strtod_l+0x380>
 8005258:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800525a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800525e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8005262:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8005266:	e698      	b.n	8004f9a <_strtod_l+0x72>
 8005268:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800526a:	fb08 2101 	mla	r1, r8, r1, r2
 800526e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8005272:	920e      	str	r2, [sp, #56]	@ 0x38
 8005274:	e7b5      	b.n	80051e2 <_strtod_l+0x2ba>
 8005276:	2a6e      	cmp	r2, #110	@ 0x6e
 8005278:	e7da      	b.n	8005230 <_strtod_l+0x308>
 800527a:	498c      	ldr	r1, [pc, #560]	@ (80054ac <_strtod_l+0x584>)
 800527c:	a819      	add	r0, sp, #100	@ 0x64
 800527e:	f001 fba3 	bl	80069c8 <__match>
 8005282:	2800      	cmp	r0, #0
 8005284:	f43f aea4 	beq.w	8004fd0 <_strtod_l+0xa8>
 8005288:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800528a:	4989      	ldr	r1, [pc, #548]	@ (80054b0 <_strtod_l+0x588>)
 800528c:	3b01      	subs	r3, #1
 800528e:	a819      	add	r0, sp, #100	@ 0x64
 8005290:	9319      	str	r3, [sp, #100]	@ 0x64
 8005292:	f001 fb99 	bl	80069c8 <__match>
 8005296:	b910      	cbnz	r0, 800529e <_strtod_l+0x376>
 8005298:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800529a:	3301      	adds	r3, #1
 800529c:	9319      	str	r3, [sp, #100]	@ 0x64
 800529e:	f8df b220 	ldr.w	fp, [pc, #544]	@ 80054c0 <_strtod_l+0x598>
 80052a2:	f04f 0a00 	mov.w	sl, #0
 80052a6:	e678      	b.n	8004f9a <_strtod_l+0x72>
 80052a8:	4882      	ldr	r0, [pc, #520]	@ (80054b4 <_strtod_l+0x58c>)
 80052aa:	f001 f8c9 	bl	8006440 <nan>
 80052ae:	ec5b ab10 	vmov	sl, fp, d0
 80052b2:	e672      	b.n	8004f9a <_strtod_l+0x72>
 80052b4:	eba8 0309 	sub.w	r3, r8, r9
 80052b8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80052ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80052bc:	2f00      	cmp	r7, #0
 80052be:	bf08      	it	eq
 80052c0:	462f      	moveq	r7, r5
 80052c2:	2d10      	cmp	r5, #16
 80052c4:	462c      	mov	r4, r5
 80052c6:	bfa8      	it	ge
 80052c8:	2410      	movge	r4, #16
 80052ca:	f7fb f923 	bl	8000514 <__aeabi_ui2d>
 80052ce:	2d09      	cmp	r5, #9
 80052d0:	4682      	mov	sl, r0
 80052d2:	468b      	mov	fp, r1
 80052d4:	dc13      	bgt.n	80052fe <_strtod_l+0x3d6>
 80052d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80052d8:	2b00      	cmp	r3, #0
 80052da:	f43f ae5e 	beq.w	8004f9a <_strtod_l+0x72>
 80052de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80052e0:	dd78      	ble.n	80053d4 <_strtod_l+0x4ac>
 80052e2:	2b16      	cmp	r3, #22
 80052e4:	dc5f      	bgt.n	80053a6 <_strtod_l+0x47e>
 80052e6:	4974      	ldr	r1, [pc, #464]	@ (80054b8 <_strtod_l+0x590>)
 80052e8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80052ec:	e9d1 0100 	ldrd	r0, r1, [r1]
 80052f0:	4652      	mov	r2, sl
 80052f2:	465b      	mov	r3, fp
 80052f4:	f7fb f988 	bl	8000608 <__aeabi_dmul>
 80052f8:	4682      	mov	sl, r0
 80052fa:	468b      	mov	fp, r1
 80052fc:	e64d      	b.n	8004f9a <_strtod_l+0x72>
 80052fe:	4b6e      	ldr	r3, [pc, #440]	@ (80054b8 <_strtod_l+0x590>)
 8005300:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8005304:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8005308:	f7fb f97e 	bl	8000608 <__aeabi_dmul>
 800530c:	4682      	mov	sl, r0
 800530e:	9808      	ldr	r0, [sp, #32]
 8005310:	468b      	mov	fp, r1
 8005312:	f7fb f8ff 	bl	8000514 <__aeabi_ui2d>
 8005316:	4602      	mov	r2, r0
 8005318:	460b      	mov	r3, r1
 800531a:	4650      	mov	r0, sl
 800531c:	4659      	mov	r1, fp
 800531e:	f7fa ffbd 	bl	800029c <__adddf3>
 8005322:	2d0f      	cmp	r5, #15
 8005324:	4682      	mov	sl, r0
 8005326:	468b      	mov	fp, r1
 8005328:	ddd5      	ble.n	80052d6 <_strtod_l+0x3ae>
 800532a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800532c:	1b2c      	subs	r4, r5, r4
 800532e:	441c      	add	r4, r3
 8005330:	2c00      	cmp	r4, #0
 8005332:	f340 8096 	ble.w	8005462 <_strtod_l+0x53a>
 8005336:	f014 030f 	ands.w	r3, r4, #15
 800533a:	d00a      	beq.n	8005352 <_strtod_l+0x42a>
 800533c:	495e      	ldr	r1, [pc, #376]	@ (80054b8 <_strtod_l+0x590>)
 800533e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005342:	4652      	mov	r2, sl
 8005344:	465b      	mov	r3, fp
 8005346:	e9d1 0100 	ldrd	r0, r1, [r1]
 800534a:	f7fb f95d 	bl	8000608 <__aeabi_dmul>
 800534e:	4682      	mov	sl, r0
 8005350:	468b      	mov	fp, r1
 8005352:	f034 040f 	bics.w	r4, r4, #15
 8005356:	d073      	beq.n	8005440 <_strtod_l+0x518>
 8005358:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800535c:	dd48      	ble.n	80053f0 <_strtod_l+0x4c8>
 800535e:	2400      	movs	r4, #0
 8005360:	46a0      	mov	r8, r4
 8005362:	940a      	str	r4, [sp, #40]	@ 0x28
 8005364:	46a1      	mov	r9, r4
 8005366:	9a05      	ldr	r2, [sp, #20]
 8005368:	f8df b154 	ldr.w	fp, [pc, #340]	@ 80054c0 <_strtod_l+0x598>
 800536c:	2322      	movs	r3, #34	@ 0x22
 800536e:	6013      	str	r3, [r2, #0]
 8005370:	f04f 0a00 	mov.w	sl, #0
 8005374:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005376:	2b00      	cmp	r3, #0
 8005378:	f43f ae0f 	beq.w	8004f9a <_strtod_l+0x72>
 800537c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800537e:	9805      	ldr	r0, [sp, #20]
 8005380:	f7ff f942 	bl	8004608 <_Bfree>
 8005384:	9805      	ldr	r0, [sp, #20]
 8005386:	4649      	mov	r1, r9
 8005388:	f7ff f93e 	bl	8004608 <_Bfree>
 800538c:	9805      	ldr	r0, [sp, #20]
 800538e:	4641      	mov	r1, r8
 8005390:	f7ff f93a 	bl	8004608 <_Bfree>
 8005394:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005396:	9805      	ldr	r0, [sp, #20]
 8005398:	f7ff f936 	bl	8004608 <_Bfree>
 800539c:	9805      	ldr	r0, [sp, #20]
 800539e:	4621      	mov	r1, r4
 80053a0:	f7ff f932 	bl	8004608 <_Bfree>
 80053a4:	e5f9      	b.n	8004f9a <_strtod_l+0x72>
 80053a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80053a8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 80053ac:	4293      	cmp	r3, r2
 80053ae:	dbbc      	blt.n	800532a <_strtod_l+0x402>
 80053b0:	4c41      	ldr	r4, [pc, #260]	@ (80054b8 <_strtod_l+0x590>)
 80053b2:	f1c5 050f 	rsb	r5, r5, #15
 80053b6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80053ba:	4652      	mov	r2, sl
 80053bc:	465b      	mov	r3, fp
 80053be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80053c2:	f7fb f921 	bl	8000608 <__aeabi_dmul>
 80053c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80053c8:	1b5d      	subs	r5, r3, r5
 80053ca:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80053ce:	e9d4 2300 	ldrd	r2, r3, [r4]
 80053d2:	e78f      	b.n	80052f4 <_strtod_l+0x3cc>
 80053d4:	3316      	adds	r3, #22
 80053d6:	dba8      	blt.n	800532a <_strtod_l+0x402>
 80053d8:	4b37      	ldr	r3, [pc, #220]	@ (80054b8 <_strtod_l+0x590>)
 80053da:	eba9 0808 	sub.w	r8, r9, r8
 80053de:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 80053e2:	e9d8 2300 	ldrd	r2, r3, [r8]
 80053e6:	4650      	mov	r0, sl
 80053e8:	4659      	mov	r1, fp
 80053ea:	f7fb fa37 	bl	800085c <__aeabi_ddiv>
 80053ee:	e783      	b.n	80052f8 <_strtod_l+0x3d0>
 80053f0:	4b32      	ldr	r3, [pc, #200]	@ (80054bc <_strtod_l+0x594>)
 80053f2:	9308      	str	r3, [sp, #32]
 80053f4:	2300      	movs	r3, #0
 80053f6:	1124      	asrs	r4, r4, #4
 80053f8:	4650      	mov	r0, sl
 80053fa:	4659      	mov	r1, fp
 80053fc:	461e      	mov	r6, r3
 80053fe:	2c01      	cmp	r4, #1
 8005400:	dc21      	bgt.n	8005446 <_strtod_l+0x51e>
 8005402:	b10b      	cbz	r3, 8005408 <_strtod_l+0x4e0>
 8005404:	4682      	mov	sl, r0
 8005406:	468b      	mov	fp, r1
 8005408:	492c      	ldr	r1, [pc, #176]	@ (80054bc <_strtod_l+0x594>)
 800540a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800540e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8005412:	4652      	mov	r2, sl
 8005414:	465b      	mov	r3, fp
 8005416:	e9d1 0100 	ldrd	r0, r1, [r1]
 800541a:	f7fb f8f5 	bl	8000608 <__aeabi_dmul>
 800541e:	4b28      	ldr	r3, [pc, #160]	@ (80054c0 <_strtod_l+0x598>)
 8005420:	460a      	mov	r2, r1
 8005422:	400b      	ands	r3, r1
 8005424:	4927      	ldr	r1, [pc, #156]	@ (80054c4 <_strtod_l+0x59c>)
 8005426:	428b      	cmp	r3, r1
 8005428:	4682      	mov	sl, r0
 800542a:	d898      	bhi.n	800535e <_strtod_l+0x436>
 800542c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8005430:	428b      	cmp	r3, r1
 8005432:	bf86      	itte	hi
 8005434:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 80054c8 <_strtod_l+0x5a0>
 8005438:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 800543c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8005440:	2300      	movs	r3, #0
 8005442:	9308      	str	r3, [sp, #32]
 8005444:	e07a      	b.n	800553c <_strtod_l+0x614>
 8005446:	07e2      	lsls	r2, r4, #31
 8005448:	d505      	bpl.n	8005456 <_strtod_l+0x52e>
 800544a:	9b08      	ldr	r3, [sp, #32]
 800544c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005450:	f7fb f8da 	bl	8000608 <__aeabi_dmul>
 8005454:	2301      	movs	r3, #1
 8005456:	9a08      	ldr	r2, [sp, #32]
 8005458:	3208      	adds	r2, #8
 800545a:	3601      	adds	r6, #1
 800545c:	1064      	asrs	r4, r4, #1
 800545e:	9208      	str	r2, [sp, #32]
 8005460:	e7cd      	b.n	80053fe <_strtod_l+0x4d6>
 8005462:	d0ed      	beq.n	8005440 <_strtod_l+0x518>
 8005464:	4264      	negs	r4, r4
 8005466:	f014 020f 	ands.w	r2, r4, #15
 800546a:	d00a      	beq.n	8005482 <_strtod_l+0x55a>
 800546c:	4b12      	ldr	r3, [pc, #72]	@ (80054b8 <_strtod_l+0x590>)
 800546e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005472:	4650      	mov	r0, sl
 8005474:	4659      	mov	r1, fp
 8005476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800547a:	f7fb f9ef 	bl	800085c <__aeabi_ddiv>
 800547e:	4682      	mov	sl, r0
 8005480:	468b      	mov	fp, r1
 8005482:	1124      	asrs	r4, r4, #4
 8005484:	d0dc      	beq.n	8005440 <_strtod_l+0x518>
 8005486:	2c1f      	cmp	r4, #31
 8005488:	dd20      	ble.n	80054cc <_strtod_l+0x5a4>
 800548a:	2400      	movs	r4, #0
 800548c:	46a0      	mov	r8, r4
 800548e:	940a      	str	r4, [sp, #40]	@ 0x28
 8005490:	46a1      	mov	r9, r4
 8005492:	9a05      	ldr	r2, [sp, #20]
 8005494:	2322      	movs	r3, #34	@ 0x22
 8005496:	f04f 0a00 	mov.w	sl, #0
 800549a:	f04f 0b00 	mov.w	fp, #0
 800549e:	6013      	str	r3, [r2, #0]
 80054a0:	e768      	b.n	8005374 <_strtod_l+0x44c>
 80054a2:	bf00      	nop
 80054a4:	08006e4d 	.word	0x08006e4d
 80054a8:	08007064 	.word	0x08007064
 80054ac:	08006e45 	.word	0x08006e45
 80054b0:	08006e7c 	.word	0x08006e7c
 80054b4:	0800720d 	.word	0x0800720d
 80054b8:	08006f98 	.word	0x08006f98
 80054bc:	08006f70 	.word	0x08006f70
 80054c0:	7ff00000 	.word	0x7ff00000
 80054c4:	7ca00000 	.word	0x7ca00000
 80054c8:	7fefffff 	.word	0x7fefffff
 80054cc:	f014 0310 	ands.w	r3, r4, #16
 80054d0:	bf18      	it	ne
 80054d2:	236a      	movne	r3, #106	@ 0x6a
 80054d4:	4ea9      	ldr	r6, [pc, #676]	@ (800577c <_strtod_l+0x854>)
 80054d6:	9308      	str	r3, [sp, #32]
 80054d8:	4650      	mov	r0, sl
 80054da:	4659      	mov	r1, fp
 80054dc:	2300      	movs	r3, #0
 80054de:	07e2      	lsls	r2, r4, #31
 80054e0:	d504      	bpl.n	80054ec <_strtod_l+0x5c4>
 80054e2:	e9d6 2300 	ldrd	r2, r3, [r6]
 80054e6:	f7fb f88f 	bl	8000608 <__aeabi_dmul>
 80054ea:	2301      	movs	r3, #1
 80054ec:	1064      	asrs	r4, r4, #1
 80054ee:	f106 0608 	add.w	r6, r6, #8
 80054f2:	d1f4      	bne.n	80054de <_strtod_l+0x5b6>
 80054f4:	b10b      	cbz	r3, 80054fa <_strtod_l+0x5d2>
 80054f6:	4682      	mov	sl, r0
 80054f8:	468b      	mov	fp, r1
 80054fa:	9b08      	ldr	r3, [sp, #32]
 80054fc:	b1b3      	cbz	r3, 800552c <_strtod_l+0x604>
 80054fe:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8005502:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8005506:	2b00      	cmp	r3, #0
 8005508:	4659      	mov	r1, fp
 800550a:	dd0f      	ble.n	800552c <_strtod_l+0x604>
 800550c:	2b1f      	cmp	r3, #31
 800550e:	dd55      	ble.n	80055bc <_strtod_l+0x694>
 8005510:	2b34      	cmp	r3, #52	@ 0x34
 8005512:	bfde      	ittt	le
 8005514:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 8005518:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800551c:	4093      	lslle	r3, r2
 800551e:	f04f 0a00 	mov.w	sl, #0
 8005522:	bfcc      	ite	gt
 8005524:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8005528:	ea03 0b01 	andle.w	fp, r3, r1
 800552c:	2200      	movs	r2, #0
 800552e:	2300      	movs	r3, #0
 8005530:	4650      	mov	r0, sl
 8005532:	4659      	mov	r1, fp
 8005534:	f7fb fad0 	bl	8000ad8 <__aeabi_dcmpeq>
 8005538:	2800      	cmp	r0, #0
 800553a:	d1a6      	bne.n	800548a <_strtod_l+0x562>
 800553c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800553e:	9300      	str	r3, [sp, #0]
 8005540:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8005542:	9805      	ldr	r0, [sp, #20]
 8005544:	462b      	mov	r3, r5
 8005546:	463a      	mov	r2, r7
 8005548:	f7ff f8c6 	bl	80046d8 <__s2b>
 800554c:	900a      	str	r0, [sp, #40]	@ 0x28
 800554e:	2800      	cmp	r0, #0
 8005550:	f43f af05 	beq.w	800535e <_strtod_l+0x436>
 8005554:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005556:	2a00      	cmp	r2, #0
 8005558:	eba9 0308 	sub.w	r3, r9, r8
 800555c:	bfa8      	it	ge
 800555e:	2300      	movge	r3, #0
 8005560:	9312      	str	r3, [sp, #72]	@ 0x48
 8005562:	2400      	movs	r4, #0
 8005564:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8005568:	9316      	str	r3, [sp, #88]	@ 0x58
 800556a:	46a0      	mov	r8, r4
 800556c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800556e:	9805      	ldr	r0, [sp, #20]
 8005570:	6859      	ldr	r1, [r3, #4]
 8005572:	f7ff f809 	bl	8004588 <_Balloc>
 8005576:	4681      	mov	r9, r0
 8005578:	2800      	cmp	r0, #0
 800557a:	f43f aef4 	beq.w	8005366 <_strtod_l+0x43e>
 800557e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005580:	691a      	ldr	r2, [r3, #16]
 8005582:	3202      	adds	r2, #2
 8005584:	f103 010c 	add.w	r1, r3, #12
 8005588:	0092      	lsls	r2, r2, #2
 800558a:	300c      	adds	r0, #12
 800558c:	f000 ff48 	bl	8006420 <memcpy>
 8005590:	ec4b ab10 	vmov	d0, sl, fp
 8005594:	9805      	ldr	r0, [sp, #20]
 8005596:	aa1c      	add	r2, sp, #112	@ 0x70
 8005598:	a91b      	add	r1, sp, #108	@ 0x6c
 800559a:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800559e:	f7ff fbd7 	bl	8004d50 <__d2b>
 80055a2:	901a      	str	r0, [sp, #104]	@ 0x68
 80055a4:	2800      	cmp	r0, #0
 80055a6:	f43f aede 	beq.w	8005366 <_strtod_l+0x43e>
 80055aa:	9805      	ldr	r0, [sp, #20]
 80055ac:	2101      	movs	r1, #1
 80055ae:	f7ff f929 	bl	8004804 <__i2b>
 80055b2:	4680      	mov	r8, r0
 80055b4:	b948      	cbnz	r0, 80055ca <_strtod_l+0x6a2>
 80055b6:	f04f 0800 	mov.w	r8, #0
 80055ba:	e6d4      	b.n	8005366 <_strtod_l+0x43e>
 80055bc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80055c0:	fa02 f303 	lsl.w	r3, r2, r3
 80055c4:	ea03 0a0a 	and.w	sl, r3, sl
 80055c8:	e7b0      	b.n	800552c <_strtod_l+0x604>
 80055ca:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80055cc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80055ce:	2d00      	cmp	r5, #0
 80055d0:	bfab      	itete	ge
 80055d2:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80055d4:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80055d6:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80055d8:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80055da:	bfac      	ite	ge
 80055dc:	18ef      	addge	r7, r5, r3
 80055de:	1b5e      	sublt	r6, r3, r5
 80055e0:	9b08      	ldr	r3, [sp, #32]
 80055e2:	1aed      	subs	r5, r5, r3
 80055e4:	4415      	add	r5, r2
 80055e6:	4b66      	ldr	r3, [pc, #408]	@ (8005780 <_strtod_l+0x858>)
 80055e8:	3d01      	subs	r5, #1
 80055ea:	429d      	cmp	r5, r3
 80055ec:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80055f0:	da50      	bge.n	8005694 <_strtod_l+0x76c>
 80055f2:	1b5b      	subs	r3, r3, r5
 80055f4:	2b1f      	cmp	r3, #31
 80055f6:	eba2 0203 	sub.w	r2, r2, r3
 80055fa:	f04f 0101 	mov.w	r1, #1
 80055fe:	dc3d      	bgt.n	800567c <_strtod_l+0x754>
 8005600:	fa01 f303 	lsl.w	r3, r1, r3
 8005604:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005606:	2300      	movs	r3, #0
 8005608:	9310      	str	r3, [sp, #64]	@ 0x40
 800560a:	18bd      	adds	r5, r7, r2
 800560c:	9b08      	ldr	r3, [sp, #32]
 800560e:	42af      	cmp	r7, r5
 8005610:	4416      	add	r6, r2
 8005612:	441e      	add	r6, r3
 8005614:	463b      	mov	r3, r7
 8005616:	bfa8      	it	ge
 8005618:	462b      	movge	r3, r5
 800561a:	42b3      	cmp	r3, r6
 800561c:	bfa8      	it	ge
 800561e:	4633      	movge	r3, r6
 8005620:	2b00      	cmp	r3, #0
 8005622:	bfc2      	ittt	gt
 8005624:	1aed      	subgt	r5, r5, r3
 8005626:	1af6      	subgt	r6, r6, r3
 8005628:	1aff      	subgt	r7, r7, r3
 800562a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800562c:	2b00      	cmp	r3, #0
 800562e:	dd16      	ble.n	800565e <_strtod_l+0x736>
 8005630:	4641      	mov	r1, r8
 8005632:	9805      	ldr	r0, [sp, #20]
 8005634:	461a      	mov	r2, r3
 8005636:	f7ff f9a5 	bl	8004984 <__pow5mult>
 800563a:	4680      	mov	r8, r0
 800563c:	2800      	cmp	r0, #0
 800563e:	d0ba      	beq.n	80055b6 <_strtod_l+0x68e>
 8005640:	4601      	mov	r1, r0
 8005642:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8005644:	9805      	ldr	r0, [sp, #20]
 8005646:	f7ff f8f3 	bl	8004830 <__multiply>
 800564a:	900e      	str	r0, [sp, #56]	@ 0x38
 800564c:	2800      	cmp	r0, #0
 800564e:	f43f ae8a 	beq.w	8005366 <_strtod_l+0x43e>
 8005652:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005654:	9805      	ldr	r0, [sp, #20]
 8005656:	f7fe ffd7 	bl	8004608 <_Bfree>
 800565a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800565c:	931a      	str	r3, [sp, #104]	@ 0x68
 800565e:	2d00      	cmp	r5, #0
 8005660:	dc1d      	bgt.n	800569e <_strtod_l+0x776>
 8005662:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005664:	2b00      	cmp	r3, #0
 8005666:	dd23      	ble.n	80056b0 <_strtod_l+0x788>
 8005668:	4649      	mov	r1, r9
 800566a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800566c:	9805      	ldr	r0, [sp, #20]
 800566e:	f7ff f989 	bl	8004984 <__pow5mult>
 8005672:	4681      	mov	r9, r0
 8005674:	b9e0      	cbnz	r0, 80056b0 <_strtod_l+0x788>
 8005676:	f04f 0900 	mov.w	r9, #0
 800567a:	e674      	b.n	8005366 <_strtod_l+0x43e>
 800567c:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8005680:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8005684:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8005688:	35e2      	adds	r5, #226	@ 0xe2
 800568a:	fa01 f305 	lsl.w	r3, r1, r5
 800568e:	9310      	str	r3, [sp, #64]	@ 0x40
 8005690:	9113      	str	r1, [sp, #76]	@ 0x4c
 8005692:	e7ba      	b.n	800560a <_strtod_l+0x6e2>
 8005694:	2300      	movs	r3, #0
 8005696:	9310      	str	r3, [sp, #64]	@ 0x40
 8005698:	2301      	movs	r3, #1
 800569a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800569c:	e7b5      	b.n	800560a <_strtod_l+0x6e2>
 800569e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80056a0:	9805      	ldr	r0, [sp, #20]
 80056a2:	462a      	mov	r2, r5
 80056a4:	f7ff f9c8 	bl	8004a38 <__lshift>
 80056a8:	901a      	str	r0, [sp, #104]	@ 0x68
 80056aa:	2800      	cmp	r0, #0
 80056ac:	d1d9      	bne.n	8005662 <_strtod_l+0x73a>
 80056ae:	e65a      	b.n	8005366 <_strtod_l+0x43e>
 80056b0:	2e00      	cmp	r6, #0
 80056b2:	dd07      	ble.n	80056c4 <_strtod_l+0x79c>
 80056b4:	4649      	mov	r1, r9
 80056b6:	9805      	ldr	r0, [sp, #20]
 80056b8:	4632      	mov	r2, r6
 80056ba:	f7ff f9bd 	bl	8004a38 <__lshift>
 80056be:	4681      	mov	r9, r0
 80056c0:	2800      	cmp	r0, #0
 80056c2:	d0d8      	beq.n	8005676 <_strtod_l+0x74e>
 80056c4:	2f00      	cmp	r7, #0
 80056c6:	dd08      	ble.n	80056da <_strtod_l+0x7b2>
 80056c8:	4641      	mov	r1, r8
 80056ca:	9805      	ldr	r0, [sp, #20]
 80056cc:	463a      	mov	r2, r7
 80056ce:	f7ff f9b3 	bl	8004a38 <__lshift>
 80056d2:	4680      	mov	r8, r0
 80056d4:	2800      	cmp	r0, #0
 80056d6:	f43f ae46 	beq.w	8005366 <_strtod_l+0x43e>
 80056da:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80056dc:	9805      	ldr	r0, [sp, #20]
 80056de:	464a      	mov	r2, r9
 80056e0:	f7ff fa32 	bl	8004b48 <__mdiff>
 80056e4:	4604      	mov	r4, r0
 80056e6:	2800      	cmp	r0, #0
 80056e8:	f43f ae3d 	beq.w	8005366 <_strtod_l+0x43e>
 80056ec:	68c3      	ldr	r3, [r0, #12]
 80056ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 80056f0:	2300      	movs	r3, #0
 80056f2:	60c3      	str	r3, [r0, #12]
 80056f4:	4641      	mov	r1, r8
 80056f6:	f7ff fa0b 	bl	8004b10 <__mcmp>
 80056fa:	2800      	cmp	r0, #0
 80056fc:	da46      	bge.n	800578c <_strtod_l+0x864>
 80056fe:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005700:	ea53 030a 	orrs.w	r3, r3, sl
 8005704:	d16c      	bne.n	80057e0 <_strtod_l+0x8b8>
 8005706:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800570a:	2b00      	cmp	r3, #0
 800570c:	d168      	bne.n	80057e0 <_strtod_l+0x8b8>
 800570e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005712:	0d1b      	lsrs	r3, r3, #20
 8005714:	051b      	lsls	r3, r3, #20
 8005716:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800571a:	d961      	bls.n	80057e0 <_strtod_l+0x8b8>
 800571c:	6963      	ldr	r3, [r4, #20]
 800571e:	b913      	cbnz	r3, 8005726 <_strtod_l+0x7fe>
 8005720:	6923      	ldr	r3, [r4, #16]
 8005722:	2b01      	cmp	r3, #1
 8005724:	dd5c      	ble.n	80057e0 <_strtod_l+0x8b8>
 8005726:	4621      	mov	r1, r4
 8005728:	2201      	movs	r2, #1
 800572a:	9805      	ldr	r0, [sp, #20]
 800572c:	f7ff f984 	bl	8004a38 <__lshift>
 8005730:	4641      	mov	r1, r8
 8005732:	4604      	mov	r4, r0
 8005734:	f7ff f9ec 	bl	8004b10 <__mcmp>
 8005738:	2800      	cmp	r0, #0
 800573a:	dd51      	ble.n	80057e0 <_strtod_l+0x8b8>
 800573c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005740:	9a08      	ldr	r2, [sp, #32]
 8005742:	0d1b      	lsrs	r3, r3, #20
 8005744:	051b      	lsls	r3, r3, #20
 8005746:	2a00      	cmp	r2, #0
 8005748:	d06b      	beq.n	8005822 <_strtod_l+0x8fa>
 800574a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800574e:	d868      	bhi.n	8005822 <_strtod_l+0x8fa>
 8005750:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8005754:	f67f ae9d 	bls.w	8005492 <_strtod_l+0x56a>
 8005758:	4b0a      	ldr	r3, [pc, #40]	@ (8005784 <_strtod_l+0x85c>)
 800575a:	4650      	mov	r0, sl
 800575c:	4659      	mov	r1, fp
 800575e:	2200      	movs	r2, #0
 8005760:	f7fa ff52 	bl	8000608 <__aeabi_dmul>
 8005764:	4b08      	ldr	r3, [pc, #32]	@ (8005788 <_strtod_l+0x860>)
 8005766:	400b      	ands	r3, r1
 8005768:	4682      	mov	sl, r0
 800576a:	468b      	mov	fp, r1
 800576c:	2b00      	cmp	r3, #0
 800576e:	f47f ae05 	bne.w	800537c <_strtod_l+0x454>
 8005772:	9a05      	ldr	r2, [sp, #20]
 8005774:	2322      	movs	r3, #34	@ 0x22
 8005776:	6013      	str	r3, [r2, #0]
 8005778:	e600      	b.n	800537c <_strtod_l+0x454>
 800577a:	bf00      	nop
 800577c:	08007090 	.word	0x08007090
 8005780:	fffffc02 	.word	0xfffffc02
 8005784:	39500000 	.word	0x39500000
 8005788:	7ff00000 	.word	0x7ff00000
 800578c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8005790:	d165      	bne.n	800585e <_strtod_l+0x936>
 8005792:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8005794:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005798:	b35a      	cbz	r2, 80057f2 <_strtod_l+0x8ca>
 800579a:	4a9f      	ldr	r2, [pc, #636]	@ (8005a18 <_strtod_l+0xaf0>)
 800579c:	4293      	cmp	r3, r2
 800579e:	d12b      	bne.n	80057f8 <_strtod_l+0x8d0>
 80057a0:	9b08      	ldr	r3, [sp, #32]
 80057a2:	4651      	mov	r1, sl
 80057a4:	b303      	cbz	r3, 80057e8 <_strtod_l+0x8c0>
 80057a6:	4b9d      	ldr	r3, [pc, #628]	@ (8005a1c <_strtod_l+0xaf4>)
 80057a8:	465a      	mov	r2, fp
 80057aa:	4013      	ands	r3, r2
 80057ac:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80057b0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80057b4:	d81b      	bhi.n	80057ee <_strtod_l+0x8c6>
 80057b6:	0d1b      	lsrs	r3, r3, #20
 80057b8:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80057bc:	fa02 f303 	lsl.w	r3, r2, r3
 80057c0:	4299      	cmp	r1, r3
 80057c2:	d119      	bne.n	80057f8 <_strtod_l+0x8d0>
 80057c4:	4b96      	ldr	r3, [pc, #600]	@ (8005a20 <_strtod_l+0xaf8>)
 80057c6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80057c8:	429a      	cmp	r2, r3
 80057ca:	d102      	bne.n	80057d2 <_strtod_l+0x8aa>
 80057cc:	3101      	adds	r1, #1
 80057ce:	f43f adca 	beq.w	8005366 <_strtod_l+0x43e>
 80057d2:	4b92      	ldr	r3, [pc, #584]	@ (8005a1c <_strtod_l+0xaf4>)
 80057d4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80057d6:	401a      	ands	r2, r3
 80057d8:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80057dc:	f04f 0a00 	mov.w	sl, #0
 80057e0:	9b08      	ldr	r3, [sp, #32]
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	d1b8      	bne.n	8005758 <_strtod_l+0x830>
 80057e6:	e5c9      	b.n	800537c <_strtod_l+0x454>
 80057e8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80057ec:	e7e8      	b.n	80057c0 <_strtod_l+0x898>
 80057ee:	4613      	mov	r3, r2
 80057f0:	e7e6      	b.n	80057c0 <_strtod_l+0x898>
 80057f2:	ea53 030a 	orrs.w	r3, r3, sl
 80057f6:	d0a1      	beq.n	800573c <_strtod_l+0x814>
 80057f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80057fa:	b1db      	cbz	r3, 8005834 <_strtod_l+0x90c>
 80057fc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80057fe:	4213      	tst	r3, r2
 8005800:	d0ee      	beq.n	80057e0 <_strtod_l+0x8b8>
 8005802:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005804:	9a08      	ldr	r2, [sp, #32]
 8005806:	4650      	mov	r0, sl
 8005808:	4659      	mov	r1, fp
 800580a:	b1bb      	cbz	r3, 800583c <_strtod_l+0x914>
 800580c:	f7ff fb6e 	bl	8004eec <sulp>
 8005810:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005814:	ec53 2b10 	vmov	r2, r3, d0
 8005818:	f7fa fd40 	bl	800029c <__adddf3>
 800581c:	4682      	mov	sl, r0
 800581e:	468b      	mov	fp, r1
 8005820:	e7de      	b.n	80057e0 <_strtod_l+0x8b8>
 8005822:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8005826:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800582a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800582e:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8005832:	e7d5      	b.n	80057e0 <_strtod_l+0x8b8>
 8005834:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005836:	ea13 0f0a 	tst.w	r3, sl
 800583a:	e7e1      	b.n	8005800 <_strtod_l+0x8d8>
 800583c:	f7ff fb56 	bl	8004eec <sulp>
 8005840:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005844:	ec53 2b10 	vmov	r2, r3, d0
 8005848:	f7fa fd26 	bl	8000298 <__aeabi_dsub>
 800584c:	2200      	movs	r2, #0
 800584e:	2300      	movs	r3, #0
 8005850:	4682      	mov	sl, r0
 8005852:	468b      	mov	fp, r1
 8005854:	f7fb f940 	bl	8000ad8 <__aeabi_dcmpeq>
 8005858:	2800      	cmp	r0, #0
 800585a:	d0c1      	beq.n	80057e0 <_strtod_l+0x8b8>
 800585c:	e619      	b.n	8005492 <_strtod_l+0x56a>
 800585e:	4641      	mov	r1, r8
 8005860:	4620      	mov	r0, r4
 8005862:	f7ff facd 	bl	8004e00 <__ratio>
 8005866:	ec57 6b10 	vmov	r6, r7, d0
 800586a:	2200      	movs	r2, #0
 800586c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8005870:	4630      	mov	r0, r6
 8005872:	4639      	mov	r1, r7
 8005874:	f7fb f944 	bl	8000b00 <__aeabi_dcmple>
 8005878:	2800      	cmp	r0, #0
 800587a:	d06f      	beq.n	800595c <_strtod_l+0xa34>
 800587c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800587e:	2b00      	cmp	r3, #0
 8005880:	d17a      	bne.n	8005978 <_strtod_l+0xa50>
 8005882:	f1ba 0f00 	cmp.w	sl, #0
 8005886:	d158      	bne.n	800593a <_strtod_l+0xa12>
 8005888:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800588a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800588e:	2b00      	cmp	r3, #0
 8005890:	d15a      	bne.n	8005948 <_strtod_l+0xa20>
 8005892:	4b64      	ldr	r3, [pc, #400]	@ (8005a24 <_strtod_l+0xafc>)
 8005894:	2200      	movs	r2, #0
 8005896:	4630      	mov	r0, r6
 8005898:	4639      	mov	r1, r7
 800589a:	f7fb f927 	bl	8000aec <__aeabi_dcmplt>
 800589e:	2800      	cmp	r0, #0
 80058a0:	d159      	bne.n	8005956 <_strtod_l+0xa2e>
 80058a2:	4630      	mov	r0, r6
 80058a4:	4639      	mov	r1, r7
 80058a6:	4b60      	ldr	r3, [pc, #384]	@ (8005a28 <_strtod_l+0xb00>)
 80058a8:	2200      	movs	r2, #0
 80058aa:	f7fa fead 	bl	8000608 <__aeabi_dmul>
 80058ae:	4606      	mov	r6, r0
 80058b0:	460f      	mov	r7, r1
 80058b2:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80058b6:	9606      	str	r6, [sp, #24]
 80058b8:	9307      	str	r3, [sp, #28]
 80058ba:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80058be:	4d57      	ldr	r5, [pc, #348]	@ (8005a1c <_strtod_l+0xaf4>)
 80058c0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80058c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058c6:	401d      	ands	r5, r3
 80058c8:	4b58      	ldr	r3, [pc, #352]	@ (8005a2c <_strtod_l+0xb04>)
 80058ca:	429d      	cmp	r5, r3
 80058cc:	f040 80b2 	bne.w	8005a34 <_strtod_l+0xb0c>
 80058d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058d2:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80058d6:	ec4b ab10 	vmov	d0, sl, fp
 80058da:	f7ff f9c9 	bl	8004c70 <__ulp>
 80058de:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80058e2:	ec51 0b10 	vmov	r0, r1, d0
 80058e6:	f7fa fe8f 	bl	8000608 <__aeabi_dmul>
 80058ea:	4652      	mov	r2, sl
 80058ec:	465b      	mov	r3, fp
 80058ee:	f7fa fcd5 	bl	800029c <__adddf3>
 80058f2:	460b      	mov	r3, r1
 80058f4:	4949      	ldr	r1, [pc, #292]	@ (8005a1c <_strtod_l+0xaf4>)
 80058f6:	4a4e      	ldr	r2, [pc, #312]	@ (8005a30 <_strtod_l+0xb08>)
 80058f8:	4019      	ands	r1, r3
 80058fa:	4291      	cmp	r1, r2
 80058fc:	4682      	mov	sl, r0
 80058fe:	d942      	bls.n	8005986 <_strtod_l+0xa5e>
 8005900:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005902:	4b47      	ldr	r3, [pc, #284]	@ (8005a20 <_strtod_l+0xaf8>)
 8005904:	429a      	cmp	r2, r3
 8005906:	d103      	bne.n	8005910 <_strtod_l+0x9e8>
 8005908:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800590a:	3301      	adds	r3, #1
 800590c:	f43f ad2b 	beq.w	8005366 <_strtod_l+0x43e>
 8005910:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 8005a20 <_strtod_l+0xaf8>
 8005914:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8005918:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800591a:	9805      	ldr	r0, [sp, #20]
 800591c:	f7fe fe74 	bl	8004608 <_Bfree>
 8005920:	9805      	ldr	r0, [sp, #20]
 8005922:	4649      	mov	r1, r9
 8005924:	f7fe fe70 	bl	8004608 <_Bfree>
 8005928:	9805      	ldr	r0, [sp, #20]
 800592a:	4641      	mov	r1, r8
 800592c:	f7fe fe6c 	bl	8004608 <_Bfree>
 8005930:	9805      	ldr	r0, [sp, #20]
 8005932:	4621      	mov	r1, r4
 8005934:	f7fe fe68 	bl	8004608 <_Bfree>
 8005938:	e618      	b.n	800556c <_strtod_l+0x644>
 800593a:	f1ba 0f01 	cmp.w	sl, #1
 800593e:	d103      	bne.n	8005948 <_strtod_l+0xa20>
 8005940:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005942:	2b00      	cmp	r3, #0
 8005944:	f43f ada5 	beq.w	8005492 <_strtod_l+0x56a>
 8005948:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 80059f8 <_strtod_l+0xad0>
 800594c:	4f35      	ldr	r7, [pc, #212]	@ (8005a24 <_strtod_l+0xafc>)
 800594e:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005952:	2600      	movs	r6, #0
 8005954:	e7b1      	b.n	80058ba <_strtod_l+0x992>
 8005956:	4f34      	ldr	r7, [pc, #208]	@ (8005a28 <_strtod_l+0xb00>)
 8005958:	2600      	movs	r6, #0
 800595a:	e7aa      	b.n	80058b2 <_strtod_l+0x98a>
 800595c:	4b32      	ldr	r3, [pc, #200]	@ (8005a28 <_strtod_l+0xb00>)
 800595e:	4630      	mov	r0, r6
 8005960:	4639      	mov	r1, r7
 8005962:	2200      	movs	r2, #0
 8005964:	f7fa fe50 	bl	8000608 <__aeabi_dmul>
 8005968:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800596a:	4606      	mov	r6, r0
 800596c:	460f      	mov	r7, r1
 800596e:	2b00      	cmp	r3, #0
 8005970:	d09f      	beq.n	80058b2 <_strtod_l+0x98a>
 8005972:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005976:	e7a0      	b.n	80058ba <_strtod_l+0x992>
 8005978:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8005a00 <_strtod_l+0xad8>
 800597c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005980:	ec57 6b17 	vmov	r6, r7, d7
 8005984:	e799      	b.n	80058ba <_strtod_l+0x992>
 8005986:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800598a:	9b08      	ldr	r3, [sp, #32]
 800598c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8005990:	2b00      	cmp	r3, #0
 8005992:	d1c1      	bne.n	8005918 <_strtod_l+0x9f0>
 8005994:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005998:	0d1b      	lsrs	r3, r3, #20
 800599a:	051b      	lsls	r3, r3, #20
 800599c:	429d      	cmp	r5, r3
 800599e:	d1bb      	bne.n	8005918 <_strtod_l+0x9f0>
 80059a0:	4630      	mov	r0, r6
 80059a2:	4639      	mov	r1, r7
 80059a4:	f7fb f990 	bl	8000cc8 <__aeabi_d2lz>
 80059a8:	f7fa fe00 	bl	80005ac <__aeabi_l2d>
 80059ac:	4602      	mov	r2, r0
 80059ae:	460b      	mov	r3, r1
 80059b0:	4630      	mov	r0, r6
 80059b2:	4639      	mov	r1, r7
 80059b4:	f7fa fc70 	bl	8000298 <__aeabi_dsub>
 80059b8:	460b      	mov	r3, r1
 80059ba:	4602      	mov	r2, r0
 80059bc:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80059c0:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80059c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80059c6:	ea46 060a 	orr.w	r6, r6, sl
 80059ca:	431e      	orrs	r6, r3
 80059cc:	d06f      	beq.n	8005aae <_strtod_l+0xb86>
 80059ce:	a30e      	add	r3, pc, #56	@ (adr r3, 8005a08 <_strtod_l+0xae0>)
 80059d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80059d4:	f7fb f88a 	bl	8000aec <__aeabi_dcmplt>
 80059d8:	2800      	cmp	r0, #0
 80059da:	f47f accf 	bne.w	800537c <_strtod_l+0x454>
 80059de:	a30c      	add	r3, pc, #48	@ (adr r3, 8005a10 <_strtod_l+0xae8>)
 80059e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80059e4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80059e8:	f7fb f89e 	bl	8000b28 <__aeabi_dcmpgt>
 80059ec:	2800      	cmp	r0, #0
 80059ee:	d093      	beq.n	8005918 <_strtod_l+0x9f0>
 80059f0:	e4c4      	b.n	800537c <_strtod_l+0x454>
 80059f2:	bf00      	nop
 80059f4:	f3af 8000 	nop.w
 80059f8:	00000000 	.word	0x00000000
 80059fc:	bff00000 	.word	0xbff00000
 8005a00:	00000000 	.word	0x00000000
 8005a04:	3ff00000 	.word	0x3ff00000
 8005a08:	94a03595 	.word	0x94a03595
 8005a0c:	3fdfffff 	.word	0x3fdfffff
 8005a10:	35afe535 	.word	0x35afe535
 8005a14:	3fe00000 	.word	0x3fe00000
 8005a18:	000fffff 	.word	0x000fffff
 8005a1c:	7ff00000 	.word	0x7ff00000
 8005a20:	7fefffff 	.word	0x7fefffff
 8005a24:	3ff00000 	.word	0x3ff00000
 8005a28:	3fe00000 	.word	0x3fe00000
 8005a2c:	7fe00000 	.word	0x7fe00000
 8005a30:	7c9fffff 	.word	0x7c9fffff
 8005a34:	9b08      	ldr	r3, [sp, #32]
 8005a36:	b323      	cbz	r3, 8005a82 <_strtod_l+0xb5a>
 8005a38:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8005a3c:	d821      	bhi.n	8005a82 <_strtod_l+0xb5a>
 8005a3e:	a328      	add	r3, pc, #160	@ (adr r3, 8005ae0 <_strtod_l+0xbb8>)
 8005a40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a44:	4630      	mov	r0, r6
 8005a46:	4639      	mov	r1, r7
 8005a48:	f7fb f85a 	bl	8000b00 <__aeabi_dcmple>
 8005a4c:	b1a0      	cbz	r0, 8005a78 <_strtod_l+0xb50>
 8005a4e:	4639      	mov	r1, r7
 8005a50:	4630      	mov	r0, r6
 8005a52:	f7fb f8b1 	bl	8000bb8 <__aeabi_d2uiz>
 8005a56:	2801      	cmp	r0, #1
 8005a58:	bf38      	it	cc
 8005a5a:	2001      	movcc	r0, #1
 8005a5c:	f7fa fd5a 	bl	8000514 <__aeabi_ui2d>
 8005a60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005a62:	4606      	mov	r6, r0
 8005a64:	460f      	mov	r7, r1
 8005a66:	b9fb      	cbnz	r3, 8005aa8 <_strtod_l+0xb80>
 8005a68:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8005a6c:	9014      	str	r0, [sp, #80]	@ 0x50
 8005a6e:	9315      	str	r3, [sp, #84]	@ 0x54
 8005a70:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8005a74:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005a78:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005a7a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8005a7e:	1b5b      	subs	r3, r3, r5
 8005a80:	9311      	str	r3, [sp, #68]	@ 0x44
 8005a82:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8005a86:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8005a8a:	f7ff f8f1 	bl	8004c70 <__ulp>
 8005a8e:	4650      	mov	r0, sl
 8005a90:	ec53 2b10 	vmov	r2, r3, d0
 8005a94:	4659      	mov	r1, fp
 8005a96:	f7fa fdb7 	bl	8000608 <__aeabi_dmul>
 8005a9a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8005a9e:	f7fa fbfd 	bl	800029c <__adddf3>
 8005aa2:	4682      	mov	sl, r0
 8005aa4:	468b      	mov	fp, r1
 8005aa6:	e770      	b.n	800598a <_strtod_l+0xa62>
 8005aa8:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8005aac:	e7e0      	b.n	8005a70 <_strtod_l+0xb48>
 8005aae:	a30e      	add	r3, pc, #56	@ (adr r3, 8005ae8 <_strtod_l+0xbc0>)
 8005ab0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ab4:	f7fb f81a 	bl	8000aec <__aeabi_dcmplt>
 8005ab8:	e798      	b.n	80059ec <_strtod_l+0xac4>
 8005aba:	2300      	movs	r3, #0
 8005abc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005abe:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8005ac0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005ac2:	6013      	str	r3, [r2, #0]
 8005ac4:	f7ff ba6d 	b.w	8004fa2 <_strtod_l+0x7a>
 8005ac8:	2a65      	cmp	r2, #101	@ 0x65
 8005aca:	f43f ab66 	beq.w	800519a <_strtod_l+0x272>
 8005ace:	2a45      	cmp	r2, #69	@ 0x45
 8005ad0:	f43f ab63 	beq.w	800519a <_strtod_l+0x272>
 8005ad4:	2301      	movs	r3, #1
 8005ad6:	f7ff bb9e 	b.w	8005216 <_strtod_l+0x2ee>
 8005ada:	bf00      	nop
 8005adc:	f3af 8000 	nop.w
 8005ae0:	ffc00000 	.word	0xffc00000
 8005ae4:	41dfffff 	.word	0x41dfffff
 8005ae8:	94a03595 	.word	0x94a03595
 8005aec:	3fcfffff 	.word	0x3fcfffff

08005af0 <_strtod_r>:
 8005af0:	4b01      	ldr	r3, [pc, #4]	@ (8005af8 <_strtod_r+0x8>)
 8005af2:	f7ff ba19 	b.w	8004f28 <_strtod_l>
 8005af6:	bf00      	nop
 8005af8:	20000068 	.word	0x20000068

08005afc <_strtol_l.constprop.0>:
 8005afc:	2b24      	cmp	r3, #36	@ 0x24
 8005afe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b02:	4686      	mov	lr, r0
 8005b04:	4690      	mov	r8, r2
 8005b06:	d801      	bhi.n	8005b0c <_strtol_l.constprop.0+0x10>
 8005b08:	2b01      	cmp	r3, #1
 8005b0a:	d106      	bne.n	8005b1a <_strtol_l.constprop.0+0x1e>
 8005b0c:	f7fd fdba 	bl	8003684 <__errno>
 8005b10:	2316      	movs	r3, #22
 8005b12:	6003      	str	r3, [r0, #0]
 8005b14:	2000      	movs	r0, #0
 8005b16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005b1a:	4834      	ldr	r0, [pc, #208]	@ (8005bec <_strtol_l.constprop.0+0xf0>)
 8005b1c:	460d      	mov	r5, r1
 8005b1e:	462a      	mov	r2, r5
 8005b20:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005b24:	5d06      	ldrb	r6, [r0, r4]
 8005b26:	f016 0608 	ands.w	r6, r6, #8
 8005b2a:	d1f8      	bne.n	8005b1e <_strtol_l.constprop.0+0x22>
 8005b2c:	2c2d      	cmp	r4, #45	@ 0x2d
 8005b2e:	d12d      	bne.n	8005b8c <_strtol_l.constprop.0+0x90>
 8005b30:	782c      	ldrb	r4, [r5, #0]
 8005b32:	2601      	movs	r6, #1
 8005b34:	1c95      	adds	r5, r2, #2
 8005b36:	f033 0210 	bics.w	r2, r3, #16
 8005b3a:	d109      	bne.n	8005b50 <_strtol_l.constprop.0+0x54>
 8005b3c:	2c30      	cmp	r4, #48	@ 0x30
 8005b3e:	d12a      	bne.n	8005b96 <_strtol_l.constprop.0+0x9a>
 8005b40:	782a      	ldrb	r2, [r5, #0]
 8005b42:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8005b46:	2a58      	cmp	r2, #88	@ 0x58
 8005b48:	d125      	bne.n	8005b96 <_strtol_l.constprop.0+0x9a>
 8005b4a:	786c      	ldrb	r4, [r5, #1]
 8005b4c:	2310      	movs	r3, #16
 8005b4e:	3502      	adds	r5, #2
 8005b50:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8005b54:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8005b58:	2200      	movs	r2, #0
 8005b5a:	fbbc f9f3 	udiv	r9, ip, r3
 8005b5e:	4610      	mov	r0, r2
 8005b60:	fb03 ca19 	mls	sl, r3, r9, ip
 8005b64:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005b68:	2f09      	cmp	r7, #9
 8005b6a:	d81b      	bhi.n	8005ba4 <_strtol_l.constprop.0+0xa8>
 8005b6c:	463c      	mov	r4, r7
 8005b6e:	42a3      	cmp	r3, r4
 8005b70:	dd27      	ble.n	8005bc2 <_strtol_l.constprop.0+0xc6>
 8005b72:	1c57      	adds	r7, r2, #1
 8005b74:	d007      	beq.n	8005b86 <_strtol_l.constprop.0+0x8a>
 8005b76:	4581      	cmp	r9, r0
 8005b78:	d320      	bcc.n	8005bbc <_strtol_l.constprop.0+0xc0>
 8005b7a:	d101      	bne.n	8005b80 <_strtol_l.constprop.0+0x84>
 8005b7c:	45a2      	cmp	sl, r4
 8005b7e:	db1d      	blt.n	8005bbc <_strtol_l.constprop.0+0xc0>
 8005b80:	fb00 4003 	mla	r0, r0, r3, r4
 8005b84:	2201      	movs	r2, #1
 8005b86:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005b8a:	e7eb      	b.n	8005b64 <_strtol_l.constprop.0+0x68>
 8005b8c:	2c2b      	cmp	r4, #43	@ 0x2b
 8005b8e:	bf04      	itt	eq
 8005b90:	782c      	ldrbeq	r4, [r5, #0]
 8005b92:	1c95      	addeq	r5, r2, #2
 8005b94:	e7cf      	b.n	8005b36 <_strtol_l.constprop.0+0x3a>
 8005b96:	2b00      	cmp	r3, #0
 8005b98:	d1da      	bne.n	8005b50 <_strtol_l.constprop.0+0x54>
 8005b9a:	2c30      	cmp	r4, #48	@ 0x30
 8005b9c:	bf0c      	ite	eq
 8005b9e:	2308      	moveq	r3, #8
 8005ba0:	230a      	movne	r3, #10
 8005ba2:	e7d5      	b.n	8005b50 <_strtol_l.constprop.0+0x54>
 8005ba4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005ba8:	2f19      	cmp	r7, #25
 8005baa:	d801      	bhi.n	8005bb0 <_strtol_l.constprop.0+0xb4>
 8005bac:	3c37      	subs	r4, #55	@ 0x37
 8005bae:	e7de      	b.n	8005b6e <_strtol_l.constprop.0+0x72>
 8005bb0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005bb4:	2f19      	cmp	r7, #25
 8005bb6:	d804      	bhi.n	8005bc2 <_strtol_l.constprop.0+0xc6>
 8005bb8:	3c57      	subs	r4, #87	@ 0x57
 8005bba:	e7d8      	b.n	8005b6e <_strtol_l.constprop.0+0x72>
 8005bbc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005bc0:	e7e1      	b.n	8005b86 <_strtol_l.constprop.0+0x8a>
 8005bc2:	1c53      	adds	r3, r2, #1
 8005bc4:	d108      	bne.n	8005bd8 <_strtol_l.constprop.0+0xdc>
 8005bc6:	2322      	movs	r3, #34	@ 0x22
 8005bc8:	f8ce 3000 	str.w	r3, [lr]
 8005bcc:	4660      	mov	r0, ip
 8005bce:	f1b8 0f00 	cmp.w	r8, #0
 8005bd2:	d0a0      	beq.n	8005b16 <_strtol_l.constprop.0+0x1a>
 8005bd4:	1e69      	subs	r1, r5, #1
 8005bd6:	e006      	b.n	8005be6 <_strtol_l.constprop.0+0xea>
 8005bd8:	b106      	cbz	r6, 8005bdc <_strtol_l.constprop.0+0xe0>
 8005bda:	4240      	negs	r0, r0
 8005bdc:	f1b8 0f00 	cmp.w	r8, #0
 8005be0:	d099      	beq.n	8005b16 <_strtol_l.constprop.0+0x1a>
 8005be2:	2a00      	cmp	r2, #0
 8005be4:	d1f6      	bne.n	8005bd4 <_strtol_l.constprop.0+0xd8>
 8005be6:	f8c8 1000 	str.w	r1, [r8]
 8005bea:	e794      	b.n	8005b16 <_strtol_l.constprop.0+0x1a>
 8005bec:	080070b9 	.word	0x080070b9

08005bf0 <_strtol_r>:
 8005bf0:	f7ff bf84 	b.w	8005afc <_strtol_l.constprop.0>

08005bf4 <__ssputs_r>:
 8005bf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bf8:	688e      	ldr	r6, [r1, #8]
 8005bfa:	461f      	mov	r7, r3
 8005bfc:	42be      	cmp	r6, r7
 8005bfe:	680b      	ldr	r3, [r1, #0]
 8005c00:	4682      	mov	sl, r0
 8005c02:	460c      	mov	r4, r1
 8005c04:	4690      	mov	r8, r2
 8005c06:	d82d      	bhi.n	8005c64 <__ssputs_r+0x70>
 8005c08:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005c0c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005c10:	d026      	beq.n	8005c60 <__ssputs_r+0x6c>
 8005c12:	6965      	ldr	r5, [r4, #20]
 8005c14:	6909      	ldr	r1, [r1, #16]
 8005c16:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005c1a:	eba3 0901 	sub.w	r9, r3, r1
 8005c1e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005c22:	1c7b      	adds	r3, r7, #1
 8005c24:	444b      	add	r3, r9
 8005c26:	106d      	asrs	r5, r5, #1
 8005c28:	429d      	cmp	r5, r3
 8005c2a:	bf38      	it	cc
 8005c2c:	461d      	movcc	r5, r3
 8005c2e:	0553      	lsls	r3, r2, #21
 8005c30:	d527      	bpl.n	8005c82 <__ssputs_r+0x8e>
 8005c32:	4629      	mov	r1, r5
 8005c34:	f7fe fc1c 	bl	8004470 <_malloc_r>
 8005c38:	4606      	mov	r6, r0
 8005c3a:	b360      	cbz	r0, 8005c96 <__ssputs_r+0xa2>
 8005c3c:	6921      	ldr	r1, [r4, #16]
 8005c3e:	464a      	mov	r2, r9
 8005c40:	f000 fbee 	bl	8006420 <memcpy>
 8005c44:	89a3      	ldrh	r3, [r4, #12]
 8005c46:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005c4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005c4e:	81a3      	strh	r3, [r4, #12]
 8005c50:	6126      	str	r6, [r4, #16]
 8005c52:	6165      	str	r5, [r4, #20]
 8005c54:	444e      	add	r6, r9
 8005c56:	eba5 0509 	sub.w	r5, r5, r9
 8005c5a:	6026      	str	r6, [r4, #0]
 8005c5c:	60a5      	str	r5, [r4, #8]
 8005c5e:	463e      	mov	r6, r7
 8005c60:	42be      	cmp	r6, r7
 8005c62:	d900      	bls.n	8005c66 <__ssputs_r+0x72>
 8005c64:	463e      	mov	r6, r7
 8005c66:	6820      	ldr	r0, [r4, #0]
 8005c68:	4632      	mov	r2, r6
 8005c6a:	4641      	mov	r1, r8
 8005c6c:	f000 fb9c 	bl	80063a8 <memmove>
 8005c70:	68a3      	ldr	r3, [r4, #8]
 8005c72:	1b9b      	subs	r3, r3, r6
 8005c74:	60a3      	str	r3, [r4, #8]
 8005c76:	6823      	ldr	r3, [r4, #0]
 8005c78:	4433      	add	r3, r6
 8005c7a:	6023      	str	r3, [r4, #0]
 8005c7c:	2000      	movs	r0, #0
 8005c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c82:	462a      	mov	r2, r5
 8005c84:	f000 ff61 	bl	8006b4a <_realloc_r>
 8005c88:	4606      	mov	r6, r0
 8005c8a:	2800      	cmp	r0, #0
 8005c8c:	d1e0      	bne.n	8005c50 <__ssputs_r+0x5c>
 8005c8e:	6921      	ldr	r1, [r4, #16]
 8005c90:	4650      	mov	r0, sl
 8005c92:	f7fe fb79 	bl	8004388 <_free_r>
 8005c96:	230c      	movs	r3, #12
 8005c98:	f8ca 3000 	str.w	r3, [sl]
 8005c9c:	89a3      	ldrh	r3, [r4, #12]
 8005c9e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005ca2:	81a3      	strh	r3, [r4, #12]
 8005ca4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005ca8:	e7e9      	b.n	8005c7e <__ssputs_r+0x8a>
	...

08005cac <_svfiprintf_r>:
 8005cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cb0:	4698      	mov	r8, r3
 8005cb2:	898b      	ldrh	r3, [r1, #12]
 8005cb4:	061b      	lsls	r3, r3, #24
 8005cb6:	b09d      	sub	sp, #116	@ 0x74
 8005cb8:	4607      	mov	r7, r0
 8005cba:	460d      	mov	r5, r1
 8005cbc:	4614      	mov	r4, r2
 8005cbe:	d510      	bpl.n	8005ce2 <_svfiprintf_r+0x36>
 8005cc0:	690b      	ldr	r3, [r1, #16]
 8005cc2:	b973      	cbnz	r3, 8005ce2 <_svfiprintf_r+0x36>
 8005cc4:	2140      	movs	r1, #64	@ 0x40
 8005cc6:	f7fe fbd3 	bl	8004470 <_malloc_r>
 8005cca:	6028      	str	r0, [r5, #0]
 8005ccc:	6128      	str	r0, [r5, #16]
 8005cce:	b930      	cbnz	r0, 8005cde <_svfiprintf_r+0x32>
 8005cd0:	230c      	movs	r3, #12
 8005cd2:	603b      	str	r3, [r7, #0]
 8005cd4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005cd8:	b01d      	add	sp, #116	@ 0x74
 8005cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cde:	2340      	movs	r3, #64	@ 0x40
 8005ce0:	616b      	str	r3, [r5, #20]
 8005ce2:	2300      	movs	r3, #0
 8005ce4:	9309      	str	r3, [sp, #36]	@ 0x24
 8005ce6:	2320      	movs	r3, #32
 8005ce8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005cec:	f8cd 800c 	str.w	r8, [sp, #12]
 8005cf0:	2330      	movs	r3, #48	@ 0x30
 8005cf2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005e90 <_svfiprintf_r+0x1e4>
 8005cf6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005cfa:	f04f 0901 	mov.w	r9, #1
 8005cfe:	4623      	mov	r3, r4
 8005d00:	469a      	mov	sl, r3
 8005d02:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005d06:	b10a      	cbz	r2, 8005d0c <_svfiprintf_r+0x60>
 8005d08:	2a25      	cmp	r2, #37	@ 0x25
 8005d0a:	d1f9      	bne.n	8005d00 <_svfiprintf_r+0x54>
 8005d0c:	ebba 0b04 	subs.w	fp, sl, r4
 8005d10:	d00b      	beq.n	8005d2a <_svfiprintf_r+0x7e>
 8005d12:	465b      	mov	r3, fp
 8005d14:	4622      	mov	r2, r4
 8005d16:	4629      	mov	r1, r5
 8005d18:	4638      	mov	r0, r7
 8005d1a:	f7ff ff6b 	bl	8005bf4 <__ssputs_r>
 8005d1e:	3001      	adds	r0, #1
 8005d20:	f000 80a7 	beq.w	8005e72 <_svfiprintf_r+0x1c6>
 8005d24:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005d26:	445a      	add	r2, fp
 8005d28:	9209      	str	r2, [sp, #36]	@ 0x24
 8005d2a:	f89a 3000 	ldrb.w	r3, [sl]
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	f000 809f 	beq.w	8005e72 <_svfiprintf_r+0x1c6>
 8005d34:	2300      	movs	r3, #0
 8005d36:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005d3a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005d3e:	f10a 0a01 	add.w	sl, sl, #1
 8005d42:	9304      	str	r3, [sp, #16]
 8005d44:	9307      	str	r3, [sp, #28]
 8005d46:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005d4a:	931a      	str	r3, [sp, #104]	@ 0x68
 8005d4c:	4654      	mov	r4, sl
 8005d4e:	2205      	movs	r2, #5
 8005d50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d54:	484e      	ldr	r0, [pc, #312]	@ (8005e90 <_svfiprintf_r+0x1e4>)
 8005d56:	f7fa fa43 	bl	80001e0 <memchr>
 8005d5a:	9a04      	ldr	r2, [sp, #16]
 8005d5c:	b9d8      	cbnz	r0, 8005d96 <_svfiprintf_r+0xea>
 8005d5e:	06d0      	lsls	r0, r2, #27
 8005d60:	bf44      	itt	mi
 8005d62:	2320      	movmi	r3, #32
 8005d64:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005d68:	0711      	lsls	r1, r2, #28
 8005d6a:	bf44      	itt	mi
 8005d6c:	232b      	movmi	r3, #43	@ 0x2b
 8005d6e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005d72:	f89a 3000 	ldrb.w	r3, [sl]
 8005d76:	2b2a      	cmp	r3, #42	@ 0x2a
 8005d78:	d015      	beq.n	8005da6 <_svfiprintf_r+0xfa>
 8005d7a:	9a07      	ldr	r2, [sp, #28]
 8005d7c:	4654      	mov	r4, sl
 8005d7e:	2000      	movs	r0, #0
 8005d80:	f04f 0c0a 	mov.w	ip, #10
 8005d84:	4621      	mov	r1, r4
 8005d86:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005d8a:	3b30      	subs	r3, #48	@ 0x30
 8005d8c:	2b09      	cmp	r3, #9
 8005d8e:	d94b      	bls.n	8005e28 <_svfiprintf_r+0x17c>
 8005d90:	b1b0      	cbz	r0, 8005dc0 <_svfiprintf_r+0x114>
 8005d92:	9207      	str	r2, [sp, #28]
 8005d94:	e014      	b.n	8005dc0 <_svfiprintf_r+0x114>
 8005d96:	eba0 0308 	sub.w	r3, r0, r8
 8005d9a:	fa09 f303 	lsl.w	r3, r9, r3
 8005d9e:	4313      	orrs	r3, r2
 8005da0:	9304      	str	r3, [sp, #16]
 8005da2:	46a2      	mov	sl, r4
 8005da4:	e7d2      	b.n	8005d4c <_svfiprintf_r+0xa0>
 8005da6:	9b03      	ldr	r3, [sp, #12]
 8005da8:	1d19      	adds	r1, r3, #4
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	9103      	str	r1, [sp, #12]
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	bfbb      	ittet	lt
 8005db2:	425b      	neglt	r3, r3
 8005db4:	f042 0202 	orrlt.w	r2, r2, #2
 8005db8:	9307      	strge	r3, [sp, #28]
 8005dba:	9307      	strlt	r3, [sp, #28]
 8005dbc:	bfb8      	it	lt
 8005dbe:	9204      	strlt	r2, [sp, #16]
 8005dc0:	7823      	ldrb	r3, [r4, #0]
 8005dc2:	2b2e      	cmp	r3, #46	@ 0x2e
 8005dc4:	d10a      	bne.n	8005ddc <_svfiprintf_r+0x130>
 8005dc6:	7863      	ldrb	r3, [r4, #1]
 8005dc8:	2b2a      	cmp	r3, #42	@ 0x2a
 8005dca:	d132      	bne.n	8005e32 <_svfiprintf_r+0x186>
 8005dcc:	9b03      	ldr	r3, [sp, #12]
 8005dce:	1d1a      	adds	r2, r3, #4
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	9203      	str	r2, [sp, #12]
 8005dd4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005dd8:	3402      	adds	r4, #2
 8005dda:	9305      	str	r3, [sp, #20]
 8005ddc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005ea0 <_svfiprintf_r+0x1f4>
 8005de0:	7821      	ldrb	r1, [r4, #0]
 8005de2:	2203      	movs	r2, #3
 8005de4:	4650      	mov	r0, sl
 8005de6:	f7fa f9fb 	bl	80001e0 <memchr>
 8005dea:	b138      	cbz	r0, 8005dfc <_svfiprintf_r+0x150>
 8005dec:	9b04      	ldr	r3, [sp, #16]
 8005dee:	eba0 000a 	sub.w	r0, r0, sl
 8005df2:	2240      	movs	r2, #64	@ 0x40
 8005df4:	4082      	lsls	r2, r0
 8005df6:	4313      	orrs	r3, r2
 8005df8:	3401      	adds	r4, #1
 8005dfa:	9304      	str	r3, [sp, #16]
 8005dfc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005e00:	4824      	ldr	r0, [pc, #144]	@ (8005e94 <_svfiprintf_r+0x1e8>)
 8005e02:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005e06:	2206      	movs	r2, #6
 8005e08:	f7fa f9ea 	bl	80001e0 <memchr>
 8005e0c:	2800      	cmp	r0, #0
 8005e0e:	d036      	beq.n	8005e7e <_svfiprintf_r+0x1d2>
 8005e10:	4b21      	ldr	r3, [pc, #132]	@ (8005e98 <_svfiprintf_r+0x1ec>)
 8005e12:	bb1b      	cbnz	r3, 8005e5c <_svfiprintf_r+0x1b0>
 8005e14:	9b03      	ldr	r3, [sp, #12]
 8005e16:	3307      	adds	r3, #7
 8005e18:	f023 0307 	bic.w	r3, r3, #7
 8005e1c:	3308      	adds	r3, #8
 8005e1e:	9303      	str	r3, [sp, #12]
 8005e20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005e22:	4433      	add	r3, r6
 8005e24:	9309      	str	r3, [sp, #36]	@ 0x24
 8005e26:	e76a      	b.n	8005cfe <_svfiprintf_r+0x52>
 8005e28:	fb0c 3202 	mla	r2, ip, r2, r3
 8005e2c:	460c      	mov	r4, r1
 8005e2e:	2001      	movs	r0, #1
 8005e30:	e7a8      	b.n	8005d84 <_svfiprintf_r+0xd8>
 8005e32:	2300      	movs	r3, #0
 8005e34:	3401      	adds	r4, #1
 8005e36:	9305      	str	r3, [sp, #20]
 8005e38:	4619      	mov	r1, r3
 8005e3a:	f04f 0c0a 	mov.w	ip, #10
 8005e3e:	4620      	mov	r0, r4
 8005e40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005e44:	3a30      	subs	r2, #48	@ 0x30
 8005e46:	2a09      	cmp	r2, #9
 8005e48:	d903      	bls.n	8005e52 <_svfiprintf_r+0x1a6>
 8005e4a:	2b00      	cmp	r3, #0
 8005e4c:	d0c6      	beq.n	8005ddc <_svfiprintf_r+0x130>
 8005e4e:	9105      	str	r1, [sp, #20]
 8005e50:	e7c4      	b.n	8005ddc <_svfiprintf_r+0x130>
 8005e52:	fb0c 2101 	mla	r1, ip, r1, r2
 8005e56:	4604      	mov	r4, r0
 8005e58:	2301      	movs	r3, #1
 8005e5a:	e7f0      	b.n	8005e3e <_svfiprintf_r+0x192>
 8005e5c:	ab03      	add	r3, sp, #12
 8005e5e:	9300      	str	r3, [sp, #0]
 8005e60:	462a      	mov	r2, r5
 8005e62:	4b0e      	ldr	r3, [pc, #56]	@ (8005e9c <_svfiprintf_r+0x1f0>)
 8005e64:	a904      	add	r1, sp, #16
 8005e66:	4638      	mov	r0, r7
 8005e68:	f7fc fca0 	bl	80027ac <_printf_float>
 8005e6c:	1c42      	adds	r2, r0, #1
 8005e6e:	4606      	mov	r6, r0
 8005e70:	d1d6      	bne.n	8005e20 <_svfiprintf_r+0x174>
 8005e72:	89ab      	ldrh	r3, [r5, #12]
 8005e74:	065b      	lsls	r3, r3, #25
 8005e76:	f53f af2d 	bmi.w	8005cd4 <_svfiprintf_r+0x28>
 8005e7a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005e7c:	e72c      	b.n	8005cd8 <_svfiprintf_r+0x2c>
 8005e7e:	ab03      	add	r3, sp, #12
 8005e80:	9300      	str	r3, [sp, #0]
 8005e82:	462a      	mov	r2, r5
 8005e84:	4b05      	ldr	r3, [pc, #20]	@ (8005e9c <_svfiprintf_r+0x1f0>)
 8005e86:	a904      	add	r1, sp, #16
 8005e88:	4638      	mov	r0, r7
 8005e8a:	f7fc ff27 	bl	8002cdc <_printf_i>
 8005e8e:	e7ed      	b.n	8005e6c <_svfiprintf_r+0x1c0>
 8005e90:	080071b9 	.word	0x080071b9
 8005e94:	080071c3 	.word	0x080071c3
 8005e98:	080027ad 	.word	0x080027ad
 8005e9c:	08005bf5 	.word	0x08005bf5
 8005ea0:	080071bf 	.word	0x080071bf

08005ea4 <__sfputc_r>:
 8005ea4:	6893      	ldr	r3, [r2, #8]
 8005ea6:	3b01      	subs	r3, #1
 8005ea8:	2b00      	cmp	r3, #0
 8005eaa:	b410      	push	{r4}
 8005eac:	6093      	str	r3, [r2, #8]
 8005eae:	da08      	bge.n	8005ec2 <__sfputc_r+0x1e>
 8005eb0:	6994      	ldr	r4, [r2, #24]
 8005eb2:	42a3      	cmp	r3, r4
 8005eb4:	db01      	blt.n	8005eba <__sfputc_r+0x16>
 8005eb6:	290a      	cmp	r1, #10
 8005eb8:	d103      	bne.n	8005ec2 <__sfputc_r+0x1e>
 8005eba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005ebe:	f000 b9df 	b.w	8006280 <__swbuf_r>
 8005ec2:	6813      	ldr	r3, [r2, #0]
 8005ec4:	1c58      	adds	r0, r3, #1
 8005ec6:	6010      	str	r0, [r2, #0]
 8005ec8:	7019      	strb	r1, [r3, #0]
 8005eca:	4608      	mov	r0, r1
 8005ecc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005ed0:	4770      	bx	lr

08005ed2 <__sfputs_r>:
 8005ed2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ed4:	4606      	mov	r6, r0
 8005ed6:	460f      	mov	r7, r1
 8005ed8:	4614      	mov	r4, r2
 8005eda:	18d5      	adds	r5, r2, r3
 8005edc:	42ac      	cmp	r4, r5
 8005ede:	d101      	bne.n	8005ee4 <__sfputs_r+0x12>
 8005ee0:	2000      	movs	r0, #0
 8005ee2:	e007      	b.n	8005ef4 <__sfputs_r+0x22>
 8005ee4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005ee8:	463a      	mov	r2, r7
 8005eea:	4630      	mov	r0, r6
 8005eec:	f7ff ffda 	bl	8005ea4 <__sfputc_r>
 8005ef0:	1c43      	adds	r3, r0, #1
 8005ef2:	d1f3      	bne.n	8005edc <__sfputs_r+0xa>
 8005ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005ef8 <_vfiprintf_r>:
 8005ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005efc:	460d      	mov	r5, r1
 8005efe:	b09d      	sub	sp, #116	@ 0x74
 8005f00:	4614      	mov	r4, r2
 8005f02:	4698      	mov	r8, r3
 8005f04:	4606      	mov	r6, r0
 8005f06:	b118      	cbz	r0, 8005f10 <_vfiprintf_r+0x18>
 8005f08:	6a03      	ldr	r3, [r0, #32]
 8005f0a:	b90b      	cbnz	r3, 8005f10 <_vfiprintf_r+0x18>
 8005f0c:	f7fd faa6 	bl	800345c <__sinit>
 8005f10:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005f12:	07d9      	lsls	r1, r3, #31
 8005f14:	d405      	bmi.n	8005f22 <_vfiprintf_r+0x2a>
 8005f16:	89ab      	ldrh	r3, [r5, #12]
 8005f18:	059a      	lsls	r2, r3, #22
 8005f1a:	d402      	bmi.n	8005f22 <_vfiprintf_r+0x2a>
 8005f1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005f1e:	f7fd fbdc 	bl	80036da <__retarget_lock_acquire_recursive>
 8005f22:	89ab      	ldrh	r3, [r5, #12]
 8005f24:	071b      	lsls	r3, r3, #28
 8005f26:	d501      	bpl.n	8005f2c <_vfiprintf_r+0x34>
 8005f28:	692b      	ldr	r3, [r5, #16]
 8005f2a:	b99b      	cbnz	r3, 8005f54 <_vfiprintf_r+0x5c>
 8005f2c:	4629      	mov	r1, r5
 8005f2e:	4630      	mov	r0, r6
 8005f30:	f000 f9e4 	bl	80062fc <__swsetup_r>
 8005f34:	b170      	cbz	r0, 8005f54 <_vfiprintf_r+0x5c>
 8005f36:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005f38:	07dc      	lsls	r4, r3, #31
 8005f3a:	d504      	bpl.n	8005f46 <_vfiprintf_r+0x4e>
 8005f3c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005f40:	b01d      	add	sp, #116	@ 0x74
 8005f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f46:	89ab      	ldrh	r3, [r5, #12]
 8005f48:	0598      	lsls	r0, r3, #22
 8005f4a:	d4f7      	bmi.n	8005f3c <_vfiprintf_r+0x44>
 8005f4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005f4e:	f7fd fbc5 	bl	80036dc <__retarget_lock_release_recursive>
 8005f52:	e7f3      	b.n	8005f3c <_vfiprintf_r+0x44>
 8005f54:	2300      	movs	r3, #0
 8005f56:	9309      	str	r3, [sp, #36]	@ 0x24
 8005f58:	2320      	movs	r3, #32
 8005f5a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005f5e:	f8cd 800c 	str.w	r8, [sp, #12]
 8005f62:	2330      	movs	r3, #48	@ 0x30
 8005f64:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8006114 <_vfiprintf_r+0x21c>
 8005f68:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005f6c:	f04f 0901 	mov.w	r9, #1
 8005f70:	4623      	mov	r3, r4
 8005f72:	469a      	mov	sl, r3
 8005f74:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005f78:	b10a      	cbz	r2, 8005f7e <_vfiprintf_r+0x86>
 8005f7a:	2a25      	cmp	r2, #37	@ 0x25
 8005f7c:	d1f9      	bne.n	8005f72 <_vfiprintf_r+0x7a>
 8005f7e:	ebba 0b04 	subs.w	fp, sl, r4
 8005f82:	d00b      	beq.n	8005f9c <_vfiprintf_r+0xa4>
 8005f84:	465b      	mov	r3, fp
 8005f86:	4622      	mov	r2, r4
 8005f88:	4629      	mov	r1, r5
 8005f8a:	4630      	mov	r0, r6
 8005f8c:	f7ff ffa1 	bl	8005ed2 <__sfputs_r>
 8005f90:	3001      	adds	r0, #1
 8005f92:	f000 80a7 	beq.w	80060e4 <_vfiprintf_r+0x1ec>
 8005f96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005f98:	445a      	add	r2, fp
 8005f9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8005f9c:	f89a 3000 	ldrb.w	r3, [sl]
 8005fa0:	2b00      	cmp	r3, #0
 8005fa2:	f000 809f 	beq.w	80060e4 <_vfiprintf_r+0x1ec>
 8005fa6:	2300      	movs	r3, #0
 8005fa8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005fac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005fb0:	f10a 0a01 	add.w	sl, sl, #1
 8005fb4:	9304      	str	r3, [sp, #16]
 8005fb6:	9307      	str	r3, [sp, #28]
 8005fb8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005fbc:	931a      	str	r3, [sp, #104]	@ 0x68
 8005fbe:	4654      	mov	r4, sl
 8005fc0:	2205      	movs	r2, #5
 8005fc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005fc6:	4853      	ldr	r0, [pc, #332]	@ (8006114 <_vfiprintf_r+0x21c>)
 8005fc8:	f7fa f90a 	bl	80001e0 <memchr>
 8005fcc:	9a04      	ldr	r2, [sp, #16]
 8005fce:	b9d8      	cbnz	r0, 8006008 <_vfiprintf_r+0x110>
 8005fd0:	06d1      	lsls	r1, r2, #27
 8005fd2:	bf44      	itt	mi
 8005fd4:	2320      	movmi	r3, #32
 8005fd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005fda:	0713      	lsls	r3, r2, #28
 8005fdc:	bf44      	itt	mi
 8005fde:	232b      	movmi	r3, #43	@ 0x2b
 8005fe0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005fe4:	f89a 3000 	ldrb.w	r3, [sl]
 8005fe8:	2b2a      	cmp	r3, #42	@ 0x2a
 8005fea:	d015      	beq.n	8006018 <_vfiprintf_r+0x120>
 8005fec:	9a07      	ldr	r2, [sp, #28]
 8005fee:	4654      	mov	r4, sl
 8005ff0:	2000      	movs	r0, #0
 8005ff2:	f04f 0c0a 	mov.w	ip, #10
 8005ff6:	4621      	mov	r1, r4
 8005ff8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005ffc:	3b30      	subs	r3, #48	@ 0x30
 8005ffe:	2b09      	cmp	r3, #9
 8006000:	d94b      	bls.n	800609a <_vfiprintf_r+0x1a2>
 8006002:	b1b0      	cbz	r0, 8006032 <_vfiprintf_r+0x13a>
 8006004:	9207      	str	r2, [sp, #28]
 8006006:	e014      	b.n	8006032 <_vfiprintf_r+0x13a>
 8006008:	eba0 0308 	sub.w	r3, r0, r8
 800600c:	fa09 f303 	lsl.w	r3, r9, r3
 8006010:	4313      	orrs	r3, r2
 8006012:	9304      	str	r3, [sp, #16]
 8006014:	46a2      	mov	sl, r4
 8006016:	e7d2      	b.n	8005fbe <_vfiprintf_r+0xc6>
 8006018:	9b03      	ldr	r3, [sp, #12]
 800601a:	1d19      	adds	r1, r3, #4
 800601c:	681b      	ldr	r3, [r3, #0]
 800601e:	9103      	str	r1, [sp, #12]
 8006020:	2b00      	cmp	r3, #0
 8006022:	bfbb      	ittet	lt
 8006024:	425b      	neglt	r3, r3
 8006026:	f042 0202 	orrlt.w	r2, r2, #2
 800602a:	9307      	strge	r3, [sp, #28]
 800602c:	9307      	strlt	r3, [sp, #28]
 800602e:	bfb8      	it	lt
 8006030:	9204      	strlt	r2, [sp, #16]
 8006032:	7823      	ldrb	r3, [r4, #0]
 8006034:	2b2e      	cmp	r3, #46	@ 0x2e
 8006036:	d10a      	bne.n	800604e <_vfiprintf_r+0x156>
 8006038:	7863      	ldrb	r3, [r4, #1]
 800603a:	2b2a      	cmp	r3, #42	@ 0x2a
 800603c:	d132      	bne.n	80060a4 <_vfiprintf_r+0x1ac>
 800603e:	9b03      	ldr	r3, [sp, #12]
 8006040:	1d1a      	adds	r2, r3, #4
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	9203      	str	r2, [sp, #12]
 8006046:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800604a:	3402      	adds	r4, #2
 800604c:	9305      	str	r3, [sp, #20]
 800604e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8006124 <_vfiprintf_r+0x22c>
 8006052:	7821      	ldrb	r1, [r4, #0]
 8006054:	2203      	movs	r2, #3
 8006056:	4650      	mov	r0, sl
 8006058:	f7fa f8c2 	bl	80001e0 <memchr>
 800605c:	b138      	cbz	r0, 800606e <_vfiprintf_r+0x176>
 800605e:	9b04      	ldr	r3, [sp, #16]
 8006060:	eba0 000a 	sub.w	r0, r0, sl
 8006064:	2240      	movs	r2, #64	@ 0x40
 8006066:	4082      	lsls	r2, r0
 8006068:	4313      	orrs	r3, r2
 800606a:	3401      	adds	r4, #1
 800606c:	9304      	str	r3, [sp, #16]
 800606e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006072:	4829      	ldr	r0, [pc, #164]	@ (8006118 <_vfiprintf_r+0x220>)
 8006074:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006078:	2206      	movs	r2, #6
 800607a:	f7fa f8b1 	bl	80001e0 <memchr>
 800607e:	2800      	cmp	r0, #0
 8006080:	d03f      	beq.n	8006102 <_vfiprintf_r+0x20a>
 8006082:	4b26      	ldr	r3, [pc, #152]	@ (800611c <_vfiprintf_r+0x224>)
 8006084:	bb1b      	cbnz	r3, 80060ce <_vfiprintf_r+0x1d6>
 8006086:	9b03      	ldr	r3, [sp, #12]
 8006088:	3307      	adds	r3, #7
 800608a:	f023 0307 	bic.w	r3, r3, #7
 800608e:	3308      	adds	r3, #8
 8006090:	9303      	str	r3, [sp, #12]
 8006092:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006094:	443b      	add	r3, r7
 8006096:	9309      	str	r3, [sp, #36]	@ 0x24
 8006098:	e76a      	b.n	8005f70 <_vfiprintf_r+0x78>
 800609a:	fb0c 3202 	mla	r2, ip, r2, r3
 800609e:	460c      	mov	r4, r1
 80060a0:	2001      	movs	r0, #1
 80060a2:	e7a8      	b.n	8005ff6 <_vfiprintf_r+0xfe>
 80060a4:	2300      	movs	r3, #0
 80060a6:	3401      	adds	r4, #1
 80060a8:	9305      	str	r3, [sp, #20]
 80060aa:	4619      	mov	r1, r3
 80060ac:	f04f 0c0a 	mov.w	ip, #10
 80060b0:	4620      	mov	r0, r4
 80060b2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80060b6:	3a30      	subs	r2, #48	@ 0x30
 80060b8:	2a09      	cmp	r2, #9
 80060ba:	d903      	bls.n	80060c4 <_vfiprintf_r+0x1cc>
 80060bc:	2b00      	cmp	r3, #0
 80060be:	d0c6      	beq.n	800604e <_vfiprintf_r+0x156>
 80060c0:	9105      	str	r1, [sp, #20]
 80060c2:	e7c4      	b.n	800604e <_vfiprintf_r+0x156>
 80060c4:	fb0c 2101 	mla	r1, ip, r1, r2
 80060c8:	4604      	mov	r4, r0
 80060ca:	2301      	movs	r3, #1
 80060cc:	e7f0      	b.n	80060b0 <_vfiprintf_r+0x1b8>
 80060ce:	ab03      	add	r3, sp, #12
 80060d0:	9300      	str	r3, [sp, #0]
 80060d2:	462a      	mov	r2, r5
 80060d4:	4b12      	ldr	r3, [pc, #72]	@ (8006120 <_vfiprintf_r+0x228>)
 80060d6:	a904      	add	r1, sp, #16
 80060d8:	4630      	mov	r0, r6
 80060da:	f7fc fb67 	bl	80027ac <_printf_float>
 80060de:	4607      	mov	r7, r0
 80060e0:	1c78      	adds	r0, r7, #1
 80060e2:	d1d6      	bne.n	8006092 <_vfiprintf_r+0x19a>
 80060e4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80060e6:	07d9      	lsls	r1, r3, #31
 80060e8:	d405      	bmi.n	80060f6 <_vfiprintf_r+0x1fe>
 80060ea:	89ab      	ldrh	r3, [r5, #12]
 80060ec:	059a      	lsls	r2, r3, #22
 80060ee:	d402      	bmi.n	80060f6 <_vfiprintf_r+0x1fe>
 80060f0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80060f2:	f7fd faf3 	bl	80036dc <__retarget_lock_release_recursive>
 80060f6:	89ab      	ldrh	r3, [r5, #12]
 80060f8:	065b      	lsls	r3, r3, #25
 80060fa:	f53f af1f 	bmi.w	8005f3c <_vfiprintf_r+0x44>
 80060fe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006100:	e71e      	b.n	8005f40 <_vfiprintf_r+0x48>
 8006102:	ab03      	add	r3, sp, #12
 8006104:	9300      	str	r3, [sp, #0]
 8006106:	462a      	mov	r2, r5
 8006108:	4b05      	ldr	r3, [pc, #20]	@ (8006120 <_vfiprintf_r+0x228>)
 800610a:	a904      	add	r1, sp, #16
 800610c:	4630      	mov	r0, r6
 800610e:	f7fc fde5 	bl	8002cdc <_printf_i>
 8006112:	e7e4      	b.n	80060de <_vfiprintf_r+0x1e6>
 8006114:	080071b9 	.word	0x080071b9
 8006118:	080071c3 	.word	0x080071c3
 800611c:	080027ad 	.word	0x080027ad
 8006120:	08005ed3 	.word	0x08005ed3
 8006124:	080071bf 	.word	0x080071bf

08006128 <__sflush_r>:
 8006128:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800612c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006130:	0716      	lsls	r6, r2, #28
 8006132:	4605      	mov	r5, r0
 8006134:	460c      	mov	r4, r1
 8006136:	d454      	bmi.n	80061e2 <__sflush_r+0xba>
 8006138:	684b      	ldr	r3, [r1, #4]
 800613a:	2b00      	cmp	r3, #0
 800613c:	dc02      	bgt.n	8006144 <__sflush_r+0x1c>
 800613e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8006140:	2b00      	cmp	r3, #0
 8006142:	dd48      	ble.n	80061d6 <__sflush_r+0xae>
 8006144:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8006146:	2e00      	cmp	r6, #0
 8006148:	d045      	beq.n	80061d6 <__sflush_r+0xae>
 800614a:	2300      	movs	r3, #0
 800614c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8006150:	682f      	ldr	r7, [r5, #0]
 8006152:	6a21      	ldr	r1, [r4, #32]
 8006154:	602b      	str	r3, [r5, #0]
 8006156:	d030      	beq.n	80061ba <__sflush_r+0x92>
 8006158:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800615a:	89a3      	ldrh	r3, [r4, #12]
 800615c:	0759      	lsls	r1, r3, #29
 800615e:	d505      	bpl.n	800616c <__sflush_r+0x44>
 8006160:	6863      	ldr	r3, [r4, #4]
 8006162:	1ad2      	subs	r2, r2, r3
 8006164:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006166:	b10b      	cbz	r3, 800616c <__sflush_r+0x44>
 8006168:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800616a:	1ad2      	subs	r2, r2, r3
 800616c:	2300      	movs	r3, #0
 800616e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8006170:	6a21      	ldr	r1, [r4, #32]
 8006172:	4628      	mov	r0, r5
 8006174:	47b0      	blx	r6
 8006176:	1c43      	adds	r3, r0, #1
 8006178:	89a3      	ldrh	r3, [r4, #12]
 800617a:	d106      	bne.n	800618a <__sflush_r+0x62>
 800617c:	6829      	ldr	r1, [r5, #0]
 800617e:	291d      	cmp	r1, #29
 8006180:	d82b      	bhi.n	80061da <__sflush_r+0xb2>
 8006182:	4a2a      	ldr	r2, [pc, #168]	@ (800622c <__sflush_r+0x104>)
 8006184:	410a      	asrs	r2, r1
 8006186:	07d6      	lsls	r6, r2, #31
 8006188:	d427      	bmi.n	80061da <__sflush_r+0xb2>
 800618a:	2200      	movs	r2, #0
 800618c:	6062      	str	r2, [r4, #4]
 800618e:	04d9      	lsls	r1, r3, #19
 8006190:	6922      	ldr	r2, [r4, #16]
 8006192:	6022      	str	r2, [r4, #0]
 8006194:	d504      	bpl.n	80061a0 <__sflush_r+0x78>
 8006196:	1c42      	adds	r2, r0, #1
 8006198:	d101      	bne.n	800619e <__sflush_r+0x76>
 800619a:	682b      	ldr	r3, [r5, #0]
 800619c:	b903      	cbnz	r3, 80061a0 <__sflush_r+0x78>
 800619e:	6560      	str	r0, [r4, #84]	@ 0x54
 80061a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80061a2:	602f      	str	r7, [r5, #0]
 80061a4:	b1b9      	cbz	r1, 80061d6 <__sflush_r+0xae>
 80061a6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80061aa:	4299      	cmp	r1, r3
 80061ac:	d002      	beq.n	80061b4 <__sflush_r+0x8c>
 80061ae:	4628      	mov	r0, r5
 80061b0:	f7fe f8ea 	bl	8004388 <_free_r>
 80061b4:	2300      	movs	r3, #0
 80061b6:	6363      	str	r3, [r4, #52]	@ 0x34
 80061b8:	e00d      	b.n	80061d6 <__sflush_r+0xae>
 80061ba:	2301      	movs	r3, #1
 80061bc:	4628      	mov	r0, r5
 80061be:	47b0      	blx	r6
 80061c0:	4602      	mov	r2, r0
 80061c2:	1c50      	adds	r0, r2, #1
 80061c4:	d1c9      	bne.n	800615a <__sflush_r+0x32>
 80061c6:	682b      	ldr	r3, [r5, #0]
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d0c6      	beq.n	800615a <__sflush_r+0x32>
 80061cc:	2b1d      	cmp	r3, #29
 80061ce:	d001      	beq.n	80061d4 <__sflush_r+0xac>
 80061d0:	2b16      	cmp	r3, #22
 80061d2:	d11e      	bne.n	8006212 <__sflush_r+0xea>
 80061d4:	602f      	str	r7, [r5, #0]
 80061d6:	2000      	movs	r0, #0
 80061d8:	e022      	b.n	8006220 <__sflush_r+0xf8>
 80061da:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80061de:	b21b      	sxth	r3, r3
 80061e0:	e01b      	b.n	800621a <__sflush_r+0xf2>
 80061e2:	690f      	ldr	r7, [r1, #16]
 80061e4:	2f00      	cmp	r7, #0
 80061e6:	d0f6      	beq.n	80061d6 <__sflush_r+0xae>
 80061e8:	0793      	lsls	r3, r2, #30
 80061ea:	680e      	ldr	r6, [r1, #0]
 80061ec:	bf08      	it	eq
 80061ee:	694b      	ldreq	r3, [r1, #20]
 80061f0:	600f      	str	r7, [r1, #0]
 80061f2:	bf18      	it	ne
 80061f4:	2300      	movne	r3, #0
 80061f6:	eba6 0807 	sub.w	r8, r6, r7
 80061fa:	608b      	str	r3, [r1, #8]
 80061fc:	f1b8 0f00 	cmp.w	r8, #0
 8006200:	dde9      	ble.n	80061d6 <__sflush_r+0xae>
 8006202:	6a21      	ldr	r1, [r4, #32]
 8006204:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8006206:	4643      	mov	r3, r8
 8006208:	463a      	mov	r2, r7
 800620a:	4628      	mov	r0, r5
 800620c:	47b0      	blx	r6
 800620e:	2800      	cmp	r0, #0
 8006210:	dc08      	bgt.n	8006224 <__sflush_r+0xfc>
 8006212:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006216:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800621a:	81a3      	strh	r3, [r4, #12]
 800621c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006224:	4407      	add	r7, r0
 8006226:	eba8 0800 	sub.w	r8, r8, r0
 800622a:	e7e7      	b.n	80061fc <__sflush_r+0xd4>
 800622c:	dfbffffe 	.word	0xdfbffffe

08006230 <_fflush_r>:
 8006230:	b538      	push	{r3, r4, r5, lr}
 8006232:	690b      	ldr	r3, [r1, #16]
 8006234:	4605      	mov	r5, r0
 8006236:	460c      	mov	r4, r1
 8006238:	b913      	cbnz	r3, 8006240 <_fflush_r+0x10>
 800623a:	2500      	movs	r5, #0
 800623c:	4628      	mov	r0, r5
 800623e:	bd38      	pop	{r3, r4, r5, pc}
 8006240:	b118      	cbz	r0, 800624a <_fflush_r+0x1a>
 8006242:	6a03      	ldr	r3, [r0, #32]
 8006244:	b90b      	cbnz	r3, 800624a <_fflush_r+0x1a>
 8006246:	f7fd f909 	bl	800345c <__sinit>
 800624a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800624e:	2b00      	cmp	r3, #0
 8006250:	d0f3      	beq.n	800623a <_fflush_r+0xa>
 8006252:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006254:	07d0      	lsls	r0, r2, #31
 8006256:	d404      	bmi.n	8006262 <_fflush_r+0x32>
 8006258:	0599      	lsls	r1, r3, #22
 800625a:	d402      	bmi.n	8006262 <_fflush_r+0x32>
 800625c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800625e:	f7fd fa3c 	bl	80036da <__retarget_lock_acquire_recursive>
 8006262:	4628      	mov	r0, r5
 8006264:	4621      	mov	r1, r4
 8006266:	f7ff ff5f 	bl	8006128 <__sflush_r>
 800626a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800626c:	07da      	lsls	r2, r3, #31
 800626e:	4605      	mov	r5, r0
 8006270:	d4e4      	bmi.n	800623c <_fflush_r+0xc>
 8006272:	89a3      	ldrh	r3, [r4, #12]
 8006274:	059b      	lsls	r3, r3, #22
 8006276:	d4e1      	bmi.n	800623c <_fflush_r+0xc>
 8006278:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800627a:	f7fd fa2f 	bl	80036dc <__retarget_lock_release_recursive>
 800627e:	e7dd      	b.n	800623c <_fflush_r+0xc>

08006280 <__swbuf_r>:
 8006280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006282:	460e      	mov	r6, r1
 8006284:	4614      	mov	r4, r2
 8006286:	4605      	mov	r5, r0
 8006288:	b118      	cbz	r0, 8006292 <__swbuf_r+0x12>
 800628a:	6a03      	ldr	r3, [r0, #32]
 800628c:	b90b      	cbnz	r3, 8006292 <__swbuf_r+0x12>
 800628e:	f7fd f8e5 	bl	800345c <__sinit>
 8006292:	69a3      	ldr	r3, [r4, #24]
 8006294:	60a3      	str	r3, [r4, #8]
 8006296:	89a3      	ldrh	r3, [r4, #12]
 8006298:	071a      	lsls	r2, r3, #28
 800629a:	d501      	bpl.n	80062a0 <__swbuf_r+0x20>
 800629c:	6923      	ldr	r3, [r4, #16]
 800629e:	b943      	cbnz	r3, 80062b2 <__swbuf_r+0x32>
 80062a0:	4621      	mov	r1, r4
 80062a2:	4628      	mov	r0, r5
 80062a4:	f000 f82a 	bl	80062fc <__swsetup_r>
 80062a8:	b118      	cbz	r0, 80062b2 <__swbuf_r+0x32>
 80062aa:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80062ae:	4638      	mov	r0, r7
 80062b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80062b2:	6823      	ldr	r3, [r4, #0]
 80062b4:	6922      	ldr	r2, [r4, #16]
 80062b6:	1a98      	subs	r0, r3, r2
 80062b8:	6963      	ldr	r3, [r4, #20]
 80062ba:	b2f6      	uxtb	r6, r6
 80062bc:	4283      	cmp	r3, r0
 80062be:	4637      	mov	r7, r6
 80062c0:	dc05      	bgt.n	80062ce <__swbuf_r+0x4e>
 80062c2:	4621      	mov	r1, r4
 80062c4:	4628      	mov	r0, r5
 80062c6:	f7ff ffb3 	bl	8006230 <_fflush_r>
 80062ca:	2800      	cmp	r0, #0
 80062cc:	d1ed      	bne.n	80062aa <__swbuf_r+0x2a>
 80062ce:	68a3      	ldr	r3, [r4, #8]
 80062d0:	3b01      	subs	r3, #1
 80062d2:	60a3      	str	r3, [r4, #8]
 80062d4:	6823      	ldr	r3, [r4, #0]
 80062d6:	1c5a      	adds	r2, r3, #1
 80062d8:	6022      	str	r2, [r4, #0]
 80062da:	701e      	strb	r6, [r3, #0]
 80062dc:	6962      	ldr	r2, [r4, #20]
 80062de:	1c43      	adds	r3, r0, #1
 80062e0:	429a      	cmp	r2, r3
 80062e2:	d004      	beq.n	80062ee <__swbuf_r+0x6e>
 80062e4:	89a3      	ldrh	r3, [r4, #12]
 80062e6:	07db      	lsls	r3, r3, #31
 80062e8:	d5e1      	bpl.n	80062ae <__swbuf_r+0x2e>
 80062ea:	2e0a      	cmp	r6, #10
 80062ec:	d1df      	bne.n	80062ae <__swbuf_r+0x2e>
 80062ee:	4621      	mov	r1, r4
 80062f0:	4628      	mov	r0, r5
 80062f2:	f7ff ff9d 	bl	8006230 <_fflush_r>
 80062f6:	2800      	cmp	r0, #0
 80062f8:	d0d9      	beq.n	80062ae <__swbuf_r+0x2e>
 80062fa:	e7d6      	b.n	80062aa <__swbuf_r+0x2a>

080062fc <__swsetup_r>:
 80062fc:	b538      	push	{r3, r4, r5, lr}
 80062fe:	4b29      	ldr	r3, [pc, #164]	@ (80063a4 <__swsetup_r+0xa8>)
 8006300:	4605      	mov	r5, r0
 8006302:	6818      	ldr	r0, [r3, #0]
 8006304:	460c      	mov	r4, r1
 8006306:	b118      	cbz	r0, 8006310 <__swsetup_r+0x14>
 8006308:	6a03      	ldr	r3, [r0, #32]
 800630a:	b90b      	cbnz	r3, 8006310 <__swsetup_r+0x14>
 800630c:	f7fd f8a6 	bl	800345c <__sinit>
 8006310:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006314:	0719      	lsls	r1, r3, #28
 8006316:	d422      	bmi.n	800635e <__swsetup_r+0x62>
 8006318:	06da      	lsls	r2, r3, #27
 800631a:	d407      	bmi.n	800632c <__swsetup_r+0x30>
 800631c:	2209      	movs	r2, #9
 800631e:	602a      	str	r2, [r5, #0]
 8006320:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006324:	81a3      	strh	r3, [r4, #12]
 8006326:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800632a:	e033      	b.n	8006394 <__swsetup_r+0x98>
 800632c:	0758      	lsls	r0, r3, #29
 800632e:	d512      	bpl.n	8006356 <__swsetup_r+0x5a>
 8006330:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006332:	b141      	cbz	r1, 8006346 <__swsetup_r+0x4a>
 8006334:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006338:	4299      	cmp	r1, r3
 800633a:	d002      	beq.n	8006342 <__swsetup_r+0x46>
 800633c:	4628      	mov	r0, r5
 800633e:	f7fe f823 	bl	8004388 <_free_r>
 8006342:	2300      	movs	r3, #0
 8006344:	6363      	str	r3, [r4, #52]	@ 0x34
 8006346:	89a3      	ldrh	r3, [r4, #12]
 8006348:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800634c:	81a3      	strh	r3, [r4, #12]
 800634e:	2300      	movs	r3, #0
 8006350:	6063      	str	r3, [r4, #4]
 8006352:	6923      	ldr	r3, [r4, #16]
 8006354:	6023      	str	r3, [r4, #0]
 8006356:	89a3      	ldrh	r3, [r4, #12]
 8006358:	f043 0308 	orr.w	r3, r3, #8
 800635c:	81a3      	strh	r3, [r4, #12]
 800635e:	6923      	ldr	r3, [r4, #16]
 8006360:	b94b      	cbnz	r3, 8006376 <__swsetup_r+0x7a>
 8006362:	89a3      	ldrh	r3, [r4, #12]
 8006364:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006368:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800636c:	d003      	beq.n	8006376 <__swsetup_r+0x7a>
 800636e:	4621      	mov	r1, r4
 8006370:	4628      	mov	r0, r5
 8006372:	f000 fc5d 	bl	8006c30 <__smakebuf_r>
 8006376:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800637a:	f013 0201 	ands.w	r2, r3, #1
 800637e:	d00a      	beq.n	8006396 <__swsetup_r+0x9a>
 8006380:	2200      	movs	r2, #0
 8006382:	60a2      	str	r2, [r4, #8]
 8006384:	6962      	ldr	r2, [r4, #20]
 8006386:	4252      	negs	r2, r2
 8006388:	61a2      	str	r2, [r4, #24]
 800638a:	6922      	ldr	r2, [r4, #16]
 800638c:	b942      	cbnz	r2, 80063a0 <__swsetup_r+0xa4>
 800638e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006392:	d1c5      	bne.n	8006320 <__swsetup_r+0x24>
 8006394:	bd38      	pop	{r3, r4, r5, pc}
 8006396:	0799      	lsls	r1, r3, #30
 8006398:	bf58      	it	pl
 800639a:	6962      	ldrpl	r2, [r4, #20]
 800639c:	60a2      	str	r2, [r4, #8]
 800639e:	e7f4      	b.n	800638a <__swsetup_r+0x8e>
 80063a0:	2000      	movs	r0, #0
 80063a2:	e7f7      	b.n	8006394 <__swsetup_r+0x98>
 80063a4:	20000018 	.word	0x20000018

080063a8 <memmove>:
 80063a8:	4288      	cmp	r0, r1
 80063aa:	b510      	push	{r4, lr}
 80063ac:	eb01 0402 	add.w	r4, r1, r2
 80063b0:	d902      	bls.n	80063b8 <memmove+0x10>
 80063b2:	4284      	cmp	r4, r0
 80063b4:	4623      	mov	r3, r4
 80063b6:	d807      	bhi.n	80063c8 <memmove+0x20>
 80063b8:	1e43      	subs	r3, r0, #1
 80063ba:	42a1      	cmp	r1, r4
 80063bc:	d008      	beq.n	80063d0 <memmove+0x28>
 80063be:	f811 2b01 	ldrb.w	r2, [r1], #1
 80063c2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80063c6:	e7f8      	b.n	80063ba <memmove+0x12>
 80063c8:	4402      	add	r2, r0
 80063ca:	4601      	mov	r1, r0
 80063cc:	428a      	cmp	r2, r1
 80063ce:	d100      	bne.n	80063d2 <memmove+0x2a>
 80063d0:	bd10      	pop	{r4, pc}
 80063d2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80063d6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80063da:	e7f7      	b.n	80063cc <memmove+0x24>

080063dc <strncmp>:
 80063dc:	b510      	push	{r4, lr}
 80063de:	b16a      	cbz	r2, 80063fc <strncmp+0x20>
 80063e0:	3901      	subs	r1, #1
 80063e2:	1884      	adds	r4, r0, r2
 80063e4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80063e8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80063ec:	429a      	cmp	r2, r3
 80063ee:	d103      	bne.n	80063f8 <strncmp+0x1c>
 80063f0:	42a0      	cmp	r0, r4
 80063f2:	d001      	beq.n	80063f8 <strncmp+0x1c>
 80063f4:	2a00      	cmp	r2, #0
 80063f6:	d1f5      	bne.n	80063e4 <strncmp+0x8>
 80063f8:	1ad0      	subs	r0, r2, r3
 80063fa:	bd10      	pop	{r4, pc}
 80063fc:	4610      	mov	r0, r2
 80063fe:	e7fc      	b.n	80063fa <strncmp+0x1e>

08006400 <_sbrk_r>:
 8006400:	b538      	push	{r3, r4, r5, lr}
 8006402:	4d06      	ldr	r5, [pc, #24]	@ (800641c <_sbrk_r+0x1c>)
 8006404:	2300      	movs	r3, #0
 8006406:	4604      	mov	r4, r0
 8006408:	4608      	mov	r0, r1
 800640a:	602b      	str	r3, [r5, #0]
 800640c:	f7fb f886 	bl	800151c <_sbrk>
 8006410:	1c43      	adds	r3, r0, #1
 8006412:	d102      	bne.n	800641a <_sbrk_r+0x1a>
 8006414:	682b      	ldr	r3, [r5, #0]
 8006416:	b103      	cbz	r3, 800641a <_sbrk_r+0x1a>
 8006418:	6023      	str	r3, [r4, #0]
 800641a:	bd38      	pop	{r3, r4, r5, pc}
 800641c:	200003e8 	.word	0x200003e8

08006420 <memcpy>:
 8006420:	440a      	add	r2, r1
 8006422:	4291      	cmp	r1, r2
 8006424:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8006428:	d100      	bne.n	800642c <memcpy+0xc>
 800642a:	4770      	bx	lr
 800642c:	b510      	push	{r4, lr}
 800642e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006432:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006436:	4291      	cmp	r1, r2
 8006438:	d1f9      	bne.n	800642e <memcpy+0xe>
 800643a:	bd10      	pop	{r4, pc}
 800643c:	0000      	movs	r0, r0
	...

08006440 <nan>:
 8006440:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8006448 <nan+0x8>
 8006444:	4770      	bx	lr
 8006446:	bf00      	nop
 8006448:	00000000 	.word	0x00000000
 800644c:	7ff80000 	.word	0x7ff80000

08006450 <__assert_func>:
 8006450:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006452:	4614      	mov	r4, r2
 8006454:	461a      	mov	r2, r3
 8006456:	4b09      	ldr	r3, [pc, #36]	@ (800647c <__assert_func+0x2c>)
 8006458:	681b      	ldr	r3, [r3, #0]
 800645a:	4605      	mov	r5, r0
 800645c:	68d8      	ldr	r0, [r3, #12]
 800645e:	b954      	cbnz	r4, 8006476 <__assert_func+0x26>
 8006460:	4b07      	ldr	r3, [pc, #28]	@ (8006480 <__assert_func+0x30>)
 8006462:	461c      	mov	r4, r3
 8006464:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006468:	9100      	str	r1, [sp, #0]
 800646a:	462b      	mov	r3, r5
 800646c:	4905      	ldr	r1, [pc, #20]	@ (8006484 <__assert_func+0x34>)
 800646e:	f000 fba7 	bl	8006bc0 <fiprintf>
 8006472:	f000 fc3b 	bl	8006cec <abort>
 8006476:	4b04      	ldr	r3, [pc, #16]	@ (8006488 <__assert_func+0x38>)
 8006478:	e7f4      	b.n	8006464 <__assert_func+0x14>
 800647a:	bf00      	nop
 800647c:	20000018 	.word	0x20000018
 8006480:	0800720d 	.word	0x0800720d
 8006484:	080071df 	.word	0x080071df
 8006488:	080071d2 	.word	0x080071d2

0800648c <_calloc_r>:
 800648c:	b570      	push	{r4, r5, r6, lr}
 800648e:	fba1 5402 	umull	r5, r4, r1, r2
 8006492:	b93c      	cbnz	r4, 80064a4 <_calloc_r+0x18>
 8006494:	4629      	mov	r1, r5
 8006496:	f7fd ffeb 	bl	8004470 <_malloc_r>
 800649a:	4606      	mov	r6, r0
 800649c:	b928      	cbnz	r0, 80064aa <_calloc_r+0x1e>
 800649e:	2600      	movs	r6, #0
 80064a0:	4630      	mov	r0, r6
 80064a2:	bd70      	pop	{r4, r5, r6, pc}
 80064a4:	220c      	movs	r2, #12
 80064a6:	6002      	str	r2, [r0, #0]
 80064a8:	e7f9      	b.n	800649e <_calloc_r+0x12>
 80064aa:	462a      	mov	r2, r5
 80064ac:	4621      	mov	r1, r4
 80064ae:	f7fd f880 	bl	80035b2 <memset>
 80064b2:	e7f5      	b.n	80064a0 <_calloc_r+0x14>

080064b4 <rshift>:
 80064b4:	6903      	ldr	r3, [r0, #16]
 80064b6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80064ba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80064be:	ea4f 1261 	mov.w	r2, r1, asr #5
 80064c2:	f100 0414 	add.w	r4, r0, #20
 80064c6:	dd45      	ble.n	8006554 <rshift+0xa0>
 80064c8:	f011 011f 	ands.w	r1, r1, #31
 80064cc:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80064d0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80064d4:	d10c      	bne.n	80064f0 <rshift+0x3c>
 80064d6:	f100 0710 	add.w	r7, r0, #16
 80064da:	4629      	mov	r1, r5
 80064dc:	42b1      	cmp	r1, r6
 80064de:	d334      	bcc.n	800654a <rshift+0x96>
 80064e0:	1a9b      	subs	r3, r3, r2
 80064e2:	009b      	lsls	r3, r3, #2
 80064e4:	1eea      	subs	r2, r5, #3
 80064e6:	4296      	cmp	r6, r2
 80064e8:	bf38      	it	cc
 80064ea:	2300      	movcc	r3, #0
 80064ec:	4423      	add	r3, r4
 80064ee:	e015      	b.n	800651c <rshift+0x68>
 80064f0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80064f4:	f1c1 0820 	rsb	r8, r1, #32
 80064f8:	40cf      	lsrs	r7, r1
 80064fa:	f105 0e04 	add.w	lr, r5, #4
 80064fe:	46a1      	mov	r9, r4
 8006500:	4576      	cmp	r6, lr
 8006502:	46f4      	mov	ip, lr
 8006504:	d815      	bhi.n	8006532 <rshift+0x7e>
 8006506:	1a9a      	subs	r2, r3, r2
 8006508:	0092      	lsls	r2, r2, #2
 800650a:	3a04      	subs	r2, #4
 800650c:	3501      	adds	r5, #1
 800650e:	42ae      	cmp	r6, r5
 8006510:	bf38      	it	cc
 8006512:	2200      	movcc	r2, #0
 8006514:	18a3      	adds	r3, r4, r2
 8006516:	50a7      	str	r7, [r4, r2]
 8006518:	b107      	cbz	r7, 800651c <rshift+0x68>
 800651a:	3304      	adds	r3, #4
 800651c:	1b1a      	subs	r2, r3, r4
 800651e:	42a3      	cmp	r3, r4
 8006520:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8006524:	bf08      	it	eq
 8006526:	2300      	moveq	r3, #0
 8006528:	6102      	str	r2, [r0, #16]
 800652a:	bf08      	it	eq
 800652c:	6143      	streq	r3, [r0, #20]
 800652e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006532:	f8dc c000 	ldr.w	ip, [ip]
 8006536:	fa0c fc08 	lsl.w	ip, ip, r8
 800653a:	ea4c 0707 	orr.w	r7, ip, r7
 800653e:	f849 7b04 	str.w	r7, [r9], #4
 8006542:	f85e 7b04 	ldr.w	r7, [lr], #4
 8006546:	40cf      	lsrs	r7, r1
 8006548:	e7da      	b.n	8006500 <rshift+0x4c>
 800654a:	f851 cb04 	ldr.w	ip, [r1], #4
 800654e:	f847 cf04 	str.w	ip, [r7, #4]!
 8006552:	e7c3      	b.n	80064dc <rshift+0x28>
 8006554:	4623      	mov	r3, r4
 8006556:	e7e1      	b.n	800651c <rshift+0x68>

08006558 <__hexdig_fun>:
 8006558:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800655c:	2b09      	cmp	r3, #9
 800655e:	d802      	bhi.n	8006566 <__hexdig_fun+0xe>
 8006560:	3820      	subs	r0, #32
 8006562:	b2c0      	uxtb	r0, r0
 8006564:	4770      	bx	lr
 8006566:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800656a:	2b05      	cmp	r3, #5
 800656c:	d801      	bhi.n	8006572 <__hexdig_fun+0x1a>
 800656e:	3847      	subs	r0, #71	@ 0x47
 8006570:	e7f7      	b.n	8006562 <__hexdig_fun+0xa>
 8006572:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8006576:	2b05      	cmp	r3, #5
 8006578:	d801      	bhi.n	800657e <__hexdig_fun+0x26>
 800657a:	3827      	subs	r0, #39	@ 0x27
 800657c:	e7f1      	b.n	8006562 <__hexdig_fun+0xa>
 800657e:	2000      	movs	r0, #0
 8006580:	4770      	bx	lr
	...

08006584 <__gethex>:
 8006584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006588:	b085      	sub	sp, #20
 800658a:	468a      	mov	sl, r1
 800658c:	9302      	str	r3, [sp, #8]
 800658e:	680b      	ldr	r3, [r1, #0]
 8006590:	9001      	str	r0, [sp, #4]
 8006592:	4690      	mov	r8, r2
 8006594:	1c9c      	adds	r4, r3, #2
 8006596:	46a1      	mov	r9, r4
 8006598:	f814 0b01 	ldrb.w	r0, [r4], #1
 800659c:	2830      	cmp	r0, #48	@ 0x30
 800659e:	d0fa      	beq.n	8006596 <__gethex+0x12>
 80065a0:	eba9 0303 	sub.w	r3, r9, r3
 80065a4:	f1a3 0b02 	sub.w	fp, r3, #2
 80065a8:	f7ff ffd6 	bl	8006558 <__hexdig_fun>
 80065ac:	4605      	mov	r5, r0
 80065ae:	2800      	cmp	r0, #0
 80065b0:	d168      	bne.n	8006684 <__gethex+0x100>
 80065b2:	49a0      	ldr	r1, [pc, #640]	@ (8006834 <__gethex+0x2b0>)
 80065b4:	2201      	movs	r2, #1
 80065b6:	4648      	mov	r0, r9
 80065b8:	f7ff ff10 	bl	80063dc <strncmp>
 80065bc:	4607      	mov	r7, r0
 80065be:	2800      	cmp	r0, #0
 80065c0:	d167      	bne.n	8006692 <__gethex+0x10e>
 80065c2:	f899 0001 	ldrb.w	r0, [r9, #1]
 80065c6:	4626      	mov	r6, r4
 80065c8:	f7ff ffc6 	bl	8006558 <__hexdig_fun>
 80065cc:	2800      	cmp	r0, #0
 80065ce:	d062      	beq.n	8006696 <__gethex+0x112>
 80065d0:	4623      	mov	r3, r4
 80065d2:	7818      	ldrb	r0, [r3, #0]
 80065d4:	2830      	cmp	r0, #48	@ 0x30
 80065d6:	4699      	mov	r9, r3
 80065d8:	f103 0301 	add.w	r3, r3, #1
 80065dc:	d0f9      	beq.n	80065d2 <__gethex+0x4e>
 80065de:	f7ff ffbb 	bl	8006558 <__hexdig_fun>
 80065e2:	fab0 f580 	clz	r5, r0
 80065e6:	096d      	lsrs	r5, r5, #5
 80065e8:	f04f 0b01 	mov.w	fp, #1
 80065ec:	464a      	mov	r2, r9
 80065ee:	4616      	mov	r6, r2
 80065f0:	3201      	adds	r2, #1
 80065f2:	7830      	ldrb	r0, [r6, #0]
 80065f4:	f7ff ffb0 	bl	8006558 <__hexdig_fun>
 80065f8:	2800      	cmp	r0, #0
 80065fa:	d1f8      	bne.n	80065ee <__gethex+0x6a>
 80065fc:	498d      	ldr	r1, [pc, #564]	@ (8006834 <__gethex+0x2b0>)
 80065fe:	2201      	movs	r2, #1
 8006600:	4630      	mov	r0, r6
 8006602:	f7ff feeb 	bl	80063dc <strncmp>
 8006606:	2800      	cmp	r0, #0
 8006608:	d13f      	bne.n	800668a <__gethex+0x106>
 800660a:	b944      	cbnz	r4, 800661e <__gethex+0x9a>
 800660c:	1c74      	adds	r4, r6, #1
 800660e:	4622      	mov	r2, r4
 8006610:	4616      	mov	r6, r2
 8006612:	3201      	adds	r2, #1
 8006614:	7830      	ldrb	r0, [r6, #0]
 8006616:	f7ff ff9f 	bl	8006558 <__hexdig_fun>
 800661a:	2800      	cmp	r0, #0
 800661c:	d1f8      	bne.n	8006610 <__gethex+0x8c>
 800661e:	1ba4      	subs	r4, r4, r6
 8006620:	00a7      	lsls	r7, r4, #2
 8006622:	7833      	ldrb	r3, [r6, #0]
 8006624:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8006628:	2b50      	cmp	r3, #80	@ 0x50
 800662a:	d13e      	bne.n	80066aa <__gethex+0x126>
 800662c:	7873      	ldrb	r3, [r6, #1]
 800662e:	2b2b      	cmp	r3, #43	@ 0x2b
 8006630:	d033      	beq.n	800669a <__gethex+0x116>
 8006632:	2b2d      	cmp	r3, #45	@ 0x2d
 8006634:	d034      	beq.n	80066a0 <__gethex+0x11c>
 8006636:	1c71      	adds	r1, r6, #1
 8006638:	2400      	movs	r4, #0
 800663a:	7808      	ldrb	r0, [r1, #0]
 800663c:	f7ff ff8c 	bl	8006558 <__hexdig_fun>
 8006640:	1e43      	subs	r3, r0, #1
 8006642:	b2db      	uxtb	r3, r3
 8006644:	2b18      	cmp	r3, #24
 8006646:	d830      	bhi.n	80066aa <__gethex+0x126>
 8006648:	f1a0 0210 	sub.w	r2, r0, #16
 800664c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8006650:	f7ff ff82 	bl	8006558 <__hexdig_fun>
 8006654:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8006658:	fa5f fc8c 	uxtb.w	ip, ip
 800665c:	f1bc 0f18 	cmp.w	ip, #24
 8006660:	f04f 030a 	mov.w	r3, #10
 8006664:	d91e      	bls.n	80066a4 <__gethex+0x120>
 8006666:	b104      	cbz	r4, 800666a <__gethex+0xe6>
 8006668:	4252      	negs	r2, r2
 800666a:	4417      	add	r7, r2
 800666c:	f8ca 1000 	str.w	r1, [sl]
 8006670:	b1ed      	cbz	r5, 80066ae <__gethex+0x12a>
 8006672:	f1bb 0f00 	cmp.w	fp, #0
 8006676:	bf0c      	ite	eq
 8006678:	2506      	moveq	r5, #6
 800667a:	2500      	movne	r5, #0
 800667c:	4628      	mov	r0, r5
 800667e:	b005      	add	sp, #20
 8006680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006684:	2500      	movs	r5, #0
 8006686:	462c      	mov	r4, r5
 8006688:	e7b0      	b.n	80065ec <__gethex+0x68>
 800668a:	2c00      	cmp	r4, #0
 800668c:	d1c7      	bne.n	800661e <__gethex+0x9a>
 800668e:	4627      	mov	r7, r4
 8006690:	e7c7      	b.n	8006622 <__gethex+0x9e>
 8006692:	464e      	mov	r6, r9
 8006694:	462f      	mov	r7, r5
 8006696:	2501      	movs	r5, #1
 8006698:	e7c3      	b.n	8006622 <__gethex+0x9e>
 800669a:	2400      	movs	r4, #0
 800669c:	1cb1      	adds	r1, r6, #2
 800669e:	e7cc      	b.n	800663a <__gethex+0xb6>
 80066a0:	2401      	movs	r4, #1
 80066a2:	e7fb      	b.n	800669c <__gethex+0x118>
 80066a4:	fb03 0002 	mla	r0, r3, r2, r0
 80066a8:	e7ce      	b.n	8006648 <__gethex+0xc4>
 80066aa:	4631      	mov	r1, r6
 80066ac:	e7de      	b.n	800666c <__gethex+0xe8>
 80066ae:	eba6 0309 	sub.w	r3, r6, r9
 80066b2:	3b01      	subs	r3, #1
 80066b4:	4629      	mov	r1, r5
 80066b6:	2b07      	cmp	r3, #7
 80066b8:	dc0a      	bgt.n	80066d0 <__gethex+0x14c>
 80066ba:	9801      	ldr	r0, [sp, #4]
 80066bc:	f7fd ff64 	bl	8004588 <_Balloc>
 80066c0:	4604      	mov	r4, r0
 80066c2:	b940      	cbnz	r0, 80066d6 <__gethex+0x152>
 80066c4:	4b5c      	ldr	r3, [pc, #368]	@ (8006838 <__gethex+0x2b4>)
 80066c6:	4602      	mov	r2, r0
 80066c8:	21e4      	movs	r1, #228	@ 0xe4
 80066ca:	485c      	ldr	r0, [pc, #368]	@ (800683c <__gethex+0x2b8>)
 80066cc:	f7ff fec0 	bl	8006450 <__assert_func>
 80066d0:	3101      	adds	r1, #1
 80066d2:	105b      	asrs	r3, r3, #1
 80066d4:	e7ef      	b.n	80066b6 <__gethex+0x132>
 80066d6:	f100 0a14 	add.w	sl, r0, #20
 80066da:	2300      	movs	r3, #0
 80066dc:	4655      	mov	r5, sl
 80066de:	469b      	mov	fp, r3
 80066e0:	45b1      	cmp	r9, r6
 80066e2:	d337      	bcc.n	8006754 <__gethex+0x1d0>
 80066e4:	f845 bb04 	str.w	fp, [r5], #4
 80066e8:	eba5 050a 	sub.w	r5, r5, sl
 80066ec:	10ad      	asrs	r5, r5, #2
 80066ee:	6125      	str	r5, [r4, #16]
 80066f0:	4658      	mov	r0, fp
 80066f2:	f7fe f83b 	bl	800476c <__hi0bits>
 80066f6:	016d      	lsls	r5, r5, #5
 80066f8:	f8d8 6000 	ldr.w	r6, [r8]
 80066fc:	1a2d      	subs	r5, r5, r0
 80066fe:	42b5      	cmp	r5, r6
 8006700:	dd54      	ble.n	80067ac <__gethex+0x228>
 8006702:	1bad      	subs	r5, r5, r6
 8006704:	4629      	mov	r1, r5
 8006706:	4620      	mov	r0, r4
 8006708:	f7fe fbcf 	bl	8004eaa <__any_on>
 800670c:	4681      	mov	r9, r0
 800670e:	b178      	cbz	r0, 8006730 <__gethex+0x1ac>
 8006710:	1e6b      	subs	r3, r5, #1
 8006712:	1159      	asrs	r1, r3, #5
 8006714:	f003 021f 	and.w	r2, r3, #31
 8006718:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800671c:	f04f 0901 	mov.w	r9, #1
 8006720:	fa09 f202 	lsl.w	r2, r9, r2
 8006724:	420a      	tst	r2, r1
 8006726:	d003      	beq.n	8006730 <__gethex+0x1ac>
 8006728:	454b      	cmp	r3, r9
 800672a:	dc36      	bgt.n	800679a <__gethex+0x216>
 800672c:	f04f 0902 	mov.w	r9, #2
 8006730:	4629      	mov	r1, r5
 8006732:	4620      	mov	r0, r4
 8006734:	f7ff febe 	bl	80064b4 <rshift>
 8006738:	442f      	add	r7, r5
 800673a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800673e:	42bb      	cmp	r3, r7
 8006740:	da42      	bge.n	80067c8 <__gethex+0x244>
 8006742:	9801      	ldr	r0, [sp, #4]
 8006744:	4621      	mov	r1, r4
 8006746:	f7fd ff5f 	bl	8004608 <_Bfree>
 800674a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800674c:	2300      	movs	r3, #0
 800674e:	6013      	str	r3, [r2, #0]
 8006750:	25a3      	movs	r5, #163	@ 0xa3
 8006752:	e793      	b.n	800667c <__gethex+0xf8>
 8006754:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8006758:	2a2e      	cmp	r2, #46	@ 0x2e
 800675a:	d012      	beq.n	8006782 <__gethex+0x1fe>
 800675c:	2b20      	cmp	r3, #32
 800675e:	d104      	bne.n	800676a <__gethex+0x1e6>
 8006760:	f845 bb04 	str.w	fp, [r5], #4
 8006764:	f04f 0b00 	mov.w	fp, #0
 8006768:	465b      	mov	r3, fp
 800676a:	7830      	ldrb	r0, [r6, #0]
 800676c:	9303      	str	r3, [sp, #12]
 800676e:	f7ff fef3 	bl	8006558 <__hexdig_fun>
 8006772:	9b03      	ldr	r3, [sp, #12]
 8006774:	f000 000f 	and.w	r0, r0, #15
 8006778:	4098      	lsls	r0, r3
 800677a:	ea4b 0b00 	orr.w	fp, fp, r0
 800677e:	3304      	adds	r3, #4
 8006780:	e7ae      	b.n	80066e0 <__gethex+0x15c>
 8006782:	45b1      	cmp	r9, r6
 8006784:	d8ea      	bhi.n	800675c <__gethex+0x1d8>
 8006786:	492b      	ldr	r1, [pc, #172]	@ (8006834 <__gethex+0x2b0>)
 8006788:	9303      	str	r3, [sp, #12]
 800678a:	2201      	movs	r2, #1
 800678c:	4630      	mov	r0, r6
 800678e:	f7ff fe25 	bl	80063dc <strncmp>
 8006792:	9b03      	ldr	r3, [sp, #12]
 8006794:	2800      	cmp	r0, #0
 8006796:	d1e1      	bne.n	800675c <__gethex+0x1d8>
 8006798:	e7a2      	b.n	80066e0 <__gethex+0x15c>
 800679a:	1ea9      	subs	r1, r5, #2
 800679c:	4620      	mov	r0, r4
 800679e:	f7fe fb84 	bl	8004eaa <__any_on>
 80067a2:	2800      	cmp	r0, #0
 80067a4:	d0c2      	beq.n	800672c <__gethex+0x1a8>
 80067a6:	f04f 0903 	mov.w	r9, #3
 80067aa:	e7c1      	b.n	8006730 <__gethex+0x1ac>
 80067ac:	da09      	bge.n	80067c2 <__gethex+0x23e>
 80067ae:	1b75      	subs	r5, r6, r5
 80067b0:	4621      	mov	r1, r4
 80067b2:	9801      	ldr	r0, [sp, #4]
 80067b4:	462a      	mov	r2, r5
 80067b6:	f7fe f93f 	bl	8004a38 <__lshift>
 80067ba:	1b7f      	subs	r7, r7, r5
 80067bc:	4604      	mov	r4, r0
 80067be:	f100 0a14 	add.w	sl, r0, #20
 80067c2:	f04f 0900 	mov.w	r9, #0
 80067c6:	e7b8      	b.n	800673a <__gethex+0x1b6>
 80067c8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80067cc:	42bd      	cmp	r5, r7
 80067ce:	dd6f      	ble.n	80068b0 <__gethex+0x32c>
 80067d0:	1bed      	subs	r5, r5, r7
 80067d2:	42ae      	cmp	r6, r5
 80067d4:	dc34      	bgt.n	8006840 <__gethex+0x2bc>
 80067d6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80067da:	2b02      	cmp	r3, #2
 80067dc:	d022      	beq.n	8006824 <__gethex+0x2a0>
 80067de:	2b03      	cmp	r3, #3
 80067e0:	d024      	beq.n	800682c <__gethex+0x2a8>
 80067e2:	2b01      	cmp	r3, #1
 80067e4:	d115      	bne.n	8006812 <__gethex+0x28e>
 80067e6:	42ae      	cmp	r6, r5
 80067e8:	d113      	bne.n	8006812 <__gethex+0x28e>
 80067ea:	2e01      	cmp	r6, #1
 80067ec:	d10b      	bne.n	8006806 <__gethex+0x282>
 80067ee:	9a02      	ldr	r2, [sp, #8]
 80067f0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80067f4:	6013      	str	r3, [r2, #0]
 80067f6:	2301      	movs	r3, #1
 80067f8:	6123      	str	r3, [r4, #16]
 80067fa:	f8ca 3000 	str.w	r3, [sl]
 80067fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006800:	2562      	movs	r5, #98	@ 0x62
 8006802:	601c      	str	r4, [r3, #0]
 8006804:	e73a      	b.n	800667c <__gethex+0xf8>
 8006806:	1e71      	subs	r1, r6, #1
 8006808:	4620      	mov	r0, r4
 800680a:	f7fe fb4e 	bl	8004eaa <__any_on>
 800680e:	2800      	cmp	r0, #0
 8006810:	d1ed      	bne.n	80067ee <__gethex+0x26a>
 8006812:	9801      	ldr	r0, [sp, #4]
 8006814:	4621      	mov	r1, r4
 8006816:	f7fd fef7 	bl	8004608 <_Bfree>
 800681a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800681c:	2300      	movs	r3, #0
 800681e:	6013      	str	r3, [r2, #0]
 8006820:	2550      	movs	r5, #80	@ 0x50
 8006822:	e72b      	b.n	800667c <__gethex+0xf8>
 8006824:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006826:	2b00      	cmp	r3, #0
 8006828:	d1f3      	bne.n	8006812 <__gethex+0x28e>
 800682a:	e7e0      	b.n	80067ee <__gethex+0x26a>
 800682c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800682e:	2b00      	cmp	r3, #0
 8006830:	d1dd      	bne.n	80067ee <__gethex+0x26a>
 8006832:	e7ee      	b.n	8006812 <__gethex+0x28e>
 8006834:	08007060 	.word	0x08007060
 8006838:	08006ef5 	.word	0x08006ef5
 800683c:	0800720e 	.word	0x0800720e
 8006840:	1e6f      	subs	r7, r5, #1
 8006842:	f1b9 0f00 	cmp.w	r9, #0
 8006846:	d130      	bne.n	80068aa <__gethex+0x326>
 8006848:	b127      	cbz	r7, 8006854 <__gethex+0x2d0>
 800684a:	4639      	mov	r1, r7
 800684c:	4620      	mov	r0, r4
 800684e:	f7fe fb2c 	bl	8004eaa <__any_on>
 8006852:	4681      	mov	r9, r0
 8006854:	117a      	asrs	r2, r7, #5
 8006856:	2301      	movs	r3, #1
 8006858:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800685c:	f007 071f 	and.w	r7, r7, #31
 8006860:	40bb      	lsls	r3, r7
 8006862:	4213      	tst	r3, r2
 8006864:	4629      	mov	r1, r5
 8006866:	4620      	mov	r0, r4
 8006868:	bf18      	it	ne
 800686a:	f049 0902 	orrne.w	r9, r9, #2
 800686e:	f7ff fe21 	bl	80064b4 <rshift>
 8006872:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8006876:	1b76      	subs	r6, r6, r5
 8006878:	2502      	movs	r5, #2
 800687a:	f1b9 0f00 	cmp.w	r9, #0
 800687e:	d047      	beq.n	8006910 <__gethex+0x38c>
 8006880:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006884:	2b02      	cmp	r3, #2
 8006886:	d015      	beq.n	80068b4 <__gethex+0x330>
 8006888:	2b03      	cmp	r3, #3
 800688a:	d017      	beq.n	80068bc <__gethex+0x338>
 800688c:	2b01      	cmp	r3, #1
 800688e:	d109      	bne.n	80068a4 <__gethex+0x320>
 8006890:	f019 0f02 	tst.w	r9, #2
 8006894:	d006      	beq.n	80068a4 <__gethex+0x320>
 8006896:	f8da 3000 	ldr.w	r3, [sl]
 800689a:	ea49 0903 	orr.w	r9, r9, r3
 800689e:	f019 0f01 	tst.w	r9, #1
 80068a2:	d10e      	bne.n	80068c2 <__gethex+0x33e>
 80068a4:	f045 0510 	orr.w	r5, r5, #16
 80068a8:	e032      	b.n	8006910 <__gethex+0x38c>
 80068aa:	f04f 0901 	mov.w	r9, #1
 80068ae:	e7d1      	b.n	8006854 <__gethex+0x2d0>
 80068b0:	2501      	movs	r5, #1
 80068b2:	e7e2      	b.n	800687a <__gethex+0x2f6>
 80068b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80068b6:	f1c3 0301 	rsb	r3, r3, #1
 80068ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80068bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d0f0      	beq.n	80068a4 <__gethex+0x320>
 80068c2:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80068c6:	f104 0314 	add.w	r3, r4, #20
 80068ca:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80068ce:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80068d2:	f04f 0c00 	mov.w	ip, #0
 80068d6:	4618      	mov	r0, r3
 80068d8:	f853 2b04 	ldr.w	r2, [r3], #4
 80068dc:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 80068e0:	d01b      	beq.n	800691a <__gethex+0x396>
 80068e2:	3201      	adds	r2, #1
 80068e4:	6002      	str	r2, [r0, #0]
 80068e6:	2d02      	cmp	r5, #2
 80068e8:	f104 0314 	add.w	r3, r4, #20
 80068ec:	d13c      	bne.n	8006968 <__gethex+0x3e4>
 80068ee:	f8d8 2000 	ldr.w	r2, [r8]
 80068f2:	3a01      	subs	r2, #1
 80068f4:	42b2      	cmp	r2, r6
 80068f6:	d109      	bne.n	800690c <__gethex+0x388>
 80068f8:	1171      	asrs	r1, r6, #5
 80068fa:	2201      	movs	r2, #1
 80068fc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006900:	f006 061f 	and.w	r6, r6, #31
 8006904:	fa02 f606 	lsl.w	r6, r2, r6
 8006908:	421e      	tst	r6, r3
 800690a:	d13a      	bne.n	8006982 <__gethex+0x3fe>
 800690c:	f045 0520 	orr.w	r5, r5, #32
 8006910:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006912:	601c      	str	r4, [r3, #0]
 8006914:	9b02      	ldr	r3, [sp, #8]
 8006916:	601f      	str	r7, [r3, #0]
 8006918:	e6b0      	b.n	800667c <__gethex+0xf8>
 800691a:	4299      	cmp	r1, r3
 800691c:	f843 cc04 	str.w	ip, [r3, #-4]
 8006920:	d8d9      	bhi.n	80068d6 <__gethex+0x352>
 8006922:	68a3      	ldr	r3, [r4, #8]
 8006924:	459b      	cmp	fp, r3
 8006926:	db17      	blt.n	8006958 <__gethex+0x3d4>
 8006928:	6861      	ldr	r1, [r4, #4]
 800692a:	9801      	ldr	r0, [sp, #4]
 800692c:	3101      	adds	r1, #1
 800692e:	f7fd fe2b 	bl	8004588 <_Balloc>
 8006932:	4681      	mov	r9, r0
 8006934:	b918      	cbnz	r0, 800693e <__gethex+0x3ba>
 8006936:	4b1a      	ldr	r3, [pc, #104]	@ (80069a0 <__gethex+0x41c>)
 8006938:	4602      	mov	r2, r0
 800693a:	2184      	movs	r1, #132	@ 0x84
 800693c:	e6c5      	b.n	80066ca <__gethex+0x146>
 800693e:	6922      	ldr	r2, [r4, #16]
 8006940:	3202      	adds	r2, #2
 8006942:	f104 010c 	add.w	r1, r4, #12
 8006946:	0092      	lsls	r2, r2, #2
 8006948:	300c      	adds	r0, #12
 800694a:	f7ff fd69 	bl	8006420 <memcpy>
 800694e:	4621      	mov	r1, r4
 8006950:	9801      	ldr	r0, [sp, #4]
 8006952:	f7fd fe59 	bl	8004608 <_Bfree>
 8006956:	464c      	mov	r4, r9
 8006958:	6923      	ldr	r3, [r4, #16]
 800695a:	1c5a      	adds	r2, r3, #1
 800695c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006960:	6122      	str	r2, [r4, #16]
 8006962:	2201      	movs	r2, #1
 8006964:	615a      	str	r2, [r3, #20]
 8006966:	e7be      	b.n	80068e6 <__gethex+0x362>
 8006968:	6922      	ldr	r2, [r4, #16]
 800696a:	455a      	cmp	r2, fp
 800696c:	dd0b      	ble.n	8006986 <__gethex+0x402>
 800696e:	2101      	movs	r1, #1
 8006970:	4620      	mov	r0, r4
 8006972:	f7ff fd9f 	bl	80064b4 <rshift>
 8006976:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800697a:	3701      	adds	r7, #1
 800697c:	42bb      	cmp	r3, r7
 800697e:	f6ff aee0 	blt.w	8006742 <__gethex+0x1be>
 8006982:	2501      	movs	r5, #1
 8006984:	e7c2      	b.n	800690c <__gethex+0x388>
 8006986:	f016 061f 	ands.w	r6, r6, #31
 800698a:	d0fa      	beq.n	8006982 <__gethex+0x3fe>
 800698c:	4453      	add	r3, sl
 800698e:	f1c6 0620 	rsb	r6, r6, #32
 8006992:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006996:	f7fd fee9 	bl	800476c <__hi0bits>
 800699a:	42b0      	cmp	r0, r6
 800699c:	dbe7      	blt.n	800696e <__gethex+0x3ea>
 800699e:	e7f0      	b.n	8006982 <__gethex+0x3fe>
 80069a0:	08006ef5 	.word	0x08006ef5

080069a4 <L_shift>:
 80069a4:	f1c2 0208 	rsb	r2, r2, #8
 80069a8:	0092      	lsls	r2, r2, #2
 80069aa:	b570      	push	{r4, r5, r6, lr}
 80069ac:	f1c2 0620 	rsb	r6, r2, #32
 80069b0:	6843      	ldr	r3, [r0, #4]
 80069b2:	6804      	ldr	r4, [r0, #0]
 80069b4:	fa03 f506 	lsl.w	r5, r3, r6
 80069b8:	432c      	orrs	r4, r5
 80069ba:	40d3      	lsrs	r3, r2
 80069bc:	6004      	str	r4, [r0, #0]
 80069be:	f840 3f04 	str.w	r3, [r0, #4]!
 80069c2:	4288      	cmp	r0, r1
 80069c4:	d3f4      	bcc.n	80069b0 <L_shift+0xc>
 80069c6:	bd70      	pop	{r4, r5, r6, pc}

080069c8 <__match>:
 80069c8:	b530      	push	{r4, r5, lr}
 80069ca:	6803      	ldr	r3, [r0, #0]
 80069cc:	3301      	adds	r3, #1
 80069ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 80069d2:	b914      	cbnz	r4, 80069da <__match+0x12>
 80069d4:	6003      	str	r3, [r0, #0]
 80069d6:	2001      	movs	r0, #1
 80069d8:	bd30      	pop	{r4, r5, pc}
 80069da:	f813 2b01 	ldrb.w	r2, [r3], #1
 80069de:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80069e2:	2d19      	cmp	r5, #25
 80069e4:	bf98      	it	ls
 80069e6:	3220      	addls	r2, #32
 80069e8:	42a2      	cmp	r2, r4
 80069ea:	d0f0      	beq.n	80069ce <__match+0x6>
 80069ec:	2000      	movs	r0, #0
 80069ee:	e7f3      	b.n	80069d8 <__match+0x10>

080069f0 <__hexnan>:
 80069f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069f4:	680b      	ldr	r3, [r1, #0]
 80069f6:	6801      	ldr	r1, [r0, #0]
 80069f8:	115e      	asrs	r6, r3, #5
 80069fa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80069fe:	f013 031f 	ands.w	r3, r3, #31
 8006a02:	b087      	sub	sp, #28
 8006a04:	bf18      	it	ne
 8006a06:	3604      	addne	r6, #4
 8006a08:	2500      	movs	r5, #0
 8006a0a:	1f37      	subs	r7, r6, #4
 8006a0c:	4682      	mov	sl, r0
 8006a0e:	4690      	mov	r8, r2
 8006a10:	9301      	str	r3, [sp, #4]
 8006a12:	f846 5c04 	str.w	r5, [r6, #-4]
 8006a16:	46b9      	mov	r9, r7
 8006a18:	463c      	mov	r4, r7
 8006a1a:	9502      	str	r5, [sp, #8]
 8006a1c:	46ab      	mov	fp, r5
 8006a1e:	784a      	ldrb	r2, [r1, #1]
 8006a20:	1c4b      	adds	r3, r1, #1
 8006a22:	9303      	str	r3, [sp, #12]
 8006a24:	b342      	cbz	r2, 8006a78 <__hexnan+0x88>
 8006a26:	4610      	mov	r0, r2
 8006a28:	9105      	str	r1, [sp, #20]
 8006a2a:	9204      	str	r2, [sp, #16]
 8006a2c:	f7ff fd94 	bl	8006558 <__hexdig_fun>
 8006a30:	2800      	cmp	r0, #0
 8006a32:	d151      	bne.n	8006ad8 <__hexnan+0xe8>
 8006a34:	9a04      	ldr	r2, [sp, #16]
 8006a36:	9905      	ldr	r1, [sp, #20]
 8006a38:	2a20      	cmp	r2, #32
 8006a3a:	d818      	bhi.n	8006a6e <__hexnan+0x7e>
 8006a3c:	9b02      	ldr	r3, [sp, #8]
 8006a3e:	459b      	cmp	fp, r3
 8006a40:	dd13      	ble.n	8006a6a <__hexnan+0x7a>
 8006a42:	454c      	cmp	r4, r9
 8006a44:	d206      	bcs.n	8006a54 <__hexnan+0x64>
 8006a46:	2d07      	cmp	r5, #7
 8006a48:	dc04      	bgt.n	8006a54 <__hexnan+0x64>
 8006a4a:	462a      	mov	r2, r5
 8006a4c:	4649      	mov	r1, r9
 8006a4e:	4620      	mov	r0, r4
 8006a50:	f7ff ffa8 	bl	80069a4 <L_shift>
 8006a54:	4544      	cmp	r4, r8
 8006a56:	d952      	bls.n	8006afe <__hexnan+0x10e>
 8006a58:	2300      	movs	r3, #0
 8006a5a:	f1a4 0904 	sub.w	r9, r4, #4
 8006a5e:	f844 3c04 	str.w	r3, [r4, #-4]
 8006a62:	f8cd b008 	str.w	fp, [sp, #8]
 8006a66:	464c      	mov	r4, r9
 8006a68:	461d      	mov	r5, r3
 8006a6a:	9903      	ldr	r1, [sp, #12]
 8006a6c:	e7d7      	b.n	8006a1e <__hexnan+0x2e>
 8006a6e:	2a29      	cmp	r2, #41	@ 0x29
 8006a70:	d157      	bne.n	8006b22 <__hexnan+0x132>
 8006a72:	3102      	adds	r1, #2
 8006a74:	f8ca 1000 	str.w	r1, [sl]
 8006a78:	f1bb 0f00 	cmp.w	fp, #0
 8006a7c:	d051      	beq.n	8006b22 <__hexnan+0x132>
 8006a7e:	454c      	cmp	r4, r9
 8006a80:	d206      	bcs.n	8006a90 <__hexnan+0xa0>
 8006a82:	2d07      	cmp	r5, #7
 8006a84:	dc04      	bgt.n	8006a90 <__hexnan+0xa0>
 8006a86:	462a      	mov	r2, r5
 8006a88:	4649      	mov	r1, r9
 8006a8a:	4620      	mov	r0, r4
 8006a8c:	f7ff ff8a 	bl	80069a4 <L_shift>
 8006a90:	4544      	cmp	r4, r8
 8006a92:	d936      	bls.n	8006b02 <__hexnan+0x112>
 8006a94:	f1a8 0204 	sub.w	r2, r8, #4
 8006a98:	4623      	mov	r3, r4
 8006a9a:	f853 1b04 	ldr.w	r1, [r3], #4
 8006a9e:	f842 1f04 	str.w	r1, [r2, #4]!
 8006aa2:	429f      	cmp	r7, r3
 8006aa4:	d2f9      	bcs.n	8006a9a <__hexnan+0xaa>
 8006aa6:	1b3b      	subs	r3, r7, r4
 8006aa8:	f023 0303 	bic.w	r3, r3, #3
 8006aac:	3304      	adds	r3, #4
 8006aae:	3401      	adds	r4, #1
 8006ab0:	3e03      	subs	r6, #3
 8006ab2:	42b4      	cmp	r4, r6
 8006ab4:	bf88      	it	hi
 8006ab6:	2304      	movhi	r3, #4
 8006ab8:	4443      	add	r3, r8
 8006aba:	2200      	movs	r2, #0
 8006abc:	f843 2b04 	str.w	r2, [r3], #4
 8006ac0:	429f      	cmp	r7, r3
 8006ac2:	d2fb      	bcs.n	8006abc <__hexnan+0xcc>
 8006ac4:	683b      	ldr	r3, [r7, #0]
 8006ac6:	b91b      	cbnz	r3, 8006ad0 <__hexnan+0xe0>
 8006ac8:	4547      	cmp	r7, r8
 8006aca:	d128      	bne.n	8006b1e <__hexnan+0x12e>
 8006acc:	2301      	movs	r3, #1
 8006ace:	603b      	str	r3, [r7, #0]
 8006ad0:	2005      	movs	r0, #5
 8006ad2:	b007      	add	sp, #28
 8006ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ad8:	3501      	adds	r5, #1
 8006ada:	2d08      	cmp	r5, #8
 8006adc:	f10b 0b01 	add.w	fp, fp, #1
 8006ae0:	dd06      	ble.n	8006af0 <__hexnan+0x100>
 8006ae2:	4544      	cmp	r4, r8
 8006ae4:	d9c1      	bls.n	8006a6a <__hexnan+0x7a>
 8006ae6:	2300      	movs	r3, #0
 8006ae8:	f844 3c04 	str.w	r3, [r4, #-4]
 8006aec:	2501      	movs	r5, #1
 8006aee:	3c04      	subs	r4, #4
 8006af0:	6822      	ldr	r2, [r4, #0]
 8006af2:	f000 000f 	and.w	r0, r0, #15
 8006af6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8006afa:	6020      	str	r0, [r4, #0]
 8006afc:	e7b5      	b.n	8006a6a <__hexnan+0x7a>
 8006afe:	2508      	movs	r5, #8
 8006b00:	e7b3      	b.n	8006a6a <__hexnan+0x7a>
 8006b02:	9b01      	ldr	r3, [sp, #4]
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d0dd      	beq.n	8006ac4 <__hexnan+0xd4>
 8006b08:	f1c3 0320 	rsb	r3, r3, #32
 8006b0c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8006b10:	40da      	lsrs	r2, r3
 8006b12:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8006b16:	4013      	ands	r3, r2
 8006b18:	f846 3c04 	str.w	r3, [r6, #-4]
 8006b1c:	e7d2      	b.n	8006ac4 <__hexnan+0xd4>
 8006b1e:	3f04      	subs	r7, #4
 8006b20:	e7d0      	b.n	8006ac4 <__hexnan+0xd4>
 8006b22:	2004      	movs	r0, #4
 8006b24:	e7d5      	b.n	8006ad2 <__hexnan+0xe2>

08006b26 <__ascii_mbtowc>:
 8006b26:	b082      	sub	sp, #8
 8006b28:	b901      	cbnz	r1, 8006b2c <__ascii_mbtowc+0x6>
 8006b2a:	a901      	add	r1, sp, #4
 8006b2c:	b142      	cbz	r2, 8006b40 <__ascii_mbtowc+0x1a>
 8006b2e:	b14b      	cbz	r3, 8006b44 <__ascii_mbtowc+0x1e>
 8006b30:	7813      	ldrb	r3, [r2, #0]
 8006b32:	600b      	str	r3, [r1, #0]
 8006b34:	7812      	ldrb	r2, [r2, #0]
 8006b36:	1e10      	subs	r0, r2, #0
 8006b38:	bf18      	it	ne
 8006b3a:	2001      	movne	r0, #1
 8006b3c:	b002      	add	sp, #8
 8006b3e:	4770      	bx	lr
 8006b40:	4610      	mov	r0, r2
 8006b42:	e7fb      	b.n	8006b3c <__ascii_mbtowc+0x16>
 8006b44:	f06f 0001 	mvn.w	r0, #1
 8006b48:	e7f8      	b.n	8006b3c <__ascii_mbtowc+0x16>

08006b4a <_realloc_r>:
 8006b4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b4e:	4680      	mov	r8, r0
 8006b50:	4615      	mov	r5, r2
 8006b52:	460c      	mov	r4, r1
 8006b54:	b921      	cbnz	r1, 8006b60 <_realloc_r+0x16>
 8006b56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006b5a:	4611      	mov	r1, r2
 8006b5c:	f7fd bc88 	b.w	8004470 <_malloc_r>
 8006b60:	b92a      	cbnz	r2, 8006b6e <_realloc_r+0x24>
 8006b62:	f7fd fc11 	bl	8004388 <_free_r>
 8006b66:	2400      	movs	r4, #0
 8006b68:	4620      	mov	r0, r4
 8006b6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b6e:	f000 f8c4 	bl	8006cfa <_malloc_usable_size_r>
 8006b72:	4285      	cmp	r5, r0
 8006b74:	4606      	mov	r6, r0
 8006b76:	d802      	bhi.n	8006b7e <_realloc_r+0x34>
 8006b78:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8006b7c:	d8f4      	bhi.n	8006b68 <_realloc_r+0x1e>
 8006b7e:	4629      	mov	r1, r5
 8006b80:	4640      	mov	r0, r8
 8006b82:	f7fd fc75 	bl	8004470 <_malloc_r>
 8006b86:	4607      	mov	r7, r0
 8006b88:	2800      	cmp	r0, #0
 8006b8a:	d0ec      	beq.n	8006b66 <_realloc_r+0x1c>
 8006b8c:	42b5      	cmp	r5, r6
 8006b8e:	462a      	mov	r2, r5
 8006b90:	4621      	mov	r1, r4
 8006b92:	bf28      	it	cs
 8006b94:	4632      	movcs	r2, r6
 8006b96:	f7ff fc43 	bl	8006420 <memcpy>
 8006b9a:	4621      	mov	r1, r4
 8006b9c:	4640      	mov	r0, r8
 8006b9e:	f7fd fbf3 	bl	8004388 <_free_r>
 8006ba2:	463c      	mov	r4, r7
 8006ba4:	e7e0      	b.n	8006b68 <_realloc_r+0x1e>

08006ba6 <__ascii_wctomb>:
 8006ba6:	4603      	mov	r3, r0
 8006ba8:	4608      	mov	r0, r1
 8006baa:	b141      	cbz	r1, 8006bbe <__ascii_wctomb+0x18>
 8006bac:	2aff      	cmp	r2, #255	@ 0xff
 8006bae:	d904      	bls.n	8006bba <__ascii_wctomb+0x14>
 8006bb0:	228a      	movs	r2, #138	@ 0x8a
 8006bb2:	601a      	str	r2, [r3, #0]
 8006bb4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006bb8:	4770      	bx	lr
 8006bba:	700a      	strb	r2, [r1, #0]
 8006bbc:	2001      	movs	r0, #1
 8006bbe:	4770      	bx	lr

08006bc0 <fiprintf>:
 8006bc0:	b40e      	push	{r1, r2, r3}
 8006bc2:	b503      	push	{r0, r1, lr}
 8006bc4:	4601      	mov	r1, r0
 8006bc6:	ab03      	add	r3, sp, #12
 8006bc8:	4805      	ldr	r0, [pc, #20]	@ (8006be0 <fiprintf+0x20>)
 8006bca:	f853 2b04 	ldr.w	r2, [r3], #4
 8006bce:	6800      	ldr	r0, [r0, #0]
 8006bd0:	9301      	str	r3, [sp, #4]
 8006bd2:	f7ff f991 	bl	8005ef8 <_vfiprintf_r>
 8006bd6:	b002      	add	sp, #8
 8006bd8:	f85d eb04 	ldr.w	lr, [sp], #4
 8006bdc:	b003      	add	sp, #12
 8006bde:	4770      	bx	lr
 8006be0:	20000018 	.word	0x20000018

08006be4 <__swhatbuf_r>:
 8006be4:	b570      	push	{r4, r5, r6, lr}
 8006be6:	460c      	mov	r4, r1
 8006be8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006bec:	2900      	cmp	r1, #0
 8006bee:	b096      	sub	sp, #88	@ 0x58
 8006bf0:	4615      	mov	r5, r2
 8006bf2:	461e      	mov	r6, r3
 8006bf4:	da0d      	bge.n	8006c12 <__swhatbuf_r+0x2e>
 8006bf6:	89a3      	ldrh	r3, [r4, #12]
 8006bf8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006bfc:	f04f 0100 	mov.w	r1, #0
 8006c00:	bf14      	ite	ne
 8006c02:	2340      	movne	r3, #64	@ 0x40
 8006c04:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006c08:	2000      	movs	r0, #0
 8006c0a:	6031      	str	r1, [r6, #0]
 8006c0c:	602b      	str	r3, [r5, #0]
 8006c0e:	b016      	add	sp, #88	@ 0x58
 8006c10:	bd70      	pop	{r4, r5, r6, pc}
 8006c12:	466a      	mov	r2, sp
 8006c14:	f000 f848 	bl	8006ca8 <_fstat_r>
 8006c18:	2800      	cmp	r0, #0
 8006c1a:	dbec      	blt.n	8006bf6 <__swhatbuf_r+0x12>
 8006c1c:	9901      	ldr	r1, [sp, #4]
 8006c1e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006c22:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006c26:	4259      	negs	r1, r3
 8006c28:	4159      	adcs	r1, r3
 8006c2a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006c2e:	e7eb      	b.n	8006c08 <__swhatbuf_r+0x24>

08006c30 <__smakebuf_r>:
 8006c30:	898b      	ldrh	r3, [r1, #12]
 8006c32:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c34:	079d      	lsls	r5, r3, #30
 8006c36:	4606      	mov	r6, r0
 8006c38:	460c      	mov	r4, r1
 8006c3a:	d507      	bpl.n	8006c4c <__smakebuf_r+0x1c>
 8006c3c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006c40:	6023      	str	r3, [r4, #0]
 8006c42:	6123      	str	r3, [r4, #16]
 8006c44:	2301      	movs	r3, #1
 8006c46:	6163      	str	r3, [r4, #20]
 8006c48:	b003      	add	sp, #12
 8006c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c4c:	ab01      	add	r3, sp, #4
 8006c4e:	466a      	mov	r2, sp
 8006c50:	f7ff ffc8 	bl	8006be4 <__swhatbuf_r>
 8006c54:	9f00      	ldr	r7, [sp, #0]
 8006c56:	4605      	mov	r5, r0
 8006c58:	4639      	mov	r1, r7
 8006c5a:	4630      	mov	r0, r6
 8006c5c:	f7fd fc08 	bl	8004470 <_malloc_r>
 8006c60:	b948      	cbnz	r0, 8006c76 <__smakebuf_r+0x46>
 8006c62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006c66:	059a      	lsls	r2, r3, #22
 8006c68:	d4ee      	bmi.n	8006c48 <__smakebuf_r+0x18>
 8006c6a:	f023 0303 	bic.w	r3, r3, #3
 8006c6e:	f043 0302 	orr.w	r3, r3, #2
 8006c72:	81a3      	strh	r3, [r4, #12]
 8006c74:	e7e2      	b.n	8006c3c <__smakebuf_r+0xc>
 8006c76:	89a3      	ldrh	r3, [r4, #12]
 8006c78:	6020      	str	r0, [r4, #0]
 8006c7a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006c7e:	81a3      	strh	r3, [r4, #12]
 8006c80:	9b01      	ldr	r3, [sp, #4]
 8006c82:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006c86:	b15b      	cbz	r3, 8006ca0 <__smakebuf_r+0x70>
 8006c88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006c8c:	4630      	mov	r0, r6
 8006c8e:	f000 f81d 	bl	8006ccc <_isatty_r>
 8006c92:	b128      	cbz	r0, 8006ca0 <__smakebuf_r+0x70>
 8006c94:	89a3      	ldrh	r3, [r4, #12]
 8006c96:	f023 0303 	bic.w	r3, r3, #3
 8006c9a:	f043 0301 	orr.w	r3, r3, #1
 8006c9e:	81a3      	strh	r3, [r4, #12]
 8006ca0:	89a3      	ldrh	r3, [r4, #12]
 8006ca2:	431d      	orrs	r5, r3
 8006ca4:	81a5      	strh	r5, [r4, #12]
 8006ca6:	e7cf      	b.n	8006c48 <__smakebuf_r+0x18>

08006ca8 <_fstat_r>:
 8006ca8:	b538      	push	{r3, r4, r5, lr}
 8006caa:	4d07      	ldr	r5, [pc, #28]	@ (8006cc8 <_fstat_r+0x20>)
 8006cac:	2300      	movs	r3, #0
 8006cae:	4604      	mov	r4, r0
 8006cb0:	4608      	mov	r0, r1
 8006cb2:	4611      	mov	r1, r2
 8006cb4:	602b      	str	r3, [r5, #0]
 8006cb6:	f7fa fc09 	bl	80014cc <_fstat>
 8006cba:	1c43      	adds	r3, r0, #1
 8006cbc:	d102      	bne.n	8006cc4 <_fstat_r+0x1c>
 8006cbe:	682b      	ldr	r3, [r5, #0]
 8006cc0:	b103      	cbz	r3, 8006cc4 <_fstat_r+0x1c>
 8006cc2:	6023      	str	r3, [r4, #0]
 8006cc4:	bd38      	pop	{r3, r4, r5, pc}
 8006cc6:	bf00      	nop
 8006cc8:	200003e8 	.word	0x200003e8

08006ccc <_isatty_r>:
 8006ccc:	b538      	push	{r3, r4, r5, lr}
 8006cce:	4d06      	ldr	r5, [pc, #24]	@ (8006ce8 <_isatty_r+0x1c>)
 8006cd0:	2300      	movs	r3, #0
 8006cd2:	4604      	mov	r4, r0
 8006cd4:	4608      	mov	r0, r1
 8006cd6:	602b      	str	r3, [r5, #0]
 8006cd8:	f7fa fc08 	bl	80014ec <_isatty>
 8006cdc:	1c43      	adds	r3, r0, #1
 8006cde:	d102      	bne.n	8006ce6 <_isatty_r+0x1a>
 8006ce0:	682b      	ldr	r3, [r5, #0]
 8006ce2:	b103      	cbz	r3, 8006ce6 <_isatty_r+0x1a>
 8006ce4:	6023      	str	r3, [r4, #0]
 8006ce6:	bd38      	pop	{r3, r4, r5, pc}
 8006ce8:	200003e8 	.word	0x200003e8

08006cec <abort>:
 8006cec:	b508      	push	{r3, lr}
 8006cee:	2006      	movs	r0, #6
 8006cf0:	f000 f834 	bl	8006d5c <raise>
 8006cf4:	2001      	movs	r0, #1
 8006cf6:	f7fa fb99 	bl	800142c <_exit>

08006cfa <_malloc_usable_size_r>:
 8006cfa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006cfe:	1f18      	subs	r0, r3, #4
 8006d00:	2b00      	cmp	r3, #0
 8006d02:	bfbc      	itt	lt
 8006d04:	580b      	ldrlt	r3, [r1, r0]
 8006d06:	18c0      	addlt	r0, r0, r3
 8006d08:	4770      	bx	lr

08006d0a <_raise_r>:
 8006d0a:	291f      	cmp	r1, #31
 8006d0c:	b538      	push	{r3, r4, r5, lr}
 8006d0e:	4605      	mov	r5, r0
 8006d10:	460c      	mov	r4, r1
 8006d12:	d904      	bls.n	8006d1e <_raise_r+0x14>
 8006d14:	2316      	movs	r3, #22
 8006d16:	6003      	str	r3, [r0, #0]
 8006d18:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006d1c:	bd38      	pop	{r3, r4, r5, pc}
 8006d1e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006d20:	b112      	cbz	r2, 8006d28 <_raise_r+0x1e>
 8006d22:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006d26:	b94b      	cbnz	r3, 8006d3c <_raise_r+0x32>
 8006d28:	4628      	mov	r0, r5
 8006d2a:	f000 f831 	bl	8006d90 <_getpid_r>
 8006d2e:	4622      	mov	r2, r4
 8006d30:	4601      	mov	r1, r0
 8006d32:	4628      	mov	r0, r5
 8006d34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006d38:	f000 b818 	b.w	8006d6c <_kill_r>
 8006d3c:	2b01      	cmp	r3, #1
 8006d3e:	d00a      	beq.n	8006d56 <_raise_r+0x4c>
 8006d40:	1c59      	adds	r1, r3, #1
 8006d42:	d103      	bne.n	8006d4c <_raise_r+0x42>
 8006d44:	2316      	movs	r3, #22
 8006d46:	6003      	str	r3, [r0, #0]
 8006d48:	2001      	movs	r0, #1
 8006d4a:	e7e7      	b.n	8006d1c <_raise_r+0x12>
 8006d4c:	2100      	movs	r1, #0
 8006d4e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006d52:	4620      	mov	r0, r4
 8006d54:	4798      	blx	r3
 8006d56:	2000      	movs	r0, #0
 8006d58:	e7e0      	b.n	8006d1c <_raise_r+0x12>
	...

08006d5c <raise>:
 8006d5c:	4b02      	ldr	r3, [pc, #8]	@ (8006d68 <raise+0xc>)
 8006d5e:	4601      	mov	r1, r0
 8006d60:	6818      	ldr	r0, [r3, #0]
 8006d62:	f7ff bfd2 	b.w	8006d0a <_raise_r>
 8006d66:	bf00      	nop
 8006d68:	20000018 	.word	0x20000018

08006d6c <_kill_r>:
 8006d6c:	b538      	push	{r3, r4, r5, lr}
 8006d6e:	4d07      	ldr	r5, [pc, #28]	@ (8006d8c <_kill_r+0x20>)
 8006d70:	2300      	movs	r3, #0
 8006d72:	4604      	mov	r4, r0
 8006d74:	4608      	mov	r0, r1
 8006d76:	4611      	mov	r1, r2
 8006d78:	602b      	str	r3, [r5, #0]
 8006d7a:	f7fa fb47 	bl	800140c <_kill>
 8006d7e:	1c43      	adds	r3, r0, #1
 8006d80:	d102      	bne.n	8006d88 <_kill_r+0x1c>
 8006d82:	682b      	ldr	r3, [r5, #0]
 8006d84:	b103      	cbz	r3, 8006d88 <_kill_r+0x1c>
 8006d86:	6023      	str	r3, [r4, #0]
 8006d88:	bd38      	pop	{r3, r4, r5, pc}
 8006d8a:	bf00      	nop
 8006d8c:	200003e8 	.word	0x200003e8

08006d90 <_getpid_r>:
 8006d90:	f7fa bb34 	b.w	80013fc <_getpid>

08006d94 <_init>:
 8006d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d96:	bf00      	nop
 8006d98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006d9a:	bc08      	pop	{r3}
 8006d9c:	469e      	mov	lr, r3
 8006d9e:	4770      	bx	lr

08006da0 <_fini>:
 8006da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006da2:	bf00      	nop
 8006da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006da6:	bc08      	pop	{r3}
 8006da8:	469e      	mov	lr, r3
 8006daa:	4770      	bx	lr
