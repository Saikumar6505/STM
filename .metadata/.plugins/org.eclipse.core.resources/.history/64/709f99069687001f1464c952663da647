#include "we10.h"
#include <string.h>
#include<stdio.h>
extern UART_HandleTypeDef huart1;
extern UART_HandleTypeDef huart2;

#define WIFI_CONNECTED_RESPONSE "WIFI CONNECTED"
#define WIFI_NOT_CONNECTED_RESPONSE "WIFI NOT CONNECTED"
#define MQTT_CONNECTED_RESPONSE "MQTT CONNECTED"
#define CMD_SUCCESS "OK"

int WE10_check_response(char *expected_response, uint32_t timeout) {
    char buffer[128];
    HAL_UART_Receive(&huart1, (uint8_t*)buffer, sizeof(buffer), timeout);

    // Debug print to show the response
    printf("Response: %s\n", buffer);

    if (strstr(buffer, expected_response) != NULL) {
        return 1;  // Response matches the expected response
    }

    return 0;  // Response does not match
}

void WE10_reset(void) {
    char buffer[128];
    sprintf(&buffer[0], "CMD+RESET\r\n");
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
    HAL_UART_Transmit(&huart2, (uint8_t*)buffer, strlen(buffer), 1000);

    HAL_Delay(2000);  // Allow module to reset
}

int WE10_wifimode(void) {
    char buffer[128];
    sprintf(&buffer[0], "CMD+WIFIMODE=1\r\n");
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
    HAL_UART_Transmit(&huart2, (uint8_t*)buffer, strlen(buffer), 1000);

    HAL_Delay(5000);  // Allow time for response

    if (WE10_check_response(CMD_SUCCESS, 1000)) {
        return 1;  // Wi-Fi mode set successfully
    } else {
        printf("Error setting Wi-Fi mode\n");
        return 0;
    }
}

int WE10_contoap(void) {
    char buffer[128];
    sprintf(&buffer[0], "CMD+CONTOAP=VIVO,12345678\r\n");
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 10000);
    HAL_UART_Transmit(&huart2, (uint8_t*)buffer, strlen(buffer), 10000);

    HAL_Delay(5000);  // Allow time for response

    if (WE10_check_response(WIFI_CONNECTED_RESPONSE, 10000)) {
        return 1;  // Wi-Fi connected
    } else {
        printf("Error connecting to Wi-Fi\n");
        return 0;
    }
}

int MQTT_netcfg(void) {
    char buffer[128];
    sprintf(&buffer[0], "CMD+MQTTNETCFG=dev.rightech.io,1883\r\n");
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 10000);
    HAL_UART_Transmit(&huart2, (uint8_t*)buffer, strlen(buffer), 10000);
    HAL_Delay(500);

    if (!WE10_check_response(CMD_SUCCESS, 10000)) {
        printf("Error configuring MQTT network\n");
        return 0;
    }

    sprintf(&buffer[0], "CMD+MQTTCONCFG=3,mqtt-saikumarsunny2002-3ruesz,,,,,,,,,\r\n");
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
    HAL_UART_Transmit(&huart2, (uint8_t*)buffer, strlen(buffer), 1000);
    HAL_Delay(500);

    if (WE10_check_response(CMD_SUCCESS, 10000)) {
        return 1;  // MQTT configuration successful
    } else {
        printf("Error in MQTT configuration\n");
        return 0;
    }
}

int MQTT_start(void) {
    char buffer[128];
    sprintf(&buffer[0], "CMD+MQTTSTART=1\r\n");
    HAL_UART_Transmit(&huart1, (uint8_t*)buffer, strlen(buffer), 1000);
    HAL_UART_Transmit(&huart2, (uint8_t*)buffer, strlen(buffer), 1000);

    HAL_Delay(5000);

    if (WE10_check_response(MQTT_CONNECTED_RESPONSE, 1000)) {
        return 1;  // MQTT started successfully
    } else {
        printf("Error starting MQTT\n");
        return 0;
    }
}

void WE10_RestartInitialization(void) {
    WE10_reset();
    if (WE10_check_response(CMD_SUCCESS, 5000)) {  // Increased timeout
        return 1;
    } else {
        printf("Error setting Wi-Fi mode\n");
        return 0;
    }
    if (!WE10_wifimode()) {
        printf("Failed to set Wi-Fi mode\n");
        return;
    }

    if (!WE10_contoap()) {
        printf("Failed to connect to Wi-Fi\n");
        return;
    }

    if (!MQTT_netcfg()) {
        printf("Failed to configure MQTT\n");
        return;
    }

    if (!MQTT_start()) {
        printf("Failed to start MQTT\n");
    }
}
