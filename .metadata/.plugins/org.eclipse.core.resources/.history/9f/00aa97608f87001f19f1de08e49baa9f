#include "lcd_i2c.h"
#include "string.h"

// Define some I2C commands for the LCD
#define LCD_ADDRESS 0x27  // Change this if necessary for your I2C address

// Private function prototypes
static void lcd_send_command(uint8_t cmd);
static void lcd_send_data(uint8_t data);
static void lcd_delay(uint32_t delay);

// Function to initialize the LCD
void lcd_init(I2C_HandleTypeDef *hi2c) {
    HAL_Delay(20);  // Wait for LCD to power up
    lcd_send_command(0x33); // 11001100 Initialize
    lcd_send_command(0x32); // 11001000 Set to 4-bit mode
    lcd_send_command(0x28); // 00101000 2 lines, 5x7 matrix
    lcd_send_command(0x0C); // 00001100 Display ON, Cursor OFF
    lcd_send_command(0x01); // 00000001 Clear display
    lcd_send_command(0x06); // 00000110 Shift cursor right
}

// Function to send a command to the LCD
static void lcd_send_command(uint8_t cmd) {
    uint8_t data[4];

    data[0] = cmd & 0xF0; // Send higher nibble
    data[1] = (cmd << 4) & 0xF0; // Send lower nibble

    for (int i = 0; i < 2; i++) {
        HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &data[i], 1, HAL_MAX_DELAY);
        lcd_delay(2);  // Wait for the command to be processed
    }
}

// Function to send data to the LCD
static void lcd_send_data(uint8_t data) {
    uint8_t dataToSend[4];

    dataToSend[0] = (data & 0xF0) | 0x01; // Set RS to 1 for data, send higher nibble
    dataToSend[1] = (data << 4 & 0xF0) | 0x01; // Send lower nibble with RS

    for (int i = 0; i < 2; i++) {
        HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dataToSend[i], 1, HAL_MAX_DELAY);
        lcd_delay(2);  // Wait for the data to be processed
    }
}

// Function to clear the LCD
void lcd_clear(I2C_HandleTypeDef *hi2c) {
    lcd_send_command(0x01); // Clear display command
    lcd_delay(2);
}

// Function to put the cursor at a specific position
void lcd_put_cur(I2C_HandleTypeDef *hi2c, uint8_t row, uint8_t col) {
    uint8_t address;

    if (row == 0) {
        address = 0x80 + col; // First row
    } else if (row == 1) {
        address = 0xC0 + col; // Second row
    } else if (row == 2) {
        address = 0x94 + col; // Third row (if applicable)
    } else {
        address = 0xD4 + col; // Fourth row (if applicable)
    }

    lcd_send_command(address);
}

// Function to send a string to the LCD
void lcd_send_string(I2C_HandleTypeDef *hi2c, char *str) {
    while (*str) {
        lcd_send_data(*str++);
    }
}

// Function for delay (in milliseconds)
static void lcd_delay(uint32_t delay) {
    HAL_Delay(delay);
}
